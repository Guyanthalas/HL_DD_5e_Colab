<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cHelpAtf" name="Artificer" description="Masters of unlocking magic in everyday objects, artificers are supreme inventors. They see magic as a complex system waiting to be decoded and controlled. Artificers use tools to channel arcane power, crafting temporary and permanent magical objects. To cast a spell, an artificer could use alchemist’s supplies to create a potent elixir, calligrapher’s supplies to inscribe a sigil of power on an ally’s armor, or tinker’s tools to craft a temporary charm. The magic of artificers is tied to their tools and their talents." compset="Class" maxlimit="" uniqueness="unique">
    <fieldval field="cToolMax" value="1"/>
    <fieldval field="shortname" value="Artificer"/>
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cSpecSing" value="Artificer Specialist"/>
    <fieldval field="cSkillMax3" value="2"/>
    <fieldval field="cAbbr" value="ArR"/>
    <fieldval field="StartWeap" value="• any two simple weapons{br}• a light crossbow and 20 bolts"/>
    <fieldval field="StartArmor" value="(a) studded leather armor or (b) scale mail"/>
    <fieldval field="StartGear" value="thieves’ tools and a dungeoneer’s pack"/>
    <fieldval field="StartAll" value="You start with the following equipment, in addition to the equipment granted by your background:{br}• any two simple weapons{br}• a light crossbow and 20 bolts{br}• (a) studded leather armor or (b) scale mail{br}• thieves’ tools and a dungeoneer’s pack{br}{br}If you forgo this starting equipment, as well as the items offered by your background, you start with 5d4 × 10 gp to buy your equipment.{br}"/>
    <arrayval field="cAttrArray" index="18" value="10"/>
    <arrayval field="cAttrArray" index="3" value="2"/>
    <arrayval field="cAttrArray" index="7" value="4"/>
    <arrayval field="cAttrArray" index="11" value="6"/>
    <arrayval field="cCustTot" index="2" value="1"/>
    <arrayval field="cAttrArray" index="15" value="8"/>
    <arrayval field="cArrKnCan" index="0" value="2"/>
    <arrayval field="cArrKnCan" index="9" value="3"/>
    <arrayval field="cArrKnCan" index="13" value="4"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="ProfSave" tag="svINT"/>
    <tag group="AllowSkl3" tag="skInvestig"/>
    <tag group="AllowTool1" tag="Artisan"/>
    <tag group="PrimeAbil" tag="aINT"/>
    <tag group="ProfSave" tag="svCON"/>
    <tag group="CasterType" tag="MemAll"/>
    <tag group="sClass" tag="cHelpAtf"/>
    <tag group="CasterSrc" tag="Arcane"/>
    <tag group="Helper" tag="HalfCaster"/>
    <tag group="AllowSkl3" tag="skMedicine"/>
    <tag group="AllowSkl3" tag="skArcana"/>
    <tag group="AllowSkl3" tag="skNature"/>
    <tag group="AllowSkl3" tag="skHistory"/>
    <tag group="AllowSkl3" tag="skPercep"/>
    <tag group="AllowSkl3" tag="skSleight"/>
    <tag group="Classes" tag="ArtificerR" name="Artificer"/>
    <tag group="ArmProfGrp" tag="ArmorLight"/>
    <tag group="ArmProfGrp" tag="ArmorMed"/>
    <tag group="ArmProfGrp" tag="Shields"/>
    <tag group="ArmProfGrp" tag="WepSimple"/>
    <bootstrap thing="gTooThieve">
      <autotag group="Proficienc" tag="Tool"/>
      </bootstrap>
    <bootstrap thing="cAtf5CToolExp">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cAtf5CSSItem">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cAtf5CSoA">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cAtf5CMagIAd">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cAtf5CMagISa">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cAtf5CMagIMa">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cAtf5CInfItem">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="gTooTinker">
      <autotag group="Proficienc" tag="Tool"/>
      </bootstrap>
    <bootstrap thing="cAtf5CMagTink">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cAtf5CFlaGen">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cAtf5CRghToo">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cAtf5CCntrps">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="castattr" thing="aINT"/>
    <eval phase="PostAttr" priority="101" index="4"><![CDATA[doneif (hero.tagcount[Classes.ArtificerR] <> 1)


var spl as number
spl = hero.childfound[aINT].field[aBonus].value
spl = maximum(1,spl)

field[cMaxSpMem].value = spl]]></eval>
    <eval phase="Level" priority="6000" index="2"><![CDATA[     ~ Don't reduce our capabilities for multiclassing if this is the first
     ~ class we have taken.

     doneif (tagis[Helper.FirstLevel] <> 0)

     ~ Multiclass Artificers lose simple weapons     ~ proficiencies, all skills, and all save proficiencies

     perform delete[ArmProfGrp.WepSimple]
     perform delete[ProfSave.?]
     field[cSkillMax3].value -= 2
     field[cToolMax].value -= 1

     ~<before name="Class Helper forwards Proficiency Tags"/>

     ~<before name="Weapon and Armor group proficiencies forwarded to hero"/>
 
     ~<after name="Declare First Level"/>]]></eval>
    <eval phase="PreLevel" index="3">~Deal with out half level round up casting situation
var lev as number
var rnd as number
var dwn as number

lev = hero.tagcount[Classes.ArtificerR]
rnd = lev/2
dwn = lev/2

rnd = round(rnd,0,0)
dwn = round(dwn,0,-1)

if (rnd - dwn = 1) then
field[cCasterLev].value += 1
endif</eval>
    </thing>
  <thing id="cArtificerR" name="Artificer" compset="ClassLevel" maxlimit="20">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="ClassType" tag="Normal"/>
    <bootstrap thing="cHelpAtf"></bootstrap>
    <link linkage="helper" thing="cHelpAtf"/>
    </thing>
  <thing id="p5CAtfMagTink" name="Artificer: Magical Tinkering" description="You learn how to invest a spark of magic into otherwise mundane objects. To use this ability, you must have thieves’ tools or other artisan’s tools in hand. You use an action to touch a Tiny nonmagical object and give it one of these magical properties of your choice:\n\n{b}(1){/b} - The object sheds bright light in a 5-foot radius and dim light for an additional 5 feet.\n{b}(2){/b} - Whenever tapped by a creature, the object plays a recorded message, audible up to 10 feet away. You speak the message when you bestow this property on the object, and the recording cannot be more than 6 seconds long.\n{b}(3){/b} - The object continuously emits your choice of an odor or a nonverbal sound (wind, waves, chirping, or the like). The chosen smell or sound is perceivable up to 10 feet away.\n{b}(4){/b} - A static visual effect appears on one of the object’s surfaces. The effect can be a picture, up to 25 words of text, lines and shapes, or a mixture of these elements, as you choose. The chosen property lasts indefinitely. You can also use an action to touch the object and end this property.\n\nYou can do this to multiple objects, touching one object each time you use the feature, but a single object can bear only one of the properties at a time. The maximum number of objects you can affect with the feature at one time is equal to your Intelligence modifier (minimum of one object). If you try to exceed your maximum, the oldest property immediately ends, and then the new property applies." compset="InPlay" summary="A Tiny nonmagical object">
    <fieldval field="pCandExpr" value="component.OnlyGear"/>
    <fieldval field="pMinimum" value="1"/>
    <fieldval field="pMaximum" value="4"/>
    <fieldval field="pSource" value="Tiny nonmagical object"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="AdjInfo"/>
    <eval phase="Render" priority="999999999">~ If we&apos;re not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing&apos;s been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var iVar as number
     var sText as string
     var sString as string

     iVar = field[pAdjust].value

     if (iVar = 1) then
       sText = &quot; (Radiate light)&quot;
       sString = &quot;The object sheds bright light in a 5-foot radius and dim light for an additional 5 feet.&quot;
     endif

     if (iVar = 2) then
       sText = &quot; (Message)&quot;
       sString = &quot;Whenever tapped by a creature, the object emits a recorded message that can be heard up to 10 feet away. You utter the message when you bestow this property on the object, and the recording can be no more than 6 seconds long.&quot;
     endif

     if (iVar = 3) then
       sText = &quot; (Sound)&quot;
       sString = &quot;The object continuously emits your choice of an odor or a nonverbal sound (wind, waves,chirping, or the like). The chosen phenomenon is perceivable up to 10 feet away.&quot;
     endif

     if (iVar = 4) then
       sText = &quot; (Visual Effect)&quot;
       sString = &quot;A static visual effect appears on one of the object’s surfaces. This effect can be a picture, up to 25 words of text, lines and shapes, or a mixture of these elements, as you like.&quot;
     endif


     field[pChosen].chosen.field[livename].text = field[pChosen].chosen.field[name].text &amp; sText
     field[pChosen].chosen.field[CustDesc].text = sString
     field[pChosen].chosen.field[DescAppend].text = field[pDuration].text</eval>
    <pickreq thing="cArtificerR"/>
    </thing>
  <thing id="cAtf5CMagTink" name="Magical Tinkering" description="You learn how to invest a spark of magic into otherwise mundane objects. To use this ability, you must have thieves’ tools or other artisan’s tools in hand. You use an action to touch a Tiny nonmagical object and give it one of these magical properties of your choice:\n\n• The object sheds bright light in a 5-foot radius and dim light for an additional 5 feet.\n• Whenever tapped by a creature, the object plays a recorded message, audible up to 10 feet away. You speak the message when you bestow this property on the object, and the recording cannot be more than 6 seconds long.\n• The object continuously emits your choice of an odor or a nonverbal sound (wind, waves, chirping, or the like). The chosen smell or sound is perceivable up to 10 feet away.\n• A static visual effect appears on one of the object’s surfaces. The effect can be a picture, up to 25 words of text, lines and shapes, or a mixture of these elements, as you choose. The chosen property lasts indefinitely. You can also use an action to touch the object and end this property.\n\nYou can do this to multiple objects, touching one object each time you use the feature, but a single object can bear only one of the properties at a time. The maximum number of objects you can affect with the feature at one time is equal to your Intelligence modifier (minimum of one object). If you try to exceed your maximum, the oldest property immediately ends, and then the new property applies.\n\n{i}{b}Note:{/b} You can add the {u}Magical Tinkering{/u} Adjustment to select an item to add your chosen option to.{/i}" compset="ClSpecial" summary="Imbue a Tiny nonmagical object with simple magic.">
    <fieldval field="abDuration" value="Indefinite; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="Usage" tag="UsedUp"/>
    </thing>
  <thing id="cAtf5CToolExp" name="Tool Expertise" description="Starting at 6th level, your proficiency bonus is doubled for any ability check you make that uses your proficiency with a tool." compset="ClSpecial" summary="Double your proficiency bonus for proficient tools.">
    <comment>~foreach pick in hero from BaseEquip where “Profienc.Tool”
     ~  if (eachpick.tagis[ProfTool.?] &lt;= 0) then
     ~    perform hero.assign[ProfTooDbl.eachpick]
     ~  endif
     ~  nexteach</comment>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     foreach pick in hero from BaseEquip where "Proficienc.Tool"
       if (eachpick.tagis[ProfTool.?] >= 1) then
         perform eachpick.pulltags[ProfTooDbl.?]
         perform hero.pushtags[ProfTooDbl.?]
       endif
       nexteach]]>
      <before name="Calc skProfBon"/>
      </eval>
    </thing>
  <thing id="cAtf5CAlchemist" name="Alchemist" description="Among Artificers, alchemists are the greatest healers, as well as the ones most adept at wielding dangerous chemicals.\n\n{b}Proficiencies.{/b} You gain proficiency with alchemist’s supplies, assuming you don’t already have it. If you do, you gain proficiency in another artisan&apos;s tool of your choice." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="SpecSource" tag="cHelpAtf"/>
    <bootstrap thing="c5CAtf5CAlcSav">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cAtf5CAlcSpl">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CAtfCheMst">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CAtfExpElx">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="gSupAlchem">
      <autotag group="Hide" tag="Tool"/>
      </bootstrap>
    <bootstrap thing="c5CAtfRstRea">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <eval phase="PostLevel" priority="2400"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)

     if (hero.tagcount[ProfTool.gSupAlchem] = 0) then
       perform hero.childfound[gSupAlchem].assign[Proficienc.Tool]
       perform hero.childfound[gSupAlchem].assign[Helper.TrainTool]
       perform hero.assign[ProfTool.gSupAlchem]
     elseif (hero.tagcount[ProfTool.gSupAlchem] <> 0) then
       hero.childfound[cHelpAtf].field[cToolMax].value += 1
     endif]]></eval>
    </thing>
  <thing id="cAtf5CArtillerist" name="Artillerist" description="An Artillerist specializes in using magic to throw energy, projectiles, and explosions across the field of battle.\n\n{b}Proficiencies.{/b} You gain proficiency with woodcarver’s tools, assuming you don’t already have it. If you do, you gain proficiency in another artisan&apos;s tool of your choice." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="SpecSource" tag="cHelpAtf"/>
    <bootstrap thing="c5CAtfEldCan">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cAtf5CForPos">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CAtfArcFir">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="c5CAtfExpCan">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="gTooCarver">
      <autotag group="Hide" tag="Tool"/>
      </bootstrap>
    <bootstrap thing="cAtf5CArtSpl">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <eval phase="PreLevel" priority="2400"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     if (hero.tagcount[ProfTool.gTooCarver] = 0) then
       perform hero.childfound[gTooCarver].assign[Proficienc.Tool]
       perform hero.childfound[gTooCarver].assign[Helper.TrainTool]
       perform hero.assign[ProfTool.gTooCarver]
     elseif (hero.tagcount[ProfTool.gTooCarver] <> 0) then
       hero.childfound[cHelpAtf].field[cToolMax].value += 1
     endif]]></eval>
    </thing>
  <thing id="cAtf5CSSItem" name="Spell-Storing Item" description="Whenever you complete a long rest, you can touch a simple or martial weapon or an item that you are able to use as a spellcasting focus. You store a spell in it, choosing one 1st- or 2nd-level spell from the artificer spell list with a casting time of 1 action. You don’t need to have the spell prepared to choose it. With the object in hand, a creature can use an action to produce the spell’s effect from it, using your spellcasting ability modifier.\n\nThe spell stays in the object until it has been used a number of times equal to twice your Intelligence modifier (minimum of twice) or until you use this feature again." compset="ClSpecial" summary="Store a 1st or 2nd level spell inside an item for multiple uses.">
    <fieldval field="actName" value="Active?"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Usage" tag="UsedUp"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChooseSrc2" tag="Hero"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="User" tag="Activation"/>
    <eval phase="Render" priority="9999999" index="2"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     field[usrChosen2].chosen.field[livename].text &= " (" & field[usrChosen1].chosen.field[shortname].text & " stored)"
     field[usrChosen2].chosen.field[sbName].text &= " (" & field[usrChosen1].chosen.field[shortname].text & " stored)"]]></eval>
    <eval phase="Final" priority="30000"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     field[trkMax].value *= 2]]></eval>
    <eval phase="Final" index="3"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     field[usrCandid1].text = "component.BaseSpell & sClass.cHelpAtf & (sLevel.1 | sLevel.2) & sCastTime.Action1"
     field[usrCandid2].text = "(wProfReq.Martial|wProfReq.Simple) | (ToolCat.Artisan & GearType.gtTools & !Hide.Tool) | (thingid.gTooThieve & !Hide.Tool) | (!component.BaseCustSp & Custom.Infus) | (component.BaseArmor & Custom.ArcArm) | Custom.5CEbArcFoc"]]></eval>
    </thing>
  <thing id="cAtf5CMagIAd" name="Magic Item Adept" description="You are able to attune to up to four magic items at once.\n\nIf you craft a common or uncommon magic item, it only takes you one quarter of the usual time, and costs you only half the normal amount of gold." compset="ClSpecial" summary="Attune to up to four magic items, and your crafting time is reduced.">
    <eval phase="PostLevel" priority="10000"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     herofield[tAttunMax].value += 1]]></eval>
    </thing>
  <thing id="cAtf5CMagISa" name="Magic Item Savant" description="You are able to attune to up to five magic items at once.\n\nYou can ignore class, racial, spell, and level requirements to attune to or use a magic item." compset="ClSpecial" summary="Attune to up to five magic items, and ignore class, spell, or racial requirements.">
    <eval phase="PostLevel" priority="10000"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     herofield[tAttunMax].value += 1]]></eval>
    <eval phase="Final" index="2"><![CDATA[

     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)


foreach pick in hero from BaseEquip where "Helper.NeedAttune"
  perform eachpick.assign[thing.skipprereq]
  nexteach]]></eval>
    </thing>
  <thing id="cAtf5CMagIMa" name="Magic Item Master" description="You are able to attune to up to six magic items at once." compset="ClSpecial" summary="Attune to up to six magic items.">
    <eval phase="PostLevel" priority="10000"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     herofield[tAttunMax].value += 1]]></eval>
    </thing>
  <thing id="cAtf5CSoA" name="Soul of Artifice" description="You gain a +1 bonus to all saving throws for every magic item you are currently attuned to. Additionally, when you are reduced to 0 hit points but not killed outright, you can take a reaction to end one of your infusions. This causes you to drop to 1 hit point instead of 0." compset="ClSpecial" summary="Gain a bonus to saving throws for every attuned magic item. End an infusion to prevent death.">
    <tag group="abAction" tag="Reaction"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     var iCount as number
     iCount = 0

     foreach pick in hero from BaseEquip
       if (eachpick.field[gIsAttuned].value = 1) then
         iCount += 1
       endif
       nexteach

     hero.child[svAll].field[Bonus].value += iCount]]></eval>
    </thing>
  <thing id="c5CAtf5CAlcSav" name="Alchemical Savant" description="The healing and damage you create through magical chemicals is enhanced. When you cast a spell using your alchemist’s supplies as the spellcasting focus, you gain a bonus to one roll of the spell. That roll must restore hit points or be a acid or poison damage-dealing roll. The bonus equals your Intelligence modifier (minimum of +1)." compset="ClSpecial" summary="Gain +INT to healing, acid damage, or poison damage rolls."></thing>
  <thing id="cAtf5CAlcSpl" name="Alchemist Spells" description="Starting at 3rd level, you always have certain spells prepared after you reach particular levels in this class, as shown in the Alchemist Spells table. These spells count as artificer spells for you, but they don’t count against the number of artificer spells you prepare.\n\n{b}Alchemist Spells{/b}\n{b}Artificer Level Spell{/b}\n3rd                   {i}healing word, ray of sickness{/i}\n5th                   {i}acid arrow, flaming sphere{/i}\n9th                   {i}gaseous form, mass healing word{/i}\n13th                 {i}blight, death ward{/i}\n17th                 {i}cloudkill, raise dead{/i}" compset="ClSpecial" summary="Gain new spells as an Alchemist.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="sp5CRaySi">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spAcidArro">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spBlight">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spCloudkil">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spMsHealWd">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spDeatWard">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spRaisDead">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spGaseForm">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spFlamSphe">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spHealWord">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    </thing>
  <thing id="c5CAtfCheMst" name="Chemical Mastery" description="You gain resistance to acid damage and poison damage, and you are now immune to the poisoned condition.\n\nIn addition, you can cast {i}greater restoration{/i} and {i}heal{/i} once each without expending a spell slot and without providing the material component, provided you use alchemist’s supplies as the spellcasting focus. You regain the ability to cast each spell at the end of your next long rest." compset="ClSpecial" summary="Resist acid and poison, immune to poison, cast greater restoration and heal 1/long rest.">
    <bootstrap thing="spGreaRest">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.ArtificerR >=15]]></containerreq>
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="LongRest"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spHeal">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.ArtificerR >=15]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="PostAttr"><![CDATA[     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     perform hero.assign[CondImm.pcnPoison]
     perform hero.assign[DamageRes.dtAcid]
     perform hero.assign[DamageRes.dtPoison]]]></eval>
    </thing>
  <thing id="cAtf5CArtSpl" name="Artillerist Spells" description="Starting at 3rd level, you always have certain spells prepared after you reach particular levels in this class, as shown in the Artillerist Spells table. These spells count as artificer spells for you, but they don’t count against the number of artificer spells you prepare.\n\n{b}Artillerist Spells{/b}\n{b}Artificer Level Spell{/b}\n3rd                   {i}shield, thunderwave{/i}\n5th                   {i}scorching ray, shatter{/i}\n9th                   {i}fireball, wind wall{/i}\n13th                 {i}ice storm, wall of fire{/i}\n17th                 {i}cone of cold, wall of force{/i}" compset="ClSpecial" summary="Gain new spells as an Artillerist.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="spShield">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spScorRay">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spWallFire">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spConeCold">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spFireball">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spIceStor">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spWallForc">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spWindWall">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spShatter">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spThunderw">
      <autotag group="Helper" tag="Free"/>
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    </thing>
  <thing id="c5CAtfEldCan" name="Eldritch Cannon" description="Using woodcarver&apos;s tools or smith&apos;s tools, you can use an action to magically create a Small or Tiny eldritch cannon in an open space on a horizontal surface within 5 feet of you. A Small eldritch cannon occupies its space, and a Tiny one can be held in one hand.\n\nOnce you&apos;ve created a cannon, you cannot make another one until you complete a long rest or until you spend a spell slot of 1st level or higher. You can have only one cannon at a time, and you can&apos;t create one while your cannon is present.\n\nThe cannon is a magical object with AC of 18 and hit points equaling five times your artificer level. It is immune to poison damage and psychic damage, and all conditions. If it is forced to make an ability check or a saving throw, treat all its ability scores as 10 (+0). If the {i}mending{/i} spell is cast on it, it regains 2d6 hit points. It disappears if it is reduced to 0 hit points or after 1 hour has passed. You can also dismiss it early as an action.\n\nWhen you create the cannon, you determine its appearance and whether it has legs. You also decide which type of cannon it is, choosing from the options below. On each of your turns, if you are within 60 feet of it, you can use a bonus action to cause the cannon to activate. As part of the same bonus action, you can direct the cannon to walk or climb up to 15 feet to an unoccupied space, provided it has legs.\n\n{b}Flamethrower.{/b} The turret blasts fire in an adjacent 15-foot cone that you choose. Each creature in that area must make a Dexterity save verus your spell save DC, suffering 2d8 fire damage on a failure or half that on a success. The fire ignites any flammable objects in the area that aren’t being worn or carried.\n\n{b}Force Ballista.{/b} Make a ranged spell attack from the turret&apos;s space, targeting one creature or object within 120 feet of it. On a hit, the target takes 2d8 force damage. If the target is a creature, it&apos;s pushed up to 5 feet away from the cannon.\n\n{b}Protector.{/b} The turret emits a field of positive energy that grants itself and each creature of your choice within 10 feet of it a temporary hit points equaling 1d8 + your Intelligence modifier (a minimum of 1 temporary hit point).\n\n{i}Note: The turret will appear as a companion creature on you hero, but is an object. Choose its size and type from that companion. If you choose Tiny, the turret will also appear as a weapon in your weapons tab, so that you can hold it.{/i}" compset="ClSpecial" summary="Create a turret that can damage or heal.">
    <tag group="Custom" tag="Cannon1"/>
    <tag group="Custom" tag="Cannon2"/>
    <bootstrap thing="thp5CAtfDfTr">
      <containerreq phase="First" priority="100">fieldval:abValue4 = 1</containerreq>
      </bootstrap>
    <bootstrap thing="i5CEldCan">
      <containerreq phase="First" priority="100"><![CDATA[fieldval:abValue5 > 1]]></containerreq>
      <autotag group="Custom" tag="Cannon2"/>
      </bootstrap>
    <bootstrap thing="i5CEldCan">
      <containerreq phase="First" priority="100"><![CDATA[fieldval:abValue5 > 0]]></containerreq>
      <autotag group="Custom" tag="Cannon1"/>
      </bootstrap>
    <bootstrap thing="c5CEldCan">
      <autotag group="Custom" tag="Cannon1"/>
      </bootstrap>
    </thing>
  <thing id="cAtf5CForPos" name="Fortified Position" description="Your eldritch cannon produces a shimmering field of magical protection, providing half cover to you and your allies while you are within 10 feet of it.\n\nAlso, you can now have two cannons at the same time. You can create two with the same action (but not with the same spell slot). You can activate both of them with the same bonus action. They can be identical to each other or different, your choice. You cannot create a third cannon while you already have two." compset="ClSpecial" summary="You can create two cannons, and they provide half cover.">
    <tag group="Custom" tag="Cannon2"/>
    <bootstrap thing="c5CEldCan">
      <containerreq phase="First" priority="450"><![CDATA[count:Classes.ArtificerR >=15]]></containerreq>
      <autotag group="Custom" tag="Cannon2"/>
      </bootstrap>
    </thing>
  <thing id="r5CAtfEldCan" name="Eldritch Cannon" description="The eldritch cannon is an object, not a creature. Any features or attacks that target only creatures do not affect the cannon.\n\nUse the Size and Type fields in the In-Play tab to select what size and type of eldritch cannon this is." compset="Race">
    <fieldval field="rAC" value="8"/>
    <fieldval field="rSpeed" value="0"/>
    <fieldval field="rHPStart" value="1"/>
    <usesource source="5eTCoE"/>
    <usesource source="5eRftLWCP"/>
    <tag group="DamageImm" tag="dtPsychic"/>
    <tag group="CondImm" tag="pcnBlind"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="CondImm" tag="pcnDeaf"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="CondImm" tag="pcnGrapple"/>
    <tag group="CondImm" tag="pcnIncapa"/>
    <tag group="CondImm" tag="pcnParaly"/>
    <tag group="CondImm" tag="pcnPetri"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <tag group="CondImm" tag="pcnProne"/>
    <tag group="CondImm" tag="pcnRestr"/>
    <tag group="CondImm" tag="pcnStunned"/>
    <tag group="CondImm" tag="pcnUnconc"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="Alignment" tag="Unaligned"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <bootstrap thing="ra5CEldCanSz"></bootstrap>
    <bootstrap thing="tp5CObject"></bootstrap>
    <bootstrap thing="xClimb">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:rSpeed <> 0]]></containerreq>
      <autotag group="Value" tag="15"/>
      </bootstrap>
    <eval phase="PostAttr" priority="11000">~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = hero.childfound[ra5cEldCanTyp].field[abValue5].value * 5 - 1

herofield[tBonusHP].value = HPAdj</eval>
    </thing>
  <thing id="ra5CArtFlmThr" name="Flamethrower" description="When you use your bonus action to command it to, the turret blasts fire in an adjacent 15-foot cone that you choose. Each creature in that area must make a Dexterity save verus your spell save DC, suffering 1d8 fire damage on a failure or half that on a success. The fire ignites any flammable objects in the area that aren’t being worn or carried." compset="RaceSpec">
    <fieldval field="wDieCount" value="2"/>
    <fieldval field="wDieSize" value="8"/>
    <fieldval field="abRange" value="15-foot cone"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="DamageType" tag="dtFire"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="50000">~ If we&apos;re disabled, do nothing &amp; 
      doneif (tagis[Helper.Disable] = 1)

      field[abDC].value = hero.childfound[ra5cEldCanTyp].field[abValue3].value

      var Dice as number
      Dice = 2

      if (hero.childfound[ra5cEldCanTyp].field[abValue5].value &gt;= 9) then
        Dice = 3
        endif

      field[CustDesc].text = &quot;The turret blasts fire in an adjacent 15-foot cone that you choose. Each creature in that area must make a DC &quot; &amp; field[abDC].value &amp; &quot; Dexterity save, suffering &quot; &amp; Dice &amp; &quot;d8 fire damage on a failure or half that on a success. The fire ignites any flammable objects in the area that aren’t being worn or carried.&quot;
      field[wDieCount].value = Dice
      field[abText].text = Dice &amp; &quot;d8 fire&quot;</eval>
    </thing>
  <thing id="ra5CArtFrcBl" name="Force Ballista" description="When you use your bonus action to command the turret, you make a ranged spell attack from the turret&apos;s space, targeting one creature or object within 120 feet of it. On a hit, the target takes 2d8 force damage. If the target is a creature, it&apos;s pushed up to 5 feet away from the cannon." compset="RaceSpec">
    <fieldval field="abRange" value="120"/>
    <fieldval field="wDieCount" value="2"/>
    <fieldval field="wDieSize" value="8"/>
    <tag group="Helper" tag="NoAttrDam" name="NoAttrDam" abbrev="NoAttrDam"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="DamageType" tag="dtForce"/>
    <tag group="Helper" tag="SingleAtt" name="SingleAtt" abbrev="SingleAtt"/>
    <tag group="Helper" tag="WeaponSpec" name="WeaponSpec" abbrev="WeaponSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Bonus" name="Bonus" abbrev="Bon"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wProperty" tag="SpellB"/>
    <tag group="FeatureTyp" tag="Special"/>
    <eval phase="Final" priority="99999"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      field[wRanAtk].value = hero.childfound[ra5cEldCanTyp].field[abValue4].value]]></eval>
    </thing>
  <thing id="ra5CArtDef" name="Protector" description="When you use your bonus action to command it to, the turret emits a field of positive energy that grants itself and each creature of your choice within 10 feet of it a temporary hit points equaling 1d8 + your Intelligence modifier (a minimum of 1 temporary hit point)." compset="RaceSpec">
    <fieldval field="abRange" value="10-foot radius"/>
    <tag group="abAction" tag="Bonus" name="Bonus" abbrev="Bon"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="AppText"/>
    <bootstrap thing="thp5CAtfDfTr"></bootstrap>
    <eval phase="PostAttr" priority="10000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     var iMod as number
     iMod = maximum(1,master.child[aINT].field[aModBonus].value)

     field[abText].text = "1d8+" & iMod & " temp HP"]]></eval>
    </thing>
  <thing id="cAtf5CBatSmi" name="Battle Smith" description="Battle Smiths are experts at repairing both materiel and people. They are often accompanied by a protective companion, a steel defender.\n\n{b}Tool Proficiency.{/b} You gain proficiency with smith’s tools, assuming you don’t already it. If you do, you gain proficiency in another artisan&apos;s tool of your choice." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="SpecSource" tag="cHelpAtf" name="Artificer (2019)" abbrev="Artificer (2019)"/>
    <bootstrap thing="cAtf5CArcJolt">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cAtf5CBatSpl">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cAtf5CImpDef">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cAtf5CBatRdy">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cExtraAtt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cAtf5CSteDef">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="gTooSmith">
      <containerreq phase="First" priority="495">hero#ProfTool.gTooSmith = 0</containerreq>
      <autotag group="Hide" tag="Tool"/>
      </bootstrap>
    <eval phase="PostLevel" priority="2400"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)


     if (hero.tagcount[ProfTool.gTooSmith] = 0) then
       perform hero.childfound[gTooSmith].assign[Proficienc.Tool]
       perform hero.childfound[gTooSmith].assign[Helper.TrainTool]
       perform hero.assign[ProfTool.gTooSmith]
     elseif (hero.tagcount[ProfTool.gTooSmith] <> 0) then
       hero.childfound[cHelpAtf].field[cToolMax].value += 1
     endif]]></eval>
    </thing>
  <thing id="cAtf5CBatSpl" name="Battle Smith Spells" description="Starting at 3rd level, you always have certain spells prepared after you reach particular levels in this class, as shown in the Battle Smith Spells table. These spells count as artificer spells for you, but they don’t count against the number of artificer spells you prepare.\n\n{b}Battle Smith Spells{/b}\n{b}Artificer Level Spell{/b}\n3rd                   {i}heroism, shield{/i}\n5th                   {i}branding smite, warding bond{/i}\n9th                   {i}aura of vitality, conjure barrage{/i}\n13th                 {i}aura of purity, fire shield{/i}\n17th                 {i}banishing smite, mass cure wounds{/i}" compset="ClSpecial" summary="Gain new spells as a Battle Smith.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <bootstrap thing="spHeroism">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spBranSmit">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spFireShie">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spMassCure">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="sp5CAurVit">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="sp5CBanSmi">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="sp5CAurPur">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="sp5CConjBa">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spWardBond">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spShield">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    </thing>
  <thing id="cAtf5CBatRdy" name="Battle Ready" description="When you reach 3rd level, your combat training and your experiments with magic and have paid off in two ways:\n\n• You gain proficiency with martial weapons.\n• When you attack with a magic weapon, you can use your Intelligence modifier, instead of Strength or Dexterity, for the attack and damage rolls." compset="ClSpecial" summary="Martial weapon proficiency and use Intelligence for attacks.">
    <tag group="ArmProfGrp" tag="WepMartial" name="Martial Weapons" abbrev="Martial Weapons"/>
    <eval phase="PostAttr"><![CDATA[     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     foreach pick in hero where "component.BaseWep"
       if (eachpick.tagcount[Helper.EquipMag] = 1) then

         ~ Change melee combat from strength to Intelligence
         perform eachpick.assign[MelAttOpt.aINT]
         perform eachpick.assign[RanAttOpt.aINT]
         perform eachpick.assign[DamageOpt.aINT]
       endif
     nexteach]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     perform hero.assign[ArmProfGrp.WepMartial]]]></eval>
    </thing>
  <thing id="ra5CAtfBSVig" name="Vigilant" description="The defender cannot be surprised." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="ra5CAtfRepair" name="Repair" description="The steel defender restores 2d8 + it&apos;s proficiency bonus hit points to itself or to a construct or object within 5 feet of it." compset="RaceSpec">
    <fieldval field="trkMax" value="3"/>
    <fieldval field="abRange" value="Self or 5-feet"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Instant"/>
    <tag group="abAction" tag="abArRBnsAct" name="Action (Requires Your Bonus Action)" abbrev="Action"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="FeatureTyp" tag="Action"/>
    <eval phase="Final"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


      field[abText].text = "2d8+" & hero.childfound[ra5CSteDeBnd].field[abValue2].value & " HP"

      field[CustDesc].text = "The steel defender restores 2d8+" & hero.childfound[ra5CSteDeBnd].field[abValue2].value & " hit points to itself or to a construct or object within 5 feet of it."]]></eval>
    </thing>
  <thing id="cAtf5CSteDef" name="Steel Defender" description="By 3rd level, the tinkering in your free time has borne you a steel defender. It is friendly to you and your companions, and it obeys your commands. You determine its appearance, including number of legs, which has no effect on its stats.\n\nThe steel defender shares your initiative, but takes its turn right after yours. It moves and uses its reaction without needing to be commanded. You can use a bonus action to command it to take an action, which can be from its stat block or any other action it is capable of doing. If you issue no such command, it takes the Dodge action. When you&apos;re incapacitated, it can use any of those actions, not just Dodge.\n\nIf the mending spell is cast on it, it regains 2d6 hit points. If it has died within the last hour, you can use your smith’s tools as an action to revive it, so long as you are within 5 feet of it and you spend a 1st level or greater spell slot. The steel defender returns to life after 1 minute with all its hit points restored.\n\nWhen you finish a long rest, you can make a steel iron defender if you have your smith’s tools with you. Any existing steel defender of yours immediately perishes." compset="ClSpecial" summary="Create a steel defender, a companion creature that acts with you.">
    <bootstrap thing="c5CSteelDef"></bootstrap>
    </thing>
  <thing id="cAtf5CArcJolt" name="Arcane Jolt" description="At 9th level, you learn new ways to channel arcane energy. Whenever your steel defender hits a target, or you hit one with a magical weapon attack, you can channel magical energy through the attack to cause one of these effects:\n\n• The target takes an additional 2d6 force damage.\n• Pick a creature or object you can see within 30 feet of the target. The chosen recipient is healed 2d6 hit points.\n\nYou can channel this magical energy a number of times equal to your Intelligence modifier (minimum of once), but you can only do it once per turn. You regain all spent uses of this feature when you complete a long rest." compset="ClSpecial" summary="Do 2d6 damage or healing when you or your defender hits with an attack.">
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="ChargeCalc" tag="FinalMin1"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[

   if (hero.child[cHelpAtf].field[cTotalLev].value >= 15) then
     field[abText].text = "4d6 force or HP"
   else
     field[abText].text = "2d6 force or HP"
   endif]]></eval>
    </thing>
  <thing id="cAtf5CImpDef" name="Improved Defender" description="At 15th level, your Arcane Jolt and steel defender become more powerful:\n\n• The extra damage and the healing of your Arcane Jolt both increase to 4d6.\n• Your steel defender&apos;s AC increases by 2.\n• Whenever your steel defender uses Deflect Attack, the attacker suffers force damage equal to 1d4 + your Intelligence modifier." compset="ClSpecial" summary="Arcane Jolt now is 4d6, and your Steel Defender improves."></thing>
  <thing id="cAtf5CFlaGen" name="Flash of Genius" description="When you or another creature visible to and within 30 feet of you makes an ability check or a saving throw, you can use a reaction to add your Intelligence modifier to the roll.\n\nYou can do this a number of times equal to your Intelligence modifier (minimum of one use) and gain all spent uses of it back at the end of your next long rest." compset="ClSpecial" summary="Reaction to add your INT mod to a check or save.">
    <fieldval field="abRange" value="30"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeCalc" tag="FinalMin1"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Reaction"/>
    </thing>
  <thing id="cAtf5CRghToo" name="The Right Tool for the Job" description="Using your tinker&apos;s tools, you can magically create one set of artisan&apos;s tools in an open spot within 5 feet of you. This requires 1 hour of uninterrupted work, which can occur during a short or long rest. Though magically produced, the tools are not magical, and they vanish when you use this feature again." compset="ClSpecial" summary="Create a temporary set of artisan&apos;s tools."></thing>
  <thing id="cAtf5CCntrps" name="Cantrips" description="When you gain a level in the Artificer class, you can replace one of your known artificer cantrips with another cantrip from the artificer spell list." compset="ClSpecial" summary="Replace a cantrip when you gain a level."></thing>
  <thing id="c5CSteelDef" name="Steel Defender" compset="Companion" stacking="never" uniqueness="unique">
    <fieldval field="CompType" value="Steel Defender"/>
    <eval phase="First" priority="455" index="4"><![CDATA[~ Well, there's no way (afaik) to count the class levels from the hero
~ at the minion, so we need to do it somewhere in the hero context and 
~ send the info to be used at the minion. 
~
~ In this case, since all animal companions will receive the 
~ companion bond racial ability to add their extra skills, we'll
~ use it to bootstrap the extra HD as well. The tag expression used 
~ in the condition for the bootstrap will test the value of the
~ abValue5 field, which we set here.

~ This must be done at the First stage, since the bootstraps happen
~ there. Or so I'm told by the error messages.

var level as number
level = hero.tagcount[Classes.ArtificerR]
minion.childfound[ra5CSteDeBnd].field[abValue5].value = level]]></eval>
    <minion id="Familiar" isinherit="no">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="Hero" tag="FixedRace"/>
      <bootstrap thing="ra5CSteDeBnd"></bootstrap>
      <bootstrap thing="r5CSteelDef"></bootstrap>
      </minion>
    </thing>
  <thing id="r5CSteelDef" name="Steel Defender" compset="Race">
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="8"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rSTR" value="4"/>
    <fieldval field="rDEX" value="2"/>
    <fieldval field="rCON" value="4"/>
    <fieldval field="rINT" value="-6"/>
    <fieldval field="rCHA" value="-4"/>
    <fieldval field="rAC" value="4"/>
    <tag group="ProfSave" tag="svDEX" name="Dexterity" abbrev="Dexterity"/>
    <tag group="ProfSkill" tag="skAthletic" name="Athletics" abbrev="Athletics"/>
    <tag group="ProfSkill" tag="skPercep" name="Perception" abbrev="Perception"/>
    <tag group="RaceSize" tag="Medium0" name="Medium" abbrev="Medium"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Alignment" tag="Unaligned" name="Unaligned" abbrev="UN"/>
    <tag group="ProfDouble" tag="skPercep"/>
    <tag group="ProfSave" tag="svCON" name="Constitution" abbrev="Constitution"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <bootstrap thing="tpConst"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtForce"/>
      <assignval field="livename" value="Force-Empowered Rend"/>
      <assignval field="sbName" value="Force-Empowered Rend"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDamBonus" value="-2"/>
      </bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands your languages"/>
      <assignval field="sbName" value="Understands your languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="ra5CAtfRepair"></bootstrap>
    <bootstrap thing="ra5CAtfBSVig"></bootstrap>
    <bootstrap thing="ra5CStlDefAtk"></bootstrap>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj -= hero.childfound[aCON].field[aModBonus].value
HPAdj *= (field[rHitDice].value)
HPAdj += 2
HPAdj += master.childfound[aINT].field[aModBonus].value
herofield[tBonusHP].value += HPAdj</eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[
~ pull our STR and prof to determine what our attack bonus currently is

var CrAt as number

CrAt = (hero.childfound[aSTR].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

~ add our spell attack (abValue4 of Steel Defender Bond) and subtract
~ the current to attack bonus from any natural attacks. This way any 
~ other additions to the bonus can still count

foreach pick in hero from BaseWep where "wGroup.Natural"
eachpick.field[wAttack].value += hero.childfound[ra5CSteDeBnd].field[abValue4].value - CrAt
nexteach]]></eval>
    </thing>
  <thing id="ra5CSteDeBnd" name="Steel Defender Bond" description="The Steel Defender&apos;s features rely on your Artificer level and proficiency bonus." compset="RaceSpec">
    <fieldval field="abValue" value="2"/>
    <eval phase="First" priority="500"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      foreach pick in hero from BaseRace
      eachpick.field[rHitDice].value = field[abValue5].value
      nexteach]]></eval>
    <eval phase="Final" priority="49000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Pull master's spell save DC into abValue3 for use in other features
  field[abValue3].value = master.childfound[cHelpAtf].field[cSplSaveDC].value  


      ~Pull master's spell attack into abValue4 for use in other features
  field[abValue4].value = master.childfound[cHelpAtf].field[cSplAttack].value]]></eval>
    <eval phase="PostAttr" priority="12000" index="5"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

~ Add +2 to our AC if level 15...
   if (field[abValue5].value >= 15) then
      hero.childfound[ArmorClass].field[Bonus].value += 2
      endif

~ and damage.
foreach pick in hero from BaseWep where "wGroup.Natural"
   eachpick.field[dmmBonus].value += field[abValue2].value
   eachpick.field[dmrBonus].value += field[abValue2].value
nexteach]]></eval>
    <eval phase="PostLevel" index="6"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ store the proficiency of the hero in abValue2:

field[abValue2].value = master.childfound[ProfBonus].field[tProfBonus].value

~ now we replace the prof bonus of the minion with the stored hero one

hero.childfound[ProfBonus].field[tProfBonus].value = field[abValue2].value]]></eval>
    </thing>
  <thing id="ra5CStlDefAtk" name="Deflect Attack" description="The defender can use a reaction to impose disadvantage on the attack roll of a creature it can see within 5 feet of itself, but only if the attack roll is against a creature other than the defender." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[   if (hero.childfound[ra5CSteDeBnd].field[abValue5].value >= 15) then
      field[abText].text = "1d4+" & master.childfound[aINT].field[aModBonus].value & " force"
      field[CustDesc].text = "The defender can use a reaction to impose disadvantage on the attack roll of a creature it can see within 5 feet of itself, but only if the attack roll is against a creature other than the defender. The attacker also takes " & field[abText].text & " damage."
      endif]]></eval>
    </thing>
  <thing id="c5CAtfRstRea" name="Restorative Reagents" description="Whenever a creature drinks one of your {i}experimental elixirs{/i}, they also gain temporary hit points equalling 2d6 + your Intelligence modifier (a minimum of 1).\n\nIn addition, you can cast {i}lesser restoration{/i} without expending a spell slot, so long as you use alchemist’s supplies as the spellcasting focus. You can do so a number of times per long rest equal to your Intelligence modifier (minimum of once)." compset="ClSpecial" summary="Grant 2d6+INT temp HP when your elixirs are drank and cast lesser restoration.">
    <tag group="LvNamePar" tag="AppText"/>
    <bootstrap thing="spLessRest">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.ArtificerR >=5]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="PostAttr" priority="2400"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     var iMod as number
     iMod = maximum(1,hero.child[aINT].field[aModBonus].value)

     hero.childfound[spLessRest].field[trkMax].value = iMod

     field[abText].text = "2d6+" & iMod & " temp HP"]]></eval>
    </thing>
  <thing id="c5CAtfExpElx" name="Experimental Elixir" description="When you finish a long rest, you can magically produce an {i}experimental elixir{/i} by touching an empty flask. A creature can use an action to drink the elixir or to administer it to an incapacitated creature. Roll on the Experimental Elixir table to determine the effect that will occur when the elixir is drunk. \n\nYou must have your alchemist&apos;s supplies on you to create the elixir, and any elixir created this way lasts until it is drunk or until the end of your next long rest.\n\nYou can make more elixirs when you reach additional levels in this class: two at 6th level and three at 15th level. Each elixir requires its own flask, and you roll for each elixir&apos;s effect individually. \n\nYou can also spend a spell slot of 1st level or higher to create an additional elixir. You can use an action to do so, touching the empty flask and choosing the effect from the table.\n\n{u}{b}Experimental Elixir{/b}{/u}\n{b}d6   Effect{/b}\n1    {b}Healing.{/b} The drinker regains 2d4 + your Intelligence modifier hit points.\n2    {b}Swiftness.{/b} For the next hour, the drinker&apos;s walking speed increases by 10 feet.\n3    {b}Resilience.{/b} The drinker&apos;s AC gets a +1 bonus for 10 minutes.\n4    {b}Boldness.{/b} For the next minute, the drinker can add 1d4 to their attack rolls and saving throws.\n5    {b}Flight.{/b} The drinker gains 10 feet of flying speed for 10 minutes.\n6    {b}Transformation.{/b} The drinker is altered as if under the {i}alter self{/i} spell. The drinker chooses the transformation, and it lasts for 10 minutes.\n\n{i}Note: The experimental elixir can be found on the magic tab.{/i}" compset="ClSpecial" summary="Create a magical elixir daily with special effects.">
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

   if (hero.child[cHelpAtf].field[cTotalLev].value >= 15) then
     field[abText].text = "3 elixirs/long rest"
   elseif (hero.child[cHelpAtf].field[cTotalLev].value >= 6) then
     field[abText].text = "2 elixirs/long rest"
   else
     field[abText].text = "1 elixir/long rest"
   endif]]></eval>
    </thing>
  <thing id="ip5CExpElix" name="Experimental Elixir" description="An artificer alchemist has provided this elixir. You can use an action to drink it, or to administer it to an incapacitated creature. The alchemist rolls on the table when the elixir is created.\n\n{u}{b}Experimental Elixir{/b}{/u}\n{b}d6   Effect{/b}\n1    {b}Healing.{/b} The drinker regains 2d4 + the alchemist&apos;s Intelligence modifier hit points.\n2    {b}Swiftness.{/b} For the next hour, the drinker&apos;s walking speed increases by 10 feet.\n3    {b}Resilience.{/b} The drinker&apos;s AC gets a +1 bonus for 10 minutes.\n4    {b}Boldness.{/b} For the next minute, the drinker can add 1d4 to their attack rolls and saving throws.\n5    {b}Flight.{/b} The drinker gains 10 feet of flying speed for 10 minutes.\n6    {b}Transformation.{/b} The drinker is altered as if under the {i}alter self{/i} spell. The drinker chooses the transformation, and it lasts for 10 minutes." compset="Potion">
    <arrayval field="usrArray" index="0" value="Healing"/>
    <arrayval field="usrArray" index="1" value="Swiftness"/>
    <arrayval field="usrArray" index="2" value="Resilience"/>
    <arrayval field="usrArray" index="3" value="Boldness"/>
    <arrayval field="usrArray" index="4" value="Flight"/>
    <arrayval field="usrArray" index="5" value="Transformation"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    </thing>
  <thing id="i5CEldCan" name="Eldritch Cannon" compset="MagicWep">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="Helper" tag="AlwaysAvl"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="NoSelect"/>
    <child entity="wSpecMagic"></child>
    </thing>
  <thing id="ra5CEldCanSz" name="Size" description="Select whether the eldritch cannon is Small (mobile) or Tiny (handheld)." compset="RaceSpec">
    <arrayval field="usrArray" index="0" value="Small"/>
    <arrayval field="usrArray" index="1" value="Tiny"/>
    <eval phase="First" priority="99"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


if (field[usrIndex].value = 0) then
  hero.childfound[r5CAtfEldCan].field[rSpeed].value += 15
 else
  master.childfound[c5CAtfEldCan].field[abValue5].value += 1
 endif]]></eval>
    </thing>
  <thing id="c5CEldCan" name="Eldritch Cannon" compset="Companion" stacking="never">
    <fieldval field="CompType" value="Steel Defender"/>
    <eval phase="First" priority="455" index="4"><![CDATA[~ Well, there's no way (afaik) to count the class levels from the hero
~ at the minion, so we need to do it somewhere in the hero context and 
~ send the info to be used at the minion. 
~
~ In this case, since all animal companions will receive the 
~ companion bond racial ability to add their extra skills, we'll
~ use it to bootstrap the extra HD as well. The tag expression used 
~ in the condition for the bootstrap will test the value of the
~ abValue5 field, which we set here.

~ This must be done at the First stage, since the bootstraps happen
~ there. Or so I'm told by the error messages.

var level as number
level = hero.tagcount[Classes.ArtificerR]
minion.childfound[ra5cEldCanTyp].field[abValue5].value = level]]></eval>
    <minion id="Familiar" isinherit="no">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="Hero" tag="FixedRace"/>
      <bootstrap thing="ra5cEldCanTyp"></bootstrap>
      <bootstrap thing="r5CAtfEldCan"></bootstrap>
      </minion>
    </thing>
  <thing id="ra5cEldCanTyp" name="Type" compset="RaceSpec">
    <arrayval field="usrArray" index="0" value="Flamethrower"/>
    <arrayval field="usrArray" index="1" value="Force Ballista"/>
    <arrayval field="usrArray" index="2" value="Protector"/>
    <bootstrap thing="ra5CAtfExpCan">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abValue5 >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="ra5CArtFlmThr">
      <containerreq phase="First" priority="5000">fieldval:usrIndex = 0</containerreq>
      </bootstrap>
    <bootstrap thing="ra5CArtDef">
      <containerreq phase="First" priority="5000">fieldval:usrIndex = 2</containerreq>
      </bootstrap>
    <bootstrap thing="wOtherRng">
      <containerreq phase="First" priority="500">fieldval:usrIndex = 1</containerreq>
      <autotag group="DamTypeOvr" tag="dtForce"/>
      <autotag group="wProperty" tag="Spell"/>
      <autotag group="AttackTarg" tag="1Target"/>
      <assignval field="wRangeNorm" value="120"/>
      <assignval field="wAttackEff" value="Make a ranged spell attack from the turret&apos;s space, targeting one creature or object within 120 feet of it. On a hit, the target takes 2d8 force damage. If the target is a creature, it&apos;s pushed up to 5 feet away from the cannon."/>
      <assignval field="sbName" value="Force Ballista"/>
      <assignval field="livename" value="Force Ballista"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDieCount" value="2"/>
      </bootstrap>
    <eval phase="First" priority="99" index="5"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)
      doneif (field[usrIndex].value <> 2) 

      master.childfound[c5CAtfEldCan].field[abValue4].value = 1]]></eval>
    <eval phase="Final" priority="49000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Pull master's spell save DC into abValue3 for use in other features
  field[abValue3].value = master.childfound[cHelpAtf].field[cSplSaveDC].value  


      ~Pull master's spell attack into abValue4 for use in other features
  field[abValue4].value = master.childfound[cHelpAtf].field[cSplAttack].value

  hero.childfound[wOtherRng].field[wRanAtk].value = field[abValue4].value]]></eval>
    <eval phase="Final" priority="50000" index="6"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

     
      if (field[abValue5].value >= 9) then
        hero.childfound[wOtherRng].field[wDieCount].value += 1
        endif]]></eval>
    <eval phase="Render" priority="99999" index="7"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     var expr as string
     expr = hero.tagids[Custom.?,""]

     foreach pick in master from BaseWep where expr
       eachpick.field[sbName].text &= " (" & field[usrSelect].text & ")"
       eachpick.field[livename].text &= " (" & field[usrSelect].text & ")"
     nexteach]]></eval>
    </thing>
  <thing id="thp5CAtfDfTr" name="Protector Turret" description="The turret emits a field of positive energy that grants itself and each creature of your choice within 10 feet of it a temporary hit points equaling 1d8 + your Intelligence modifier (a minimum of 1 temporary hit point)." compset="TempHpPool">
    <fieldval field="thpMaxAllw" value="18"/>
    <usesource source="5eRftLWCP" parent="p5eBooks" name="Eberron - Rising from the Last War"/>
    <usesource source="5eTCoE" parent="p5eBooks" name="Tasha&apos;s Cauldron of Everything"/>
    <tag group="Helper" tag="IndepPool" name="Independant Temporary Hp Pool" abbrev="Independant Temporary Hp Pool"/>
    </thing>
  <thing id="c5CAtfArcFir" name="Arcane Firearm" description="When you complete a long rest, you can use your woodcarver&apos;s tools to carve special sigils into a wand, staff, or rod, turning it into an arcane firearm. If you carve them onto a second item, they disappear from the first. Otherwise, they remain indefinitely. \n\nYou can use the arcane firearm as a spellcasting focus for your artificer spells. When you cast such a spell through the firearm, you can add 1d8 to one of the spell&apos;s damage rolls." compset="ClSpecial" summary="Turn a staff, rod, or wand into a spellcasting focus with 1d8 to damage rolls.">
    <fieldval field="usrCandid1" value="component.BaseRod | component.BaseStaff | component.BaseWand | thingid.gArFocRod | thingid.gArFocStaf | thingid.gArFocWand | thingid.gDrFocStaf | thingid.gDrFocYew | thingid.w5CPincSta | thingid.wQtrstaff | thingid.w5CStaff"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <eval phase="Render" priority="99999"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[usrChosen1].ischosen = 0)

     perform field[usrChosen1].chosen.setfocus

     focus.field[livename].text &= " (Arcane Firearm)"
     focus.field[sbName].text &= " (Arcane Firearm)"
     perform focus.assign[Custom.5CEbArcFoc]]]></eval>
    </thing>
  <thing id="c5CAtfExpCan" name="Explosive Cannon" description="Your eldritch cannon&apos;s damage rolls all increase by 1d8.\n\nAdditionally, you can use an action to detonate the cannon when you&apos;re within 60 feet of it. The cannon is destroyed in the process, and every creature within 20 feet of it must make a Dexterity saving throw versus your spell save DC. Such a creature takes 3d8 force damage on a failure, or half that on a success." compset="ClSpecial" summary="Eldritch cannon&apos;s damage increases by 1d8 and can explode.">
    <tag group="abSave" tag="aDEX"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="StandardDC" tag="aINT"/>
    <eval phase="Final"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     field[abDC].value = hero.childfound[cHelpAtf].field[cSplSaveDC].value
     field[abText].text = "3d8 force"]]></eval>
    </thing>
  <thing id="ra5CAtfExpCan" name="Explosive Cannon" description="You can use an action to detonate the cannon when you&apos;re within 60 feet of it. The cannon is destroyed in the process, and every creature within 20 feet of it must make a Dexterity saving throw versus your spell save DC. Such a creature takes 3d8 force damage on a failure, or half that on a success." compset="RaceSpec">
    <fieldval field="wDieCount" value="3"/>
    <fieldval field="wDieSize" value="8"/>
    <fieldval field="abRange" value="20"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="DamageType" tag="dtForce"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Action"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

     field[abDC].value = hero.childfound[ra5cEldCanTyp].field[abValue3].value
     field[abText].text = "3d8 force"]]></eval>
    </thing>
  <thing id="cAtf5CInfItem" name="Infuse Item" description="You can imbue mundane objects with magical properties. The magic items you create with this feature are essentially prototypes of permanent items.\n\n{b}Infusions Known{/b}\nChoose four artificer infusions to learn. You learn additional infusions at higher levels of this class. When you gain a level in this class, you can also replace one of the artificer infusions you&apos;ve learned with a new one.\n\n{b}Infusing an Item{/b}\nWhenever you complete a long rest, you can touch a nonmagical object and imbue it with one of your artificer infusions, turning it into a magic item. The infusion&apos;s description will note what kind of object is required for that infusion.\n\nIf the infused item requires attunement, you can instantly attune yourself to it when you infuse the item, or you can forgo attunement so that someone else can attune to the item. Attuning to it later, by you or someone else, follows the standard rules for attuning to magic items.\n\nYour infusion remains in an item indefinitely, but when you die, the infusion vanishes after a number of days have passed equal to your Intelligence modifier (minimum of 1 day). The infusion also vanishes if you learn a new infusion in place of that one.\n\nYou can infuse more than one nonmagical object at the end of a long rest; the maximum number of objects appears in the Infused Items column of the Artificer table. You must touch each of the objects, and each of your infusions can be in only one object at a time. If you try to exceed your maximum number of infusions, the oldest infusion immediately ends, and then the new infusion applies." compset="ClSpecial" summary="Imbue items with magical properties.">
    <fieldval field="abDuration" value="Special; see text"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abRange" tag="Touch"/>
    <bootstrap thing="cfg5CAtfInfus"></bootstrap>
    <eval phase="Final" priority="99999" index="2">perform hero.childfound[cfg5CAtfInfus].setfocus

     var Left as number

     Left = focus.field[cfgMax2].value - focus.field[cfgSpent2].value - focus.field[cfgSpent3].value

     focus.field[cfgLeft2].value = Left
     focus.field[cfgLeft3].value = minimum(Left,focus.field[cfgMax3].value - focus.field[cfgSpent3].value)</eval>
    <eval phase="First" priority="500"><![CDATA[

     perform hero.childfound[cfg5CAtfInfus].setfocus

     var iLevel as number
     var iNumber as number
     var iNumTwo as number
     var Left as number

     iLevel = hero.tagcount[Classes.ArtificerR]

     if (iLevel >= 18) then
       iNumber = 6
     elseif (iLevel >= 14) then
       iNumber = 5
     elseif (iLevel >= 10) then
       iNumber = 4
     elseif (iLevel >= 6) then
       iNumber = 3
     elseif (iLevel >= 2) then
       iNumber = 2
     else
       iNumber = 0
     endif

      iNumTwo = iNumber * 2

     focus.field[cfgMax1].value = iNumTwo
     focus.field[cfgMax2].value = iNumber
     focus.field[cfgMax3].value = iNumber

     Left = iNumTwo - focus.field[cfgSpent2].value - focus.field[cfgSpent3].value

     focus.field[cfgLeft2].value = Left
     focus.field[cfgLeft3].value = Left]]></eval>
    </thing>
  <thing id="cfg5CAtfInfus" name="Infusions" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Infusions Known"/>
    <fieldval field="cfgAllow1" value="Custom.InfKnw"/>
    <fieldval field="cfgObject2" value="Infused Items on Hero"/>
    <fieldval field="cfgAllow2" value="(Helper.Helper &amp; !Helper.Helper)"/>
    <fieldval field="cfgObject3" value="Infused Items on Ally"/>
    <fieldval field="cfgAllow3" value="(Helper.Helper &amp; !Helper.Helper)"/>
    </thing>
  <thing id="cAtf5CEnhDef" name="Enhanced Defense" description="{i}{b}Item:{/b} A suit of armor or a shield{/i}\n\nA creature gains a +1 bonus to Armor Class while wearing (armor) or wielding (shield) the infused item.\n\nThe bonus increases to +2 when you reach 10th level in this class." compset="CustomSpec" summary="Grant an AC bonus to armor or a shield." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999"><![CDATA[ 
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     var iVar as number
     if (hero.tagcount[Classes.ArtificerR] >= 10) then
       iVar = 2
     else
       iVar = 1
     endif

     field[usrChosen1].chosen.field[livename].text &= " +" & iVar
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "component.BaseArmor & !Helper.EquipMag & !Helper.Natural"

     var iVar as number
     if (hero.tagcount[Classes.ArtificerR] >= 10) then
       iVar = 2
     else
       iVar = 1
     endif

     field[usrChosen1].chosen.field[Bonus].value += iVar
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Enhnace Defense adjustment to apply this infusion to a suit of armor or a shield.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="cAtf5CEnhWea" name="Enhanced Weapon" description="{i}{b}Item:{/b} A simple or martial weapon/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it.\n\nThe bonus increases to +2 when you reach 10th level in this class." compset="CustomSpec" summary="Grant an attack and damage bonus to a weapon." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2"><![CDATA[ 
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)
     doneif (field[usrChosen1].ischosen = 0)

     var iVar as number
     if (hero.tagcount[Classes.ArtificerR] >= 10) then
       iVar = 2
     else
       iVar = 1
     endif

     field[usrChosen1].chosen.field[livename].text &= " +" & iVar
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(component.BaseWep & !Helper.EquipMag & !component.BaseNatWep)"

     var iVar as number
     if (hero.tagcount[Classes.ArtificerR] >= 10) then
       iVar = 2
     else
       iVar = 1
     endif

     field[usrChosen1].chosen.field[Bonus].value += iVar
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Enhnace Weapon adjustment to apply this infusion to a weapon.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="cAtf5CRadWep" name="Radiant Weapon" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A simple or martial weapon (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it. While holding it, the wielder can use a bonus action to cause it to shine bright light in a 30-foot radius and dim light for an additional 30 feet. The wielder can also use a bonus action to extinguish the light.\n\nThe weapon has four charges. Immediately after being hit by a melee attack, the wielder can take a reaction to expend a charge, causing the attacker to be blinded until the end of the attacker’s next turn. The attacker can make a successful Constitution saving throw versus your spell save DC to avoid this effect.\n\nThe weapon regains 1d4 spent charges each dawn." compset="CustomSpec" summary="Grant a bonus, luminescence, and blinding to a weapon." uniqueness="unique">
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="trk5CAtfRadW">
      <containerreq phase="First" priority="500"><![CDATA[portal.cfg2Abil <> 0]]></containerreq>
      </bootstrap>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)
     doneif (field[usrChosen1].ischosen = 0)

     field[usrChosen1].chosen.field[livename].text = "Radiant " & field[usrChosen1].chosen.field[livename].text & " +1"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(component.BaseWep & !Helper.EquipMag & !component.BaseNatWep)"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.pushtags[DescInfo.cAtf5CRadWep]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[usrChosen1].chosen.field[Bonus].value += 1]]></eval>
    <eval phase="First" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
      doneif (tagis[portal.cfg2Abil] <> 1)

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[abValue].value += 1]]></eval>
    <eval phase="Render" priority="100000" index="4"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Radiant Weapon adjustment to apply this infusion to a weapon.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="5">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="cAtf5CResArm" name="Resistant Armor" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nWhile wearing this armor, a creature has resistance to one damage type, chosen from this list when the item is infused: acid, cold, fire, force, lightning, necrotic, poison, psychic, radiant, or thunder." compset="CustomSpec" summary="Grant a type of damage resistance to armor." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     var sName as string

     sName = field[usrChosen2].chosen.field[name].text
     field[usrChosen1].chosen.field[livename].text &= " of " & sName & " Resistance"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "component.BaseArmor & !EquipType.Shield & !Helper.EquipMag & !Helper.Natural"
     field[usrCandid2].text = "component.DamageType & (DamageRes.dtAcid | DamageRes.dtCold | DamageRes.dtFire | DamageRes.dtForce | DamageRes.dtLightnin | DamageRes.dtNecrotic | DamageRes.dtPoison | DamageRes.dtPsychic | DamageRes.dtRadiant | DamageRes.dtThunder)"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      perform field[usrChosen2].chosen.pulltags[DamageRes.?]
      perform hero.pushtags[DamageRes.?]]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Resistant Armor adjustment to apply this infusion to a suit of armor.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="cAtf5CRetWep" name="Returning Weapon" description="{i}{b}Item:{/b} A simple or martial weapon with the thrown property{/i}\n\nThis magic weapon has a +1 bonus to its attack and damage rolls. Immediately after it is used to make a ranged attack, it returns to the user&apos;s hand." compset="CustomSpec" summary="Grant a bonus and the returning feature to a thrown weapon." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2">doneif (tagis[Helper.Disable] &lt;&gt; 0)
     ~ If we&apos;re not enabled, get out now
     doneif (tagis[portal.cfg2Abil] &lt;&gt; 1)

     var sText as string
     sText = &quot;This weapon returns to the wielder’s hand immediately after it is used to make a ranged attack.&quot;

     perform delete[Helper.SpecUp]
     field[usrChosen1].chosen.field[livename].text &amp;= &quot; of Returning +1&quot;
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text
     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "component.BaseWep & !Helper.EquipMag & !component.BaseNatWep & wProperty.Thrown"


      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]


      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[usrChosen1].chosen.field[Bonus].value += 1]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Returning Weapon adjustment to apply this infusion to a weapon.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="cAtf5CRepShot" name="Repeating Shot" description="{i}Item: A simple or martial weapon with the ammunition property (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to its ranged attack and damage rolls. It also ignores the loading property, if it has it.\n\nThe weapon needs no ammunition, though it can still use it if you choose. When used to make a ranged attack roll without ammunition, it magically produces a piece of ammunition, which vanishes the moment after it hits or misses a target." compset="CustomSpec" summary="Grant a bonus to and ignore the loading property of a weapon." uniqueness="unique">
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrChosen1].chosen.field[livename].text &= " +1"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "component.BaseWep & wProperty.Ammunition &  !Helper.EquipMag & !component.BaseNatWep"

      perform delete[Helper.SpecUp]

      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.pushtags[DescInfo.cAtf5CRepShot]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[usrChosen1].chosen.field[Bonus].value += 1]]></eval>
    <eval phase="Final" priority="10000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)
     doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
     doneif (field[usrChosen1].chosen.tagis[wProperty.Loading] = 0)
     perform field[usrChosen1].chosen.delete[wProperty.Loading]]]></eval>
    <eval phase="Render" priority="100000" index="4"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Repeating Shot adjustment to apply this infusion to a weapon.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="5">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="cAtf5CRepSh" name="Repulsion Shield" description="{i}Prerequisite: 6th-level artificer Item: A shield (requires attunement){/i}\n\nThe infused shield grants a +1 bonus to Armor Class while wielded. The shield has 4 charges. While holding it, the wielder can take a reaction immediately after being hit by a melee attack to spend a charge and push the attacker up to 15 feet away. The shield regains 1d4 spent charges each dawn." compset="CustomSpec" summary="Grant an AC bonus and pushing feature to a shield." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="trk5CAtfRepS">
      <containerreq phase="First" priority="500"><![CDATA[portal.cfg2Abil <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "component.BaseArmor & EquipType.Shield & !Helper.EquipMag & !Helper.Natural"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.pushtags[DescInfo.cAtf5CRepSh]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[usrChosen1].chosen.field[Bonus].value += 1]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrChosen1].chosen.field[livename].text = "Replusion " & field[usrChosen1].chosen.field[livename].text & " +1"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="First" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[abValue].value += 1]]></eval>
    <eval phase="Render" priority="100000" index="4"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Repulsion Shield adjustment to apply this infusion to a shield.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="5">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfSpRfRn" name="Spell-Refueling Ring" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A ring (requires attunement){/i}\n\nWhile wearing this ring, the creature can use an action to regain one spent spell slot of 3rd level or lower. Once used, the ring cannot be used again until the next dawn." compset="CustomSpec" summary="Grant a ring the ability to restore a spell slot." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf" name="Artificer Infusions"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="trk5CAtfSpRfRn">
      <containerreq phase="First" priority="500">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <eval phase="First" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)
      field[abValue].value += 1]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "((component.BaseRing & !Helper.EquipMag) | thingid.ir5CSimpRing) & !Custom.Infus"
      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     var sName as string

     sName = field[usrChosen1].chosen.field[name].text
     field[usrChosen1].chosen.field[livename].text &= " of Spell-Refuelling"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="Render" priority="100000" index="4"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg2Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: You can add a simple ring in the Magic tab for use with this feature.{/i}"
     elseif (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Spell-Refueling Ring adjustment to apply this infusion to a ring. They can add a simple ring from the Magic tab for use with this.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="5">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfEnArFc" name="Enhanced Arcane Focus" description="{i}{b}Item:{/b} A rod, staff, or wand (requires attunement){/i}\n\nHolding this item grants a +1 bonus to spell attack rolls to the holder. The creature also ignores half cover when making their spell attacks." compset="CustomSpec" summary="Infuse a focus that grants +1 to spell attacks and ignores half cover." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)


     field[usrChosen1].chosen.field[livename].text &= " +1 Focus"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(((component.BaseRod | component.BaseStaff | component.BaseWand | thingid.w5CPincSta | thingid.wQtrstaff | thingid.w5CStaff) & !Helper.EquipMag ) | thingid.id5CSimpRod | thingid.is5CSimpStf | thingid.iw5CSimpWnd | thingid.gArFocRod | thingid.gArFocStaf | thingid.gArFocWand | thingid.id5CEbImbRd | thingid.is5CEbImbSt | thingid.iw5CEbImbWn) & !Custom.Infus"


      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      foreach pick in hero from Class
        eachpick.field[cSplAttack].value += 1
      nexteach]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg2Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: You can add a simple rod, staff, or wand in the Magic tab for use with this feature.{/i}"
     elseif (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Enhanced Arcane Focus adjustment to apply this infusion to an item. They can add a simple rod, staff, or wand from the Magic tab for use with this.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CAtfHlmAwr" name="Helm of Awareness" description="{i}{b}Prerequisite:{/b} 10th-level artificer\n{b}Item:{/b} A helmet (requires attunement){/i}\n\nWearing this helmet grants the wearer advantage on their initiative rolls. Additionally, the wearer cannot be surprised unless they&apos;re incapacitated." compset="CustomSpec" summary="Infuse a helm that grants advantage on initiative and prevents surprise." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     var sText as string
     sText = "Wearing this helmet grants the wearer advantage on their initiative rolls. Additionally, the wearer cannot be surprised unless they're incapacitated."

     field[usrChosen1].chosen.field[livename].text &= " of Awareness"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text
     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(thingid.io5CAtfArcHlm | thingid.io5CSimpHelm) & !Custom.Infus"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      #situational[hero.child[Initiative],"Advantage on Initiative Rolls",field[thingname].text]]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg2Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: You can add a simple helm in the Magic tab for use with this feature.{/i}"
     elseif (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Helm of Awareness adjustment to apply this infusion to a helm. They can add a simple helm from the Magic tab for use with this.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 10th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfMndShr" name="Mind Sharpener" description="{i}{b}Item:{/b} A suit of armor or robes{/i}\n\nThe infused robes have 4 charges. When the wearer fails a Constitution save to maintain their concentration on a spell, they can take a reaction to spend 1 charge, causing them to succeed to save instead. The robes regain 1d4 spent charges each dawn." compset="CustomSpec" summary="Infuse robes that help pass saves for spell concentration." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="trk5CMndShr">
      <containerreq phase="First" priority="500">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "((component.BaseArmor & !EquipType.Shield & !Helper.EquipMag & !Helper.Natural) | thingid.g5CRobes) & !Custom.Infus"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="First" index="3"><![CDATA[doneif (tagis[portal.cfg2Abil] <> 0)
      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)

      field[abValue].value = 1]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrChosen1].chosen.field[livename].text = "Mind Sharpener " & field[usrChosen1].chosen.field[livename].text
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text

     var sText as string
     sText = "The infused robes have 4 charges. When the wearer fails a Constitution save to maintain their concentration on a spell, they can take a reaction to spend 1 charge, causing them to succeed to save instead. The robes regain 1d4 spent charges each dawn."

     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    <eval phase="Render" priority="100000" index="4"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Mind Sharpener adjustment to apply this infusion to a suit of armor or robes.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="5">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CAtfArMgSt" name="Armor of Magical Strength" description="{i}{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up." compset="CustomSpec" summary="Infuse armor to help Strength checks and saves and prevent you from going prone." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="trk5CAtfArMg">
      <containerreq phase="First" priority="500">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(component.BaseArmor & !EquipType.Shield & !Helper.EquipMag & !Helper.Natural & !Custom.Infus)"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]]]></eval>
    <eval phase="First" index="3"><![CDATA[doneif (tagis[portal.cfg2Abil] <> 1)
      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      field[abValue].value = 1]]></eval>
    <eval phase="Render" priority="99999" index="2">doneif (tagis[Helper.Disable] &lt;&gt; 0)
     ~ If we&apos;re not enabled, get out now
     doneif (tagis[portal.cfg2Abil] &lt;&gt; 1)

     field[usrChosen1].chosen.field[livename].text &amp;= &quot; of Magical Strength&quot;
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text

     var sText as string
     sText = &quot;The armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up.&quot;

     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Armor of Magical Strength adjustment to apply this infusion to a suit of armor.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="8">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CAtfArcPro" name="Arcane Propulsion Armor" description="{i}{b}Prerequisite:{/b} 14th-level artificer\n{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor grants its wearer these benefits:\n\n• The wearer&apos;s walking speed increases by 5 feet.\n• The armor includes weaponized gauntlets, useable as magic melee weapons when not holding anything. The wearer is proficient with the gauntlets, and each deals 1d8 force damage on a hit, plus they have the thrown property. Their normal range is 20 feet and their long range is 60 feet. When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself. \n• The armor cannot be removed against the wearer&apos;s will.\n• The armor replaces any lost limbs, functioning just like the missing limb(s)." compset="CustomSpec" summary="Infuse armor to help Strength checks and saves and prevent you from going prone." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="i5CAtfArcGn">
      <containerreq phase="First" priority="100">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <bootstrap thing="i5CAtfArcGn">
      <containerreq phase="First" priority="100">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <eval phase="Render" priority="99999" index="2">doneif (tagis[Helper.Disable] &lt;&gt; 0)
     ~ If we&apos;re not enabled, get out now
     doneif (tagis[portal.cfg2Abil] &lt;&gt; 1)

     field[usrChosen1].chosen.field[livename].text = &quot;Arcane Propulsion &quot; &amp; field[usrChosen1].chosen.field[livename].text
     field[usrChosen1].chosen.field[sbName].text = &quot;Arcane Propulsion &quot; &amp; field[usrChosen1].chosen.field[sbName].text

     var sText as string
     sText = &quot;The armor has grants its wearer these benefits:\n\n• The wearer&apos;s walking speed increases by 5 feet.\n• The armor includes weaponized gauntlets, useable as magic melee weapons when not holding anything. The wearer is proficient with the gauntlets, and each deals 1d8 force damage on a hit, plus they have the thrown property. Their normal range is 20 feet and their long range is 60 feet. When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself.\n• The armor cannot be removed against the wearer&apos;s will.\n• The armor replaces any lost limbs, functioning just like the missing limb(s).&quot;

     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(component.BaseArmor & !EquipType.Shield & !Helper.EquipMag & !Helper.Natural & !Custom.Infus)"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]

      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      hero.childfound[Speed].field[tSpeed].value += 5]]></eval>
    <eval phase="First" priority="99" index="3"><![CDATA[doneif (tagis[portal.cfg2Abil] <> 1)
      doneif (field[usrChosen1].chosen.field[gIsEquip].value = 0)
      doneif (field[usrChosen1].chosen.field[gIsAttuned].value = 0)

      field[abValue].value = 1]]></eval>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Arcane Propulsion Armor adjustment to apply this infusion to a suit of armor.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="8">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 14th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfAlcHm" name="Homunculus Servant" description="{i}{b}Item:{/b} A gem or crystal worth at least 100 gp{/i}\n\nYou learn to magically create a special homunculus servant. The creature instantly forms around the infused item, with that item serving as its heart. You determine the homunculus&apos;s appearance. It is friendly to you and your allies, and it obeys your commands. \n\nIn combat, the homunculus shares your initiative, but takes its turn right after yours. It moves and uses its reaction without needing to be commanded. You can use a bonus action to command it to take an action, which can be from its stat block or any other action it is capable of doing. If you issue no such command, it takes the Dodge action. When you&apos;re incapacitated, it can use any of those actions, not just Dodge.\n\nIf the mending spell is cast on it, it regains 2d6 hit points. If you or the homunculus dies, it vanishes and its heart remains in its space." compset="CustomSpec" summary="Create a magical homunculus companion." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CAtfAlcHom">
      <containerreq phase="First" priority="450">fieldval:abValue = 1</containerreq>
      </bootstrap>
    <eval phase="First" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

      field[abValue].value += 1]]></eval>
    </thing>
  <thing id="c5CAtfBotWP" name="Boots of the Winding Path" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A pair of boots (requires attunement){/i}\n\nWhile wearing these boots, a creature can use a bonus action to teleport up to 15 feet to an open space the creature can see. The creature must have occupied that space at some point during the current turn." compset="CustomSpec" summary="Infuse boots with teleportation." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)


     field[usrChosen1].chosen.field[livename].text &= " of the Winding Path"
     field[usrChosen1].chosen.field[sbName].text = field[usrChosen1].chosen.field[livename].text

     var sText as string
     sText = "While wearing these boots, a creature can use a bonus action to teleport up to 15 feet to an open space the creature can see. The creature must have occupied that space at some point during the current turn."

     field[usrChosen1].chosen.field[CustDesc].text = field[usrChosen1].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now
     doneif (tagis[portal.cfg2Abil] <> 1)

     field[usrCandid1].text = "(thingid.io5CAtfArcBts | thingid.io5CSimpBoot) & !Custom.Infus"

      perform delete[Helper.SpecUp]
      perform field[usrChosen1].chosen.assign[Helper.EquipMag]
      perform field[usrChosen1].chosen.assign[Custom.Infus]
      perform field[usrChosen1].chosen.assign[Helper.NeedAttune]]]></eval>
    <eval phase="Render" priority="100000" index="3"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg2Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: You can add a simple boots in the Magic tab for use with this feature.{/i}"
     elseif (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the recipient of the given item use the Boots of the Winding Path adjustment to apply this infusion to a helm. They can add simple boots from the Magic tab for use with this.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="4">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="cAtf5CRepMI2" name="Replicate Magic Item (Table A)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from the items listed in the below table. \n\nIn the tables, an item’s entry tells you whether the item requires attunement. See the item’s description in its sourcebook for more information on it, including the base item it is made from.{font Courier New}{b}\n{font Courier New}\n\nMagic Item                  Attunement{/b}{back FFFFFF}\nAlchemy jug                       No{back 010101}\nBag of holding                    No{back FFFFFF}\nCap of water breathing            No{back 010101}\nGoggles of night                  No{back FFFFFF}\nRope of climbing                  No{back 010101}\nSending stones                    No{back FFFFFF}\nWand of magic detection           No{back 010101}\nWand of secrets                   No{revert}" compset="CustomSpec" summary="Infuse an item with magic to replicate a specific magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <arrayval field="usrArray" index="1" value="Bag of holding"/>
    <arrayval field="usrArray" index="2" value="Cap of water breathing"/>
    <arrayval field="usrArray" index="3" value="Goggles of night"/>
    <arrayval field="usrArray" index="4" value="Rope of climbing"/>
    <arrayval field="usrArray" index="5" value="Sending stones"/>
    <arrayval field="usrArray" index="6" value="Wand of magic detection"/>
    <arrayval field="usrArray" index="7" value="Wand of secrets"/>
    <arrayval field="usrArray" index="0" value="Alchemy jug"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
     perform hero.childfound[cfg5CAtfInfus].setfocus

     var Inf as string

     if (field[usrIndex].value = 0) then
        Inf = " | thingid.c5CAtfAlJg"
     elseif (field[usrIndex].value = 1) then
        Inf = " | thingid.c5CAtfBgHd"
     elseif (field[usrIndex].value = 2) then
        Inf = " | thingid.c5CAtfCoWB"
     elseif (field[usrIndex].value = 3) then
        Inf = " | thingid.c5CAtfGgNi"
     elseif (field[usrIndex].value = 4) then
        Inf = " | thingid.c5CAtfRpCl"
     elseif (field[usrIndex].value = 5) then
        Inf = " | thingid.c5CAtfSdSt"
     elseif (field[usrIndex].value = 6) then
        Inf = " | thingid.c5CAtfWoMD"
     elseif (field[usrIndex].value = 7) then
        Inf = " | thingid.c5CAtfWndS"
     endif

     focus.field[cfgAllow2].text &= Inf
     focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="cAtf5CRepMI6" name="Replicate Magic Item (Table B)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from the items listed in the below table. \n\nIn the tables, an item’s entry tells you whether the item requires attunement. See the item’s description in its sourcebook for more information on it, including the base item it is made from.{font Courier New}{b}\n\nMagic Item                  Attunement{/b}{back FFFFFF}\nBoots of elvenkind                No{back 010101}\nCloak of elvenkind               Yes{back FFFFFF}\nCloak of the manta ray            No{back 010101}\nEyes of charming                 Yes{back FFFFFF}\nGloves of thievery                No{back 010101}\nLantern of revealing              No{back FFFFFF}\nPipes of haunting                 No{back 010101}\nRing of water walking             No{revert}" compset="CustomSpec" summary="Infuse an item with magic to replicate a specific magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <arrayval field="usrArray" index="1" value="Cloak of elvenkind"/>
    <arrayval field="usrArray" index="2" value="Cloak of the manta ray"/>
    <arrayval field="usrArray" index="3" value="Eyes of charming"/>
    <arrayval field="usrArray" index="4" value="Gloves of thievery"/>
    <arrayval field="usrArray" index="5" value="Lantern of revealing"/>
    <arrayval field="usrArray" index="6" value="Pipes of haunting"/>
    <arrayval field="usrArray" index="7" value="Ring of water walking"/>
    <arrayval field="usrArray" index="0" value="Boots of elvenkind"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
     perform hero.childfound[cfg5CAtfInfus].setfocus

     var Inf as string

     if (field[usrIndex].value = 0) then
        Inf = " | thingid.c5CAtfBoEl"
     elseif (field[usrIndex].value = 1) then
        Inf = " | thingid.c5CAtfCoEl"
     elseif (field[usrIndex].value = 2) then
        Inf = " | thingid.c5CAtfCoMR"
     elseif (field[usrIndex].value = 3) then
        Inf = " | thingid.c5CAtfEoC"
     elseif (field[usrIndex].value = 4) then
        Inf = " | thingid.c5CAtfGoT"
     elseif (field[usrIndex].value = 5) then
        Inf = " | thingid.c5CAtfLoR"
     elseif (field[usrIndex].value = 6) then
        Inf = " | thingid.c5CAtfPoH"
     elseif (field[usrIndex].value = 7) then
        Inf = " | thingid.c5CAtfRoWW"
     endif

     focus.field[cfgAllow2].text &= Inf
     focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="cAtf5CRepMI10A" name="Replicate Magic Item (Table C)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from the items listed in the below table. \n\nIn the tables, an item’s entry tells you whether the item requires attunement. See the item’s description in its sourcebook for more information on it, including the base item it is made from.{font Courier New}{b}\n\nMagic Item                  Attunement{/b}{back FFFFFF}\nBoots of striding and springing  Yes{back 010101}\nBoots of the winterlands         Yes{back FFFFFF}\nBracers of archery               Yes{back 010101}\nBrooch of shielding              Yes{back FFFFFF}\nCloak of protection              Yes{back 010101}\nEyes of the eagle                Yes{back FFFFFF}\nGauntlets of ogre power          Yes{back 010101}\nGloves of missile snaring        Yes{back FFFFFF}\nGloves of swimming and climbing  Yes{back 010101}\nHat of disguise                  Yes{back FFFFFF}\nHeadband of intellect            Yes{revert}{back 010101}" compset="CustomSpec" summary="Infuse an item with magic to replicate a specific magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <arrayval field="usrArray" index="2" value="Bracers of archery"/>
    <arrayval field="usrArray" index="3" value="Brooch of shielding"/>
    <arrayval field="usrArray" index="4" value="Cloak of protection"/>
    <arrayval field="usrArray" index="5" value="Eyes of the eagle"/>
    <arrayval field="usrArray" index="6" value="Gauntlets of ogre power"/>
    <arrayval field="usrArray" index="7" value="Gloves of missile snaring"/>
    <arrayval field="usrArray" index="8" value="Gloves of swimming + climbing"/>
    <arrayval field="usrArray" index="9" value="Hat of disguise"/>
    <arrayval field="usrArray" index="10" value="Headband of intellect"/>
    <arrayval field="usrArray" index="0" value="Boots of striding + springing"/>
    <arrayval field="usrArray" index="1" value="Boots of the winterlands"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
     perform hero.childfound[cfg5CAtfInfus].setfocus

     var Inf as string

     if (field[usrIndex].value = 0) then
        Inf = " | thingid.c5CAtfBSS"
     elseif (field[usrIndex].value = 1) then
        Inf = " | thingid.c5CAtfBotW"
     elseif (field[usrIndex].value = 2) then
        Inf = " | thingid.c5CAtfBoA"
     elseif (field[usrIndex].value = 3) then
        Inf = " | thingid.c5CAtfBrSh"
     elseif (field[usrIndex].value = 4) then
        Inf = " | thingid.c5CAtfCoP"
     elseif (field[usrIndex].value = 5) then
        Inf = " | thingid.c5CAtfEotE"
     elseif (field[usrIndex].value = 6) then
        Inf = " | thingid.c5CAtfGoOP"
     elseif (field[usrIndex].value = 7) then
        Inf = " | thingid.c5CAtfGoMS"
     elseif (field[usrIndex].value = 8) then
        Inf = " | thingid.c5CAtfGSC"
     elseif (field[usrIndex].value = 9) then
        Inf = " | thingid.c5CAtfHoD"
     elseif (field[usrIndex].value = 10) then
        Inf = " | thingid.c5CAtfHoI"
     endif

     focus.field[cfgAllow2].text &= Inf
     focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="cAtf5CRepMI10B" name="Replicate Magic Item (Table D)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from the items listed in the below table. \n\nIn the tables, an item’s entry tells you whether the item requires attunement. See the item’s description in its sourcebook for more information on it, including the base item it is made from.{font Courier New}{b}\n\nMagic Item                  Attunement{/b}{back FFFFFF}\nHelm of telepathy                Yes{back 010101}\nMedallion of thoughts            Yes{back FFFFFF}\nNecklace of adaptation           Yes{back 010101}\nPeriapt of wound closure         Yes{back FFFFFF}\nPipes of the sewers              Yes{back 010101}\nEfficient Quiver                  No{back FFFFFF}\nRing of jumping                  Yes{back 010101}\nRing of mind shielding           Yes{back FFFFFF}\nSlippers of spider climbing      Yes{back 010101}\nWinged boots                     Yes{back FFFFFF}\n{revert}{back 010101}" compset="CustomSpec" summary="Infuse an item with magic to replicate a specific magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <arrayval field="usrArray" index="1" value="Medallion of thoughts"/>
    <arrayval field="usrArray" index="2" value="Necklace of adaptation"/>
    <arrayval field="usrArray" index="3" value="Periapt of wound closure"/>
    <arrayval field="usrArray" index="4" value="Pipes of the sewers"/>
    <arrayval field="usrArray" index="5" value="Quiver of Ehlonna"/>
    <arrayval field="usrArray" index="6" value="Ring of jumping"/>
    <arrayval field="usrArray" index="7" value="Ring of mind shielding"/>
    <arrayval field="usrArray" index="8" value="Slippers of spider climbing"/>
    <arrayval field="usrArray" index="9" value="Winged boots"/>
    <arrayval field="usrArray" index="0" value="Helm of telepathy"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
     perform hero.childfound[cfg5CAtfInfus].setfocus

     var Inf as string

     if (field[usrIndex].value = 0) then
        Inf = " | thingid.c5CAtfHoT"
     elseif (field[usrIndex].value = 1) then
        Inf = " | thingid.c5CAtfMoT"
     elseif (field[usrIndex].value = 2) then
        Inf = " | thingid.c5CAtfNoA"
     elseif (field[usrIndex].value = 3) then
        Inf = " | thingid.c5CAtfPoWC"
     elseif (field[usrIndex].value = 4) then
        Inf = " | thingid.c5CAtfPotS"
     elseif (field[usrIndex].value = 5) then
        Inf = " | thingid.c5CAtfEfQu"
     elseif (field[usrIndex].value = 6) then
        Inf = " | thingid.c5CAtfRoJ"
     elseif (field[usrIndex].value = 7) then
        Inf = " | thingid.c5CAtfRoMS"
     elseif (field[usrIndex].value = 8) then
        Inf = " | thingid.c5CAtfSoSC"
     elseif (field[usrIndex].value = 9) then
        Inf = " | thingid.c5CAtfWiBt"
     endif

     focus.field[cfgAllow2].text &= Inf
     focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="cAtf5CRepMI14" name="Replicate Magic Item (Table E)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from the items listed in the below table. \n\nIn the tables, an item’s entry tells you whether the item requires attunement. See the item’s description in its sourcebook for more information on it, including the base item it is made from.{font Courier New}{b}\n\nMagic Item                  Attunement{/b}{back FFFFFF}\nAmulet of health                 Yes{back 010101}\nBelt of hill giant strength      Yes{back FFFFFF}\nBoots of levitation              Yes{back 010101}\nBoots of speed                   Yes{back FFFFFF}\nBracers of defense               Yes{back 010101}\nCloak of the bat                 Yes{back FFFFFF}\nDimensional shackles              No{back 010101}\nGem of seeing                    Yes{back FFFFFF}\nHorn of blasting                  No{back 010101}\nRing of free action              Yes{back FFFFFF}\nRing of protection               Yes{back 010101}\nRing of the ram                  Yes{back FFFFFF}\n{revert}{back 010101}" compset="CustomSpec" summary="Infuse an item with magic to replicate a specific magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <arrayval field="usrArray" index="1" value="Belt of hill giant strength"/>
    <arrayval field="usrArray" index="2" value="Boots of levitation"/>
    <arrayval field="usrArray" index="3" value="Boots of speed"/>
    <arrayval field="usrArray" index="4" value="Bracers of defense"/>
    <arrayval field="usrArray" index="5" value="Cloak of the bat"/>
    <arrayval field="usrArray" index="6" value="Dimensional shackles"/>
    <arrayval field="usrArray" index="7" value="Gem of seeing"/>
    <arrayval field="usrArray" index="8" value="Horn of blasting"/>
    <arrayval field="usrArray" index="9" value="Ring of free action"/>
    <arrayval field="usrArray" index="10" value="Ring of protection"/>
    <arrayval field="usrArray" index="11" value="Ring of the ram"/>
    <arrayval field="usrArray" index="0" value="Amulet of health"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="User" tag="NoAutoName"/>
    <eval phase="First" priority="200"><![CDATA[
     perform hero.childfound[cfg5CAtfInfus].setfocus

     var Inf as string

     if (field[usrIndex].value = 0) then
        Inf = " | thingid.c5CAtfAoH"
     elseif (field[usrIndex].value = 1) then
        Inf = " | thingid.c5CAtfBHGS"
     elseif (field[usrIndex].value = 2) then
        Inf = " | thingid.c5CAtfBoL"
     elseif (field[usrIndex].value = 3) then
        Inf = " | thingid.c5CAtfBoS"
     elseif (field[usrIndex].value = 4) then
        Inf = " | thingid.c5CAtfBoD"
     elseif (field[usrIndex].value = 5) then
        Inf = " | thingid.c5CAtfCotB"
     elseif (field[usrIndex].value = 6) then
        Inf = " | thingid.c5CAtfDmSh"
     elseif (field[usrIndex].value = 7) then
        Inf = " | thingid.c5CAtfGoS"
     elseif (field[usrIndex].value = 8) then
        Inf = " | thingid.c5CAtfHoB"
     elseif (field[usrIndex].value = 9) then
        Inf = " | thingid.c5CAtfRoFA"
     elseif (field[usrIndex].value = 10) then
        Inf = " | thingid.c5CAtfRoP"
     elseif (field[usrIndex].value = 11) then
        Inf = " | thingid.c5CAtfRotR"
     endif

     focus.field[cfgAllow2].text &= Inf
     focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfEnd1" name="Enhanced Defense" description="{i}{b}Item:{/b} A suit of armor or a shield{/i}\n\nA creature gains a +1 bonus to Armor Class while wearing (armor) or wielding (shield) the infused item.\n\nThe bonus increases to +2 when you reach 10th level in this class." compset="CustomSpec" summary="Grant an AC bonus to armor or a shield." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CEnhDef"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfEnW1" name="Enhanced Weapon" description="{i}{b}Item:{/b} A simple or martial weapon/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it.\n\nThe bonus increases to +2 when you reach 10th level in this class." compset="CustomSpec" summary="Grant an attack and damage bonus to a weapon." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CEnhWea"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfRdW1" name="Radiant Weapon" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A simple or martial weapon (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it. While holding it, the wielder can use a bonus action to cause it to shine bright light in a 30-foot radius and dim light for an additional 30 feet. The wielder can also use a bonus action to extinguish the light.\n\nThe weapon has four charges. Immediately after being hit by a melee attack, the wielder can take a reaction to expend a charge, causing the attacker to be blinded until the end of the attacker’s next turn. The attacker can make a successful Constitution saving throw versus your spell save DC to avoid this effect.\n\nThe weapon regains 1d4 spent charges each dawn." compset="CustomSpec" summary="Grant a bonus, luminescence, and blinding to a weapon." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CRadWep"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfRsA1" name="Resistant Armor" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nWhile wearing this armor, a creature has resistance to one damage type, chosen from this list when the item is infused: acid, cold, fire, force, lightning, necrotic, poison, psychic, radiant, or thunder." compset="CustomSpec" summary="Grant a type of damage resistance to armor." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CResArm"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfRtW1" name="Returning Weapon" description="{i}{b}Item:{/b} A simple or martial weapon with the thrown property{/i}\n\nThis magic weapon has a +1 bonus to its attack and damage rolls. Immediately after it is used to make a ranged attack, it returns to the user&apos;s hand." compset="CustomSpec" summary="Grant a bonus and the returning feature to a thrown weapon." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CRetWep"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfRpS1" name="Repeating Shot" description="{i}Item: A simple or martial weapon with the ammunition property (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to its ranged attack and damage rolls. It also ignores the loading property, if it has it.\n\nThe weapon needs no ammunition, though it can still use it if you choose. When used to make a ranged attack roll without ammunition, it magically produces a piece of ammunition, which vanishes the moment after it hits or misses a target." compset="CustomSpec" summary="Grant a bonus to and ignore the loading property of a weapon." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CRepShot"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfRSh1" name="Repulsion Shield" description="{i}Prerequisite: 6th-level artificer Item: A shield (requires attunement){/i}\n\nThe infused shield grants a +1 bonus to Armor Class while wielded. The shield has 4 charges. While holding it, the wielder can take a reaction immediately after being hit by a melee attack to spend a charge and push the attacker up to 15 feet away. The shield regains 1d4 spent charges each dawn." compset="CustomSpec" summary="Grant an AC bonus and pushing feature to a shield." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.cAtf5CRepSh"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfSRR1" name="Spell-Refueling Ring" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A ring (requires attunement){/i}\n\nWhile wearing this ring, the creature can use an action to regain one spent spell slot of 3rd level or lower. Once used, the ring cannot be used again until the next dawn." compset="CustomSpec" summary="Grant a ring the ability to restore a spell slot." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfSpRfRn"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfEAF1" name="Enhanced Arcane Focus" description="{i}{b}Item:{/b} A rod, staff, or wand (requires attunement){/i}\n\nHolding this item grants a +1 bonus to spell attack rolls to the holder. The creature also ignores half cover when making their spell attacks." compset="CustomSpec" summary="Infuse a focus that grants +1 to spell attacks and ignores half cover." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfEnArFc"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfHoA1" name="Helm of Awareness" description="{i}{b}Prerequisite:{/b} 10th-level artificer\n{b}Item:{/b} A helmet (requires attunement){/i}\n\nWearing this helmet grants the wearer advantage on their initiative rolls. Additionally, the wearer cannot be surprised unless they&apos;re incapacitated." compset="CustomSpec" summary="Infuse a helm that grants advantage on initiative and prevents surprise." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfHlmAwr"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 10th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfMnd1" name="Mind Sharpener" description="{i}{b}Item:{/b} A suit of armor or robes{/i}\n\nThe infused robes have 4 charges. When the wearer fails a Constitution save to maintain their concentration on a spell, they can take a reaction to spend 1 charge, causing them to succeed to save instead. The robes regain 1d4 spent charges each dawn." compset="CustomSpec" summary="Infuse robes that help pass saves for spell concentration." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfMndShr"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfAMS1" name="Armor of Magical Strength" description="{i}{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up." compset="CustomSpec" summary="Infuse armor to help Strength checks and saves and prevent you from going prone." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfArMgSt"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfAPA1" name="Arcane Propulsion Armor" description="{i}{b}Prerequisite:{/b} 14th-level artificer\n{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor grants its wearer these benefits:\n\n• The wearer&apos;s walking speed increases by 5 feet.\n• The armor includes weaponized gauntlets, useable as magic melee weapons when not holding anything. The wearer is proficient with the gauntlets, and each deals 1d8 force damage on a hit, plus they have the thrown property. Their normal range is 20 feet and their long range is 60 feet. When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself. \n• The armor cannot be removed against the wearer&apos;s will.\n• The armor replaces any lost limbs, functioning just like the missing limb(s)." compset="CustomSpec" summary="Infuse armor to help Strength checks and saves and prevent you from going prone." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfArcPro"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 14th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfBWP1" name="Boots of the Winding Path" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A pair of boots (requires attunement){/i}\n\nWhile wearing these boots, a creature can use a bonus action to teleport up to 15 feet to an open space the creature can see. The creature must have occupied that space at some point during the current turn." compset="CustomSpec" summary="Infuse boots with teleportation." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfBotWP"

  focus.field[cfgAllow2].text &= Inf
  focus.field[cfgAllow3].text &= Inf]]></eval>
    <exprreq message="Must be a 6th level Artificer"><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfHmS1" name="Homunculus Servant" description="{i}{b}Item:{/b} A gem or crystal worth at least 100 gp{/i}\n\nYou learn to magically create a special homunculus servant. The creature instantly forms around the infused item, with that item serving as its heart. You determine the homunculus&apos;s appearance. It is friendly to you and your allies, and it obeys your commands. \n\nIn combat, the homunculus shares your initiative, but takes its turn right after yours. It moves and uses its reaction without needing to be commanded. You can use a bonus action to command it to take an action, which can be from its stat block or any other action it is capable of doing. If you issue no such command, it takes the Dodge action. When you&apos;re incapacitated, it can use any of those actions, not just Dodge.\n\nIf the mending spell is cast on it, it regains 2d6 hit points. If you or the homunculus dies, it vanishes and its heart remains in its space." compset="CustomSpec" summary="Create a magical homunculus companion." uniqueness="unique">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <eval phase="First" priority="200"><![CDATA[
perform hero.childfound[cfg5CAtfInfus].setfocus

var Inf as string
Inf = " | thingid.c5CAtfAlcHm"

  focus.field[cfgAllow2].text &= Inf]]></eval>
    </thing>
  <thing id="c5CAtfAlJg" name="Replicate Magic Item - Alchemy Jug" description="You infuse a non-magical item with magic, turning it into the alchemy jug magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the alchemy jug magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="io5CAlcJug">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfBgHd" name="Replicate Magic Item - Bag of Holding" description="You infuse a non-magical item with magic, turning it into the bag of holding magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the bag of holding magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBagHold">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfCoWB" name="Replicate Magic Item - Cap of Water Breathing" description="You infuse a non-magical item with magic, turning it into the cap of water breathing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the cap of water breathing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="io5CCapOWa">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfGgNi" name="Replicate Magic Item - Goggles of Night" description="You infuse a non-magical item with magic, turning it into the goggles of night magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the goggles of night magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miGoggNigh">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfRpCl" name="Replicate Magic Item - Rope of Climbing" description="You infuse a non-magical item with magic, turning it into the rope of climbing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the rope of climbing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miRopeClim">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfSdSt" name="Replicate Magic Item - Sending Stones" description="You infuse a non-magical item with magic, turning it into the sending stones magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the sending stones magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="ioSendSton">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfWoMD" name="Replicate Magic Item - Wand of Magic Detection" description="You infuse a non-magical item with magic, turning it into the wand of magic detection magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the wand of magic detection magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="waMagiDete">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfWndS" name="Replicate Magic Item - Wand of Secrets" description="You infuse a non-magical item with magic, turning it into the wand of secrets magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the wand of secrets magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="waSecrets">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    </thing>
  <thing id="c5CAtfBoEl" name="Replicate Magic Item - Boots of Elvenkind" description="You infuse a non-magical item with magic, turning it into the boots of elvenkind magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the boots of elvenkind magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBootElve">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfCoEl" name="Replicate Magic Item - Cloak of Elvenkind" description="You infuse a non-magical item with magic, turning it into the cloak of elvenkind magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the cloak of elvenkind magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miCloaElve">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfCoMR" name="Replicate Magic Item - Cloak of the Manta Ray" description="You infuse a non-magical item with magic, turning it into the cloak of the manta ray magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the cloak of the manta ray magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miCloaMant">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfEoC" name="Replicate Magic Item - Eyes of Charming" description="You infuse a non-magical item with magic, turning it into the eyes of charming magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the eyes of charming magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miEyesChar">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfGoT" name="Replicate Magic Item - Gloves of Thievery" description="You infuse a non-magical item with magic, turning it into the gloves of thievery magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the gloves of thievery magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="io5CGloThi">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfLoR" name="Replicate Magic Item - Lantern of Revealing" description="You infuse a non-magical item with magic, turning it into the lantern of revealing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the lantern of revealing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miLantReve">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfPoH" name="Replicate Magic Item - Pipes of Haunting" description="You infuse a non-magical item with magic, turning it into the pipes of haunting magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the pipes of haunting magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miPipeHaun">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfRoWW" name="Replicate Magic Item - Ring of Water Walking" description="You infuse a non-magical item with magic, turning it into the ring of water walking magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of water walking magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riWateWalk">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 6."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 6]]></exprreq>
    </thing>
  <thing id="c5CAtfBSS" name="Replicate Magic Item - Boots of Striding and Springing" description="You infuse a non-magical item with magic, turning it into the boots of striding and springing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the boots of striding and springing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBootStri">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfBotW" name="Replicate Magic Item - Boots of the Winterlands" description="You infuse a non-magical item with magic, turning it into the boots of the winterlands magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the boots of the winterlands magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBootWint">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfBoA" name="Replicate Magic Item - Bracers of Archery" description="You infuse a non-magical item with magic, turning it into the bracers of archery magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the bracers of archery magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBracArch">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfBrSh" name="Replicate Magic Item - Brooch of Shielding" description="You infuse a non-magical item with magic, turning it into the brooch of shielding magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the brooch of shielding magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBrooShie">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfCoP" name="Replicate Magic Item - Cloak of Protection" description="You infuse a non-magical item with magic, turning it into the cloak of protection magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the cloak of protection magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miCloaProt">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfEotE" name="Replicate Magic Item - Eyes of the Eagle" description="You infuse a non-magical item with magic, turning it into the eyes of the eagle magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the eyes of the eagle magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miEyesEagl">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfGoOP" name="Replicate Magic Item - Gauntlets of Ogre Power" description="You infuse a non-magical item with magic, turning it into the gauntlets of ogre power magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the gauntlets of ogre power magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miGaunOgre">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfGoMS" name="Replicate Magic Item - Gloves of Missile Snaring" description="You infuse a non-magical item with magic, turning it into the gloves of missile snaring magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the gloves of missile snaring magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miGlovMiss">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfGSC" name="Replicate Magic Item - Gloves of Swimming and Climbing" description="You infuse a non-magical item with magic, turning it into the gloves of swimming and climbing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the gloves of swimming and climbing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miGlovSwim">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfHoD" name="Replicate Magic Item - Hat of Disguise" description="You infuse a non-magical item with magic, turning it into the hat of disguise magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the hat of disguise magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miHatDisg">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfHoI" name="Replicate Magic Item - Headband of Intellect" description="You infuse a non-magical item with magic, turning it into the headband of intellect magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the headband of intellect magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miHeadInte">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfHoT" name="Replicate Magic Item - Helm of Telepathy" description="You infuse a non-magical item with magic, turning it into the helm of telepathy magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the helm of telepathy magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miHelmTele">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfMoT" name="Replicate Magic Item - Medallion of Thoughts" description="You infuse a non-magical item with magic, turning it into the medallion of thoughts magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the medallion of thoughts magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miMedaThou">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfNoA" name="Replicate Magic Item - Necklace of Adaptation" description="You infuse a non-magical item with magic, turning it into the necklace of adaptation magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the necklace of adaptation magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miNeckAdap">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfPoWC" name="Replicate Magic Item - Periapt of Wound Closure" description="You infuse a non-magical item with magic, turning it into the periapt of wound closure magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the periapt of wound closure magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miPeriWoun">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfPotS" name="Replicate Magic Item - Pipes of the Sewers" description="You infuse a non-magical item with magic, turning it into the pipes of the sewers magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the pipes of the sewers magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miPipeSewe">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfEfQu" name="Replicate Magic Item - Quiver of Ehlonna" description="You infuse a non-magical item with magic, turning it into the quiver of ehlonna magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the quiver of ehlonna magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miEffiQuiv">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfRoJ" name="Replicate Magic Item - Ring of Jumping" description="You infuse a non-magical item with magic, turning it into the ring of jumping magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of jumping magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riJumping">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfRoMS" name="Replicate Magic Item - Ring of Mind Shielding" description="You infuse a non-magical item with magic, turning it into the ring of mind shielding magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of mind shielding magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riMindShie">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfSoSC" name="Replicate Magic Item - Slippers of Spider Climbing" description="You infuse a non-magical item with magic, turning it into the slippers of spider climbing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the slippers of spider climbing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miSlipSpid">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfWiBt" name="Replicate Magic Item - Winged Boots" description="You infuse a non-magical item with magic, turning it into the winged boots magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the winged boots magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miWingBoot">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 10."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 10]]></exprreq>
    </thing>
  <thing id="c5CAtfAoH" name="Replicate Magic Item - Amulet of Health" description="You infuse a non-magical item with magic, turning it into the amulet of health magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the amulet of health magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miAmulHeal">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfBHGS" name="Replicate Magic Item - Belt of Hill Giant Strength" description="You infuse a non-magical item with magic, turning it into the belt of hill giant strength magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the belt of hill giant strength magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBeltHill">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfBoL" name="Replicate Magic Item - Boots of Levitation" description="You infuse a non-magical item with magic, turning it into the boots of levitation magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the boots of levitation magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBootLevi">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfBoS" name="Replicate Magic Item - Boots of Speed" description="You infuse a non-magical item with magic, turning it into the boots of speed magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the boots of speed magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBootSpee">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfBoD" name="Replicate Magic Item - Bracers of Defense" description="You infuse a non-magical item with magic, turning it into the bracers of defense magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the bracers of defense magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miBracDefe">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfCotB" name="Replicate Magic Item - Cloak of the Bat" description="You infuse a non-magical item with magic, turning it into the cloak of the bat magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the cloak of the bat magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miCloaBat">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfDmSh" name="Replicate Magic Item - Dimensional Shackles" description="You infuse a non-magical item with magic, turning it into the dimensional shackles magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the dimensional shackles magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miDimeShac">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfGoS" name="Replicate Magic Item - Gem of Seeing" description="You infuse a non-magical item with magic, turning it into the gem of seeing magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the gem of seeing magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miGemSeei">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfHoB" name="Replicate Magic Item - Horn of Blasting" description="You infuse a non-magical item with magic, turning it into the horn of blasting magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the horn of blasting magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="miHornBlas">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfRoFA" name="Replicate Magic Item - Ring of Free Action" description="You infuse a non-magical item with magic, turning it into the ring of free action magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of free action magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riFreeActi">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfRoP" name="Replicate Magic Item - Ring of Protection" description="You infuse a non-magical item with magic, turning it into the ring of protection magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of protection magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riProtecti">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="c5CAtfRotR" name="Replicate Magic Item - Ring of the Ram" description="You infuse a non-magical item with magic, turning it into the ring of the ram magic item. See the magic item&apos;s description for the base item needed." compset="CustomSpec" summary="Infuse an item to replicate the ring of the ram magic item." uniqueness="unique">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="riRam">
      <containerreq phase="First" priority="0"><![CDATA[fieldval:abValue > 0]]></containerreq>
      <autotag group="Custom" tag="Infus"/>
      </bootstrap>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     endif]]></eval>
    <eval phase="GlobalTest" priority="999999" index="8"><![CDATA[if (tagis[portal.cfg2Abil] <> 0) then
field[abValue].value = 1
endif]]></eval>
    <exprreq message="These items become available at Artificer level 14."><![CDATA[hero.child[cHelpAtf].field[cTotalLev].value >= 14]]></exprreq>
    </thing>
  <thing id="id5CSimpRod" name="Simple Rod" description="A simple rod without magical properties, useful for the Artificer&apos;s Enhanced Arcane Focus infusion or the Artillerist&apos;s Arcane Firearm feature. If you want to rename this rod, use the Custom Name: Equipment adjustment." compset="Rod">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <eval phase="Final">perform delete[User.Tracker]</eval>
    </thing>
  <thing id="is5CSimpStf" name="Simple Staff" description="A simple staff without magical properties, useful for the Artificer&apos;s Enhanced Arcane Focus infusion or the Artillerist&apos;s Arcane Firearm feature. If you want to rename this staff, use the Custom Name: Equipment adjustment." compset="Staff">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <eval phase="Final">perform delete[User.Tracker]</eval>
    </thing>
  <thing id="iw5CSimpWnd" name="Simple Wand" description="A simple wand without magical properties, useful for the Artificer&apos;s Enhanced Arcane Focus infusion or the Artillerist&apos;s Arcane Firearm feature. If you want to rename this wand, use the Custom Name: Equipment adjustment." compset="Wand">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <eval phase="Final">perform delete[User.Tracker]</eval>
    </thing>
  <thing id="ir5CSimpRing" name="Simple Ring" description="A simple ring without magical properties, useful for the Artificer&apos;s Spell-Refueling Ring infusion. If you want to rename this ring, use the Custom Name: Equipment adjustment." compset="Ring">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    </thing>
  <thing id="io5CSimpHelm" name="Simple Helm" description="A simple helm without magical properties, useful for the Artificer&apos;s Helm of Awareness infusion. If you want to rename this helm, use the Custom Name: Equipment adjustment." compset="Wondrous">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="EquipMag"/>
    <tag group="Helper" tag="EquipAvail"/>
    </thing>
  <thing id="g5CRobes" name="Robes" compset="Gear" replaces="gRobes">
    <fieldval field="gWeight" value="4"/>
    <fieldval field="gCost" value="1"/>
    <tag group="GearType" tag="gtAdventGe" name="Adventuring Gear" abbrev="Adventuring"/>
    <tag group="Helper" tag="EquipMag"/>
    </thing>
  <thing id="i5CAtfArcGn" name="Arcane Propulsion Gauntlet" description="When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself." compset="MagicWep">
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="8"/>
    <fieldval field="wRangeNorm" value="20"/>
    <fieldval field="wRangeLong" value="60"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="GearType" tag="gtWeapon"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wCategory" tag="RangeThrow"/>
    <tag group="Helper" tag="NoSelect"/>
    <tag group="DamageType" tag="dtForce"/>
    <tag group="wProperty" tag="Thrown"/>
    <tag group="Helper" tag="GearNoSize"/>
    <tag group="Helper" tag="FixSizeDmg"/>
    <tag group="wProperty" tag="Light"/>
    <child entity="wSpecMagic"></child>
    </thing>
  <thing id="io5CSimpBoot" name="Simple Boots" description="A simple pair of boots without magical properties, useful for the Artificer&apos;s Boots of the Winding Path infusion. If you want to rename this helm, use the Custom Name: Equipment adjustment." compset="Wondrous">
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="EquipMag"/>
    <tag group="Helper" tag="EquipAvail"/>
    </thing>
  <thing id="r5CAtfAlchHom" name="Homunculus Servant" compset="Race">
    <fieldval field="rCR" value="0.0"/>
    <fieldval field="rSpeed" value="20"/>
    <fieldval field="rSTR" value="-6"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rCON" value="2"/>
    <fieldval field="rCHA" value="-3"/>
    <fieldval field="rLangPromp" value="the languages of its creator"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rHDSides" value="4"/>
    <fieldval field="rHitDice" value="1"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="RaceSize" tag="Tiny12" name="Tiny" abbrev="Tiny"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="ProfSkill" tag="skPercep"/>
    <tag group="ProfSkill" tag="skStealth"/>
    <tag group="CondImm" tag="pcnPoison" name="Poisoned" abbrev="Poisoned"/>
    <tag group="DamageImm" tag="dtPoison" name="Poison" abbrev="Poison"/>
    <tag group="ProfDouble" tag="skPercep"/>
    <tag group="ProfSave" tag="svDEX"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtForce"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="4"/>
      <assignval field="livename" value="Force Strike"/>
      <assignval field="wRangeNorm" value="30"/>
      <assignval field="sbName" value="Force Strike"/>
      <assignval field="wTarget" value="one target you can see"/>
      </bootstrap>
    <bootstrap thing="tpConst"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands your languages"/>
      <assignval field="sbName" value="Understands your languages"/>
      </bootstrap>
    <bootstrap thing="ra5CEvaIncN">
      <assignval field="abText" value="the homunculus"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="ra5CAtfChnMg"></bootstrap>
    <eval phase="PostAttr" priority="11000" index="2">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj -= hero.childfound[aCON].field[aModBonus].value
HPAdj *= (field[rHitDice].value)
HPAdj += 1
HPAdj += master.childfound[aINT].field[aModBonus].value
herofield[tBonusHP].value += HPAdj</eval>
    <eval phase="Final" priority="50000"><![CDATA[
~ pull our DEX and prof to determine what our attack bonus currently is

var CrAt as number

CrAt = (hero.childfound[aDEX].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

~ add our spell attack (abValue4 of Might of the Master) and subtract
~ the current to attack bonus from any natural attacks. This way any 
~ other additions to the bonus can still count

foreach pick in hero from BaseWep where "wGroup.Natural"
eachpick.field[wRanAtk].value += hero.childfound[ra5CAtfMigM].field[abValue4].value - CrAt
eachpick.field[wDamBonus].value -= hero.childfound[aDEX].field[aModBonus].value
nexteach]]></eval>
    </thing>
  <thing id="ra5CAtfMigM" name="Might of the Master" description="When your proficiency bonus increases by 1, these increase by 1 as well: the homunculus&apos;s skill and saving throw bonuses (above) and the bonuses to hit and damage of its attack (below)." compset="RaceSpec">
    <fieldval field="abValue" value="2"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Helper" tag="ShowSpec"/>
    <eval phase="PostAttr" priority="12000" index="5"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ and damage.
foreach pick in hero from BaseWep where "wGroup.Natural"
   eachpick.field[dmmBonus].value = field[abValue2].value 
   eachpick.field[dmrBonus].value = field[abValue2].value
nexteach]]></eval>
    <eval phase="PostLevel" index="6"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ store the proficiency of the hero in abValue2:

field[abValue2].value = master.childfound[ProfBonus].field[tProfBonus].value

~ now we replace the prof bonus of the minion with the stored hero one

hero.childfound[ProfBonus].field[tProfBonus].value = field[abValue2].value]]></eval>
    <eval phase="First" priority="500"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      foreach pick in hero from BaseRace
      eachpick.field[rHitDice].value = field[abValue5].value
      nexteach]]></eval>
    <eval phase="Final" priority="49000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Pull master's spell save DC into abValue3 for use in other features
  field[abValue3].value = master.childfound[cHelpAtf].field[cSplSaveDC].value  


      ~Pull master's spell attack into abValue4 for use in other features
  field[abValue4].value = master.childfound[cHelpAtf].field[cSplAttack].value]]></eval>
    </thing>
  <thing id="c5CAtfAlcHom" name="Homunculus Servant" compset="Companion" stacking="never" uniqueness="unique">
    <fieldval field="CompType" value="Steel Defender"/>
    <eval phase="First" priority="455" index="4"><![CDATA[~ Well, there's no way (afaik) to count the class levels from the hero
~ at the minion, so we need to do it somewhere in the hero context and 
~ send the info to be used at the minion. 
~
~ In this case, since all animal companions will receive the 
~ companion bond racial ability to add their extra skills, we'll
~ use it to bootstrap the extra HD as well. The tag expression used 
~ in the condition for the bootstrap will test the value of the
~ abValue5 field, which we set here.

~ This must be done at the First stage, since the bootstraps happen
~ there. Or so I'm told by the error messages.

var level as number
level = hero.tagcount[Classes.ArtificerR]
minion.childfound[ra5CAtfMigM].field[abValue5].value = level]]></eval>
    <minion id="Familiar">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="Hero" tag="FixedRace"/>
      <bootstrap thing="r5CAtfAlchHom"></bootstrap>
      <bootstrap thing="ra5CAtfMigM"></bootstrap>
      </minion>
    </thing>
  <thing id="ra5CAtfChnMg" name="Channel Magic" description="The homunculus delivers a touch-range spell you cast. To do so, it must be within 120 feet of you." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    </thing>
  <thing id="trk5CAtfRadW" name="Radiant Weapon" compset="Tracker">
    <fieldval field="trkMax" value="4"/>
    <tag group="Usage" tag="Charges"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="trk5CAtfRepS" name="Repulsion Shield" compset="Tracker">
    <fieldval field="trkMax" value="4"/>
    <tag group="Usage" tag="Charges"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="trk5CAtfSpRfRn" name="Spell-Refueling Ring" compset="Tracker">
    <fieldval field="trkMax" value="1"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="trk5CMndShr" name="Mind Sharpener" compset="Tracker">
    <fieldval field="trkMax" value="4"/>
    <tag group="Usage" tag="Charges"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="trk5CAtfArMg" name="Armor of Magical Strength" compset="Tracker">
    <fieldval field="trkMax" value="6"/>
    <tag group="Usage" tag="Charges"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="p5CAtfInvEnhDef" name="Infusion: Enhanced Defense" description="{i}{b}Item:{/b} A suit of armor or a shield{/i}\n\nA creature gains a +1 bonus to Armor Class while wearing (armor) or wielding (shield) the infused item.\n\nThe bonus increases to +2 when the Artificer reaches 10th level in that class.\n\n\n{i}Note: Use this adjustment if you have received an item with the Enhnace Defense infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="component.BaseArmor &amp; !Helper.EquipMag &amp; !Helper.Natural"/>
    <fieldval field="pMinimum" value="1"/>
    <fieldval field="pMaximum" value="2"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var iVar as number
     iVar = field[pAdjust].value

     field[pChosen].chosen.field[Bonus].value += iVar
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="999999999" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var iVar as number
     iVar = field[pAdjust].value

     field[pChosen].chosen.field[livename].text &= " +" & iVar
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    </thing>
  <thing id="p5CAtfEnhWep" name="Infusion: Enhanced Weapon" description="{i}{b}Item:{/b} A simple or martial weapon{/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it.\n\nThe bonus increases to +2 when the Artificer reaches 10th level in that class.\n\n\n{i}Note: Use this adjustment if you have received an item with the Enhnace Weapon infusion.{/i}" compset="InPlay">
    <fieldval field="pMinimum" value="1"/>
    <fieldval field="pMaximum" value="2"/>
    <fieldval field="pCandExpr" value="component.BaseWep &amp; !Helper.EquipMag &amp; !component.BaseNatWep"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="AdjNoPlus" name="AdjNoPlus" abbrev="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var iVar as number
     iVar = field[pAdjust].value

     field[pChosen].chosen.field[Bonus].value += iVar
     perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var iVar as number
     iVar = field[pAdjust].value

     field[pChosen].chosen.field[livename].text &= " +" & iVar
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    </thing>
  <thing id="p5CAtfRadWep" name="Infusion: Radiant Weapon" description="{i}{b}Prerequisite:{/b} 6th-level artificer\n{b}Item:{/b} A simple or martial weapon (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to attack and damage rolls made with it. While holding it, the wielder can use a bonus action to cause it to shine bright light in a 30-foot radius and dim light for an additional 30 feet. The wielder can also use a bonus action to extinguish the light.\n\nThe weapon has four charges. Immediately after being hit by a melee attack, the wielder can take a reaction to expend a charge, causing the attacker to be blinded until the end of the attacker’s next turn. The attacker can make a successful Constitution saving throw versus your spell save DC to avoid this effect.\n\nThe weapon regains 1d4 spent charges each dawn.\n\n\n{i}Note: Use this adjustment if you have received an item with the Radiant Weapon infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="component.BaseWep &amp; !Helper.EquipMag &amp; !component.BaseNatWep"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="AdjNoPlus" name="AdjNoPlus" abbrev="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="DescInfo" tag="cAtf5CRadWep" name="Radiant Weapon" abbrev="Radiant Weapon"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <bootstrap thing="trk5CAtfRadW">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[Bonus].value += 1
     perform pulltags[DescInfo.cAtf5CRadWep]
     perform field[pChosen].chosen.pushtags[DescInfo.cAtf5CRadWep]
     perform field[pChosen].chosen.assign[Helper.EquipMag]
     perform field[pChosen].chosen.assign[Helper.NeedAttune]
     perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text = "Radiant " & field[pChosen].chosen.field[livename].text & " +1"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    </thing>
  <thing id="p5CAtfResArm" name="Infusion: Resistant Armor" description="{i}{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nWhile wearing this armor, a creature has resistance to one damage type, chosen from this list when the item is infused: acid, cold, fire, force, lightning, necrotic, poison, psychic, radiant, or thunder.\n\n\n{i}Note: Use this adjustment if you have received an item with the Resistant Armor infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr2" value="component.DamageType &amp; (DamageRes.dtAcid | DamageRes.dtCold | DamageRes.dtFire | DamageRes.dtForce | DamageRes.dtLightnin | DamageRes.dtNecrotic | DamageRes.dtPoison | DamageRes.dtPsychic | DamageRes.dtRadiant | DamageRes.dtThunder)"/>
    <fieldval field="pCandExpr" value="component.BaseArmor &amp; !EquipType.Shield &amp; !Helper.EquipMag &amp; !Helper.Natural"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <eval phase="Render" priority="999999999999"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
     doneif (field[pChosen2].ischosen = 0)

     var sName as string

     sName = field[pChosen2].chosen.field[name].text
     field[pChosen].chosen.field[livename].text = field[pChosen].chosen.field[livename].text & " of " & sName & " Resistance"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
     doneif (field[pChosen2].ischosen = 0)
      
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]

      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      perform field[pChosen2].chosen.pulltags[DamageRes.?]
      perform hero.pushtags[DamageRes.?]]]></eval>
    </thing>
  <thing id="p5CAtfRetWep" name="Infusion: Returning Weapon" description="{i}{b}Item:{/b} A simple or martial weapon with the thrown property{/i}\n\nThis magic weapon has a +1 bonus to its attack and damage rolls. Immediately after it is used to make a ranged attack, it returns to the user&apos;s hand.\n\n\n{i}Note: Use this adjustment if you have received an item with the Returning Weapon infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="component.BaseWep &amp; !Helper.EquipMag &amp; !component.BaseNatWep &amp; wProperty.Thrown"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="AdjNoPlus" name="AdjNoPlus" abbrev="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="Helper" tag="NoIncr"/>
    <eval phase="Render" priority="99999" index="2">~ If we&apos;re not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing&apos;s been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var sText as string
     sText = &quot;This weapon returns to the wielder’s hand immediately after it is used to make a ranged attack.&quot;

     field[pChosen].chosen.field[livename].text &amp;= &quot; of Returning +1&quot;
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text
     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    <eval phase="PostLevel" priority="11000"><![CDATA[~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[Bonus].value += 1
     perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    </thing>
  <thing id="p5CAtfRepShield" name="Infusion: Repulsion Shield" description="{i}Prerequisite: 6th-level artificer Item: A shield (requires attunement){/i}\n\nThe infused shield grants a +1 bonus to Armor Class while wielded. The shield has 4 charges. While holding it, the wielder can take a reaction immediately after being hit by a melee attack to spend a charge and push the attacker up to 15 feet away. The shield regains 1d4 spent charges each dawn.\n\n\n{i}Note: Use this adjustment if you have received an item with the Repulsion Shield infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="component.BaseArmor &amp; EquipType.Shield &amp; !Helper.EquipMag &amp; !Helper.Natural"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="trk5CAtfRepS">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[Bonus].value += 1
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[DescInfo.cAtf5CRepSh]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="Render" priority="999999999" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text &= " +1"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    </thing>
  <thing id="p5CAtfRepShot" name="Infusion: Repeating Shot" description="{i}Item: A simple or martial weapon with the ammunition property (requires attunement){/i}\n\nThis magic weapon grants a +1 bonus to its ranged attack and damage rolls. It also ignores the loading property, if it has it.\n\nThe weapon needs no ammunition, though it can still use it if you choose. When used to make a ranged attack roll without ammunition, it magically produces a piece of ammunition, which vanishes the moment after it hits or misses a target.\n\n\n{i}Note: Use this adjustment if you have received an item with the Repeating Shot infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="component.BaseWep &amp; wProperty.Ammunition &amp;  !Helper.EquipMag &amp; !component.BaseNatWep"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjNoPlus" name="AdjNoPlus" abbrev="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="NoIncr"/>
    <eval phase="Render" priority="999999999" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var sText as string
     sText = field[CustDesc].text

     field[pChosen].chosen.field[CustDesc].text = sText
     field[pChosen].chosen.field[livename].text &= " +1"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    <eval phase="Final" priority="10000" index="3"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)


     perform field[pChosen].chosen.assign[Custom.Infus]
     doneif (field[pChosen].chosen.tagis[wProperty.Loading] = 0)

     perform field[pChosen].chosen.delete[wProperty.Loading]]]></eval>
    <eval phase="PostLevel" priority="11000" index="4"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[Bonus].value += 1
     perform pulltags[DescInfo.cAtf5CRepShot]
     perform field[pChosen].chosen.pushtags[DescInfo.cAtf5CRepShot]
     perform field[pChosen].chosen.assign[Helper.EquipMag]
     perform field[pChosen].chosen.assign[Helper.NeedAttune]]]></eval>
    </thing>
  <thing id="p5CAtfSpRfRn" name="Infusion: Spell-Refueling Ring" description="{b}Item:{/b} A ring (requires attunement){/i}\n\nWhile wearing this ring, the creature can use an action to regain one spent spell slot of 3rd level or lower. Once used, the ring cannot be used again until the next dawn. \n\n\n{i}Note: You can add a simple ring in the Magic tab for use with this feature. Use this adjustment if you have received an item with the Spell-Refueling Ring infusion.{/i}" compset="InPlay">
    <fieldval field="pCandExpr" value="((component.BaseRing &amp; !Helper.EquipMag) | thingid.ir5CSimpRing) &amp; !Custom.Infus"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="AdjNoPlus" name="AdjNoPlus" abbrev="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="Helper" tag="NoIncr"/>
    <bootstrap thing="trk5CAtfSpRfRn">
      <containerreq phase="First" priority="500">fieldval:pMinimum = 1</containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="11000"><![CDATA[~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="First" index="3"><![CDATA[     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)


      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      field[pMinimum].value = 1]]></eval>
    <eval phase="Render" priority="99999" index="2"><![CDATA[~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var sText as string
     sText = "While wearing this ring, the creature can use an action to regain one spent spell slot of 3rd level or lower. Once used, the ring cannot be used again until the next dawn."

     field[pChosen].chosen.field[livename].text &= " of Spell-Refuelling"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text
     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    </thing>
  <thing id="p5CAtfEnArFc" name="Infusion: Enhanced Arcane Focus" description="{i}{b}Item:{/b} A rod, staff, or wand (requires attunement){/i}\n\nHolding this item grants a +1 bonus to spell attack rolls to the holder. The creature also ignores half cover when making their spell attacks.\n\n{i}Note: You can add a simple rod, staff, or wand in the Magic tab for use with this feature. Use this adjustment if you have received an item with the Enhanced Arcane Focus infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="(((component.BaseRod | component.BaseStaff | component.BaseWand | thingid.w5CPincSta | thingid.wQtrstaff | thingid.w5CStaff) &amp; !Helper.EquipMag ) | thingid.id5CSimpRod | thingid.is5CSimpStf | thingid.iw5CSimpWnd) &amp; !Custom.Infus"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <eval phase="Render" priority="999999999999"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text &= " +1 Focus"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
      
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]

      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      foreach pick in hero from Class
        eachpick.field[cSplAttack].value += 1
      nexteach]]></eval>
    </thing>
  <thing id="p5CAtfHlmAwr" name="Infusion: Helm of Awareness" description="{i}{b}Item:{/b} A helmet (requires attunement){/i}\n\nWearing this helmet grants the wearer advantage on their initiative rolls. Additionally, the wearer cannot be surprised unless they&apos;re incapacitated.\n\n\n{i}Note: You can add a simple helm in the Magic tab for use with this feature. Use this adjustment if you have received an item with the Helm of Awareness infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="thingid.io5CSimpHelm &amp; !Custom.Infus"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <eval phase="Render" priority="999999999999"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     var sText as string
     sText = "Wearing this helmet grants the wearer advantage on their initiative rolls. Additionally, the wearer cannot be surprised unless they're incapacitated."

     field[pChosen].chosen.field[livename].text &= " of Awareness"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text
     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
      
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]

      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      #situational[hero.child[Initiative],"Advantage on Initiative Rolls",field[thingname].text]]]></eval>
    </thing>
  <thing id="p5CAtfMndShr" name="Infusion: Mind Sharpener" description="{i}{b}Item:{/b} A suit of armor or robes{/i}\n\nThe infused robes have 4 charges. When the wearer fails a Constitution save to maintain their concentration on a spell, they can take a reaction to spend 1 charge, causing them to succeed to save instead. The robes regain 1d4 spent charges each dawn.\n\n\n{i}Note: Use this adjustment if you have received an item with the Mind Sharpener infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="((component.BaseArmor &amp; !EquipType.Shield &amp; !Helper.EquipMag &amp; !Helper.Natural) | thingid.g5CRobes) &amp;!Custom.Infus"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="trk5CMndShr">
      <containerreq phase="First" priority="500">fieldval:pMinimum = 1</containerreq>
      </bootstrap>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
      
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="First" index="3">doneif (field[pIsOn].value = 0)
      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)

      field[pMinimum].value = 1</eval>
    <eval phase="Render" priority="999999999999"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text = "Mind Sharpener " & field[pChosen].chosen.field[livename].text
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text

     var sText as string
     sText = "The infused robes have 4 charges. When the wearer fails a Constitution save to maintain their concentration on a spell, they can take a reaction to spend 1 charge, causing them to succeed to save instead. The robes regain 1d4 spent charges each dawn."

     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    </thing>
  <thing id="p5CAtfArMg" name="Infusion: Armor of Magical Strength" description="{i}{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up.\n\n\n{i}Note: Use this adjustment if you have received an item with the Armor of Magical Strength infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="(component.BaseArmor &amp; !EquipType.Shield &amp; !Helper.EquipMag &amp; !Helper.Natural)"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="trk5CAtfArMg">
      <containerreq phase="First" priority="500">fieldval:pMinimum = 1</containerreq>
      </bootstrap>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    <eval phase="First" index="3">doneif (field[pIsOn].value = 0)
      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      field[pMinimum].value = 1</eval>
    <eval phase="Render" priority="999999999999">~ If we&apos;re not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing&apos;s been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text &amp;= &quot; of Magical Strength&quot;
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text

     var sText as string
     sText = &quot;The armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up.&quot;

     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    </thing>
  <thing id="p5CAtfArPr" name="Infusion: Arcane Propulsion Armor" description="{i}{b}Item:{/b} A suit of armor (requires attunement){/i}\n\nThe armor grants its wearer these benefits:\n\n• The wearer&apos;s walking speed increases by 5 feet.\n• The armor includes weaponized gauntlets, useable as magic melee weapons when not holding anything. The wearer is proficient with the gauntlets, and each deals 1d8 force damage on a hit, plus they have the thrown property. Their normal range is 20 feet and their long range is 60 feet. When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself. \n• The armor cannot be removed against the wearer&apos;s will.\n• The armor replaces any lost limbs, functioning just like the missing limb(s).\n\n\n{i}Note: Use this adjustment if you have received an item with the Arcane Propulsion Armor infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="component.BaseArmor &amp; !EquipType.Shield &amp; !Helper.EquipMag &amp; !Helper.Natural"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <bootstrap thing="i5CAtfArcGn">
      <containerreq phase="First" priority="100">fieldval:pMinimum = 1</containerreq>
      </bootstrap>
    <bootstrap thing="i5CAtfArcGn">
      <containerreq phase="First" priority="100">fieldval:pMinimum = 1</containerreq>
      </bootstrap>
    <eval phase="First" priority="99" index="3">doneif (field[pIsOn].value = 0)
      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      field[pMinimum].value = 1</eval>
    <eval phase="Render" priority="999999999999">~ If we&apos;re not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing&apos;s been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text = &quot;Arcane Propulsion &quot; &amp; field[pChosen].chosen.field[livename].text
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text

     var sText as string
     sText = &quot;The armor has 6 charges. The wearer can use these charges in these ways:\n\n• When they make a Strength check or Strength save, they can spend 1 charge to add their Intelligence modifier to the roll.\n• If the wearer would be knocked prone, it can take a reaction to spend 1 charge and remain up.&quot;

     var sText as string
     sText = &quot;The armor has grants its wearer these benefits:\n\n• The wearer&apos;s walking speed increases by 5 feet.\n• The armor includes weaponized gauntlets, useable as magic melee weapons when not holding anything. The wearer is proficient with the gauntlets, and each deals 1d8 force damage on a hit, plus they have the thrown property. Their normal range is 20 feet and their long range is 60 feet. When thrown, the gaunlet detaches and flies at the target, then immediately comes back and reattaches itself.\n• The armor cannot be removed against the wearer&apos;s will.\n• The armor replaces any lost limbs, functioning just like the missing limb(s).&quot;

     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text &amp; &quot;{br}&quot; &amp; sText</eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]

      doneif (field[pChosen].chosen.field[gIsEquip].value = 0)
      doneif (field[pChosen].chosen.field[gIsAttuned].value = 0)

      hero.childfound[Speed].field[tSpeed].value += 5]]></eval>
    </thing>
  <thing id="p5CAtfBotWP" name="Infusion: Boots of the Winding Path" description="{i}{b}Item:{/b} A pair of boots (requires attunement){/i}\n\nWhile wearing these boots, a creature can use a bonus action to teleport up to 15 feet to an open space the creature can see. The creature must have occupied that space at some point during the current turn.\n\n\n{i}Note: You can add a simple boots in the Magic tab for use with this feature. Use this adjustment if you have received an item with the Boots of the Winding Path infusion.{/i}" compset="InPlay">
    <comment>titlecase{sName)</comment>
    <fieldval field="pCandExpr" value="(thingid.io5CAtfArcBts | thingid.io5CSimpBoot) &amp; !Custom.Infus"/>
    <usesource source="5eRftLWCP"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <eval phase="Render" priority="999999999999"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)

     field[pChosen].chosen.field[livename].text &= " of the Winding Path"
     field[pChosen].chosen.field[sbName].text = field[pChosen].chosen.field[livename].text

     var sText as string
     sText = "While wearing these boots, a creature can use a bonus action to teleport up to 15 feet to an open space the creature can see. The creature must have occupied that space at some point during the current turn."

     field[pChosen].chosen.field[CustDesc].text = field[pChosen].chosen.field[CustDesc].text & "{br}" & sText]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
     ~ If we're not enabled, get out now
     doneif (field[pIsOn].value = 0)
     ~ If nothing's been chosen, get out now
     doneif (field[pChosen].ischosen = 0)
      
      perform field[pChosen].chosen.assign[Helper.EquipMag]
      perform field[pChosen].chosen.assign[Helper.NeedAttune]
      perform field[pChosen].chosen.assign[Custom.Infus]]]></eval>
    </thing>
  <thing id="c5CAtfRepMIC" name="Replicate Magic Item (Common)" description="Using this infusion, you replicate a particular magic item. You can learn this infusion multiple times; each time you do so, choose a different magic item that you can make with it, picking from any common magic item, excluding potions and scrolls." compset="CustomSpec" summary="Infuse an item with magic to replicate a common magic item.">
    <fieldval field="usrLabelAr" value="Item"/>
    <fieldval field="usrCandid1" value="component.BaseMagicI &amp; !Helper.Helper &amp; !component.BasePotion &amp; !component.BaseScroll &amp; ItemRarity.Common"/>
    <usesource source="5eTCoE"/>
    <usesource source="5eRftLWCP"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="InfKnw" name="Known Infusion"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <eval phase="First" priority="200"><![CDATA[
   var iKnow as number
   var iAct as number

   ~find how many are known
   foreach pick in hero where "thingid.c5CAtfRepMIC"
     iKnow += 1
     nexteach

   ~find how many are active
   foreach pick in hero where "thingid.c5CAtfComMg"
     iAct += 1
     nexteach

    doneif (iAct >= iKnow)

    perform hero.childfound[cfg5CAtfInfus].setfocus

    var Inf as string
    Inf = " | thingid.c5CAtfComMg"

    focus.field[cfgAllow2].text &= Inf
    focus.field[cfgAllow3].text &= Inf]]></eval>
    <eval phase="First" priority="200" index="2"><![CDATA[
    var Chsn as string
    Chsn = field[usrChosen1].chosen.tagids[thingid.?,""]

    foreach pick in hero where "thingid.c5CAtfComMg"
       eachpick.field[usrCandid1].text &= " | " & Chsn
       nexteach]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CAtfComMg" name="Replicate Magic Item - Common Item" description="You infuse a non-magical item with magic, turning it into a common magic item, other than a potion or scroll." compset="CustomSpec" summary="Infuse an item to replicate a common magic item.">
    <fieldval field="abDuration" value="Indefinitely; see description"/>
    <fieldval field="usrCandid1" value="(Helper.Helper &amp; !Helper.Helper)"/>
    <tag group="abCategory" tag="5CArtInf"/>
    <tag group="Custom" tag="Infus"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="abAction" tag="LongRest"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="User" tag="NoAutoName"/>
    <eval phase="Render" priority="100000" index="7"><![CDATA[     ~if we're on Hero, add our Active Text
     if (tagis[portal.cfg3Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Have the ally who's been given this item add that item to their character.{/i}"
     elseif (tagis[portal.cfg2Abil] <> 0) then
       field[CustDesc].text = field[descript].text & "\n\n{i}Note: Add the item to your character like any other magical item, and remove it if this infusion ends.{/i}"
     endif]]></eval>
    <eval phase="Render" priority="999999" index="8">perform delete[Helper.ActivMenu]</eval>
    <evalrule phase="Final" priority="100000" message="You cannot have the same item selected for multiple Replicate Magic Item infusions."><![CDATA[
       validif (tagis[Helper.Disable] <> 0)

       @valid = 1

       var MyThing as string
       var Matches as number
       var ThatThing as string

       Matches = 0
       MyThing = field[usrChosen1].chosen.tagids[thingid.?,""]

       foreach pick in hero where "thingid.c5CAtfComMg"
         ThatThing = eachpick.field[usrChosen1].chosen.tagids[thingid.?,""]
         if (compare(MyThing,ThatThing) = 0) then
             Matches += 1
           endif
         nexteach

       if (Matches > 1) then
         @valid = 0
         endif

       if (@valid = 0) then
         @message = "You cannot have the same item selected for multiple Replicate Magic Item infusions."
       endif]]></evalrule>
    </thing>
  <thing id="pHd5CArtInf" name="Artificer Infusions" compset="InPlay" isshowonly="yes">
    <usesource source="5eEGtWCP"/>
    <usesource source="5eTCoE"/>
    <usesource source="p5eArtV2UACP"/>
    <tag group="OthAdjCat" tag="UserBot7th"/>
    </thing>
  <extthing thing="spResiSphe" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spStonShap" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spStoneski" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spAnimObje" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spArcaHand" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spCreation" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spGreaRest" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spWallSton" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spAcidSpla" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spDancLigh" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFireBolt" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spGuidance" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spLight" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spMageHand" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spMending" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spMessage" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spPoisSpra" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spPrestidi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spRayFros" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spResistan" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spCreaFood" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFaerFire" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFeatFall" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spPuriFood" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spWeb" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spShocGras" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spSparDyi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CThornW" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CGreeFB" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CBoomBl" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CLightL" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CSwordB" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spAlarm" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spCureWoun" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spDeteMagi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spDisgSelf" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spExpeRetr" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFalsLife" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spGrease" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spIdentify" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spJump" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spLongstri" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spSanctuar" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spAid" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spAlteSelf" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spArcaLock" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spBlur" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spContFlam" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spDarkvisi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spEnhaAbil" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spEnlargeR" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spHeatMeta" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spInvisibi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spLessRest" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spLevitate" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spMagiMout" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spMagiWeap" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spProtPois" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spRopeTric" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spSeeInvi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spSpidClim" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spBlink" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spDispMagi" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CElemWe" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFly" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spGlypWard" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spHaste" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spProtEner" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGECrB" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEMaS" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEThu" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEFro" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEAbE" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGECat" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGESna" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGESky" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEPyr" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGECan" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEFlA" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGETiS" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGEElB" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGESkE" group="sClass" tag="cHelpAtf"/>
  <extthing thing="sp5CXGETrR" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spRevivify" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spWateBrea" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spWateWalk" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spArcaEye" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFabricat" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFreeMove" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spSecrChes" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spFaitHoun" group="sClass" tag="cHelpAtf"/>
  <extthing thing="spPrivSanc" group="sClass" tag="cHelpAtf"/>
  </document>
