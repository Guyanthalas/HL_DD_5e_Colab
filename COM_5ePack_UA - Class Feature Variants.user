<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="p5CCFVBrd" name="Class Feature Variants: Bard" description="This adjustment enables the Bard Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVBrd"></bootstrap>
    <exprreq message="Requires Bard Level 1"><![CDATA[#levelcount[Bard] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVBrd" name="Bard Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="cBrd5CMgInsp" name="Magical Inspiration" description="A creature with one of you Bardic Inspiration dice can roll it and add the number rolled to one damage or healing roll of a spell they cast. This expends that die." compset="CustomSpec" summary="Inspiration dice can be used for spells." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVBrd"/>
    <exprreq message="Requires Bard level 1"><![CDATA[#levelcount[Bard] >= 1]]></exprreq>
    </thing>
  <thing id="cAll5CSplVers" name="Spell Versatility" description="When you finish a long rest, you can choose one spell that you learned from this class&apos;s Spellcasting feature. You may replace that spell with another one from your class&apos;s spell list, so long as they are both of the same level." compset="CustomSpec" summary="Replace a spell with another one at the end of a long rest." uniqueness="unique">
    <tag group="Helper" tag="Primary"/>
    <tag group="AllowRCust" tag="cfg5CCFVBrd"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <prereq message="Requires Bard, Sorcerer, Warlock, or level 2 Ranger">
      <validate><![CDATA[var total as number

if (#levelcount[Bard] >= 1) then
total +=1
endif

if (#levelcount[Sorcerer] >= 1) then
total +=1
endif

if (#levelcount[Ranger] >= 2) then
total +=1
endif

if (#levelcount[Warlock] >= 1) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="cAll5CPrfVers" name="Proficiency Versatility" description="Whenever your class grants you the Ability Score Improvement feature, you can also replace one of your skill proficiencies. The new skill proficiency must be from among those offered by your class at 1st level." compset="CustomSpec" summary="Replace one of your class skill proficiencies when you get an Ability Score Improvement.">
    <tag group="AllowRCust" tag="cfg5CCFVBrd" name="Bard Variant Features" abbrev="Bard Variant Features"/>
    <tag group="AllowRCust" tag="cfg5CCFVBbn"/>
    <tag group="AllowRCust" tag="cfg5CCFVClr"/>
    <tag group="AllowRCust" tag="cfg5CCFVDrd"/>
    <tag group="AllowRCust" tag="cfg5CCFVFtr"/>
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="AllowRCust" tag="cfg5CCFVPal"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="AllowRCust" tag="cfg5CCFVRog"/>
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="AllowRCust" tag="cfg5CCFVWlk"/>
    <tag group="AllowRCust" tag="cfg5CCFVWiz"/>
    </thing>
  <thing id="p5CCFVBbn" name="Class Feature Variants: Barbarian" description="This adjustment enables the Barbarian Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <tag group="OthAdjCat" tag="Class"/>
    <bootstrap thing="cfg5CCFVBbn"></bootstrap>
    <exprreq message="Requires Bard Level 1"><![CDATA[#levelcount[Barbarian] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVBbn" name="Barbarian Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="cBbn5CSrvIns" name="Survival Instincts" description="You become proficient in two of these skills: Animal Handling, Medicine, Nature, Perception, or Survival. You can double your proficiency bonus for ability checks made with either skill.\n\n{i}Replaces Danger Sense{/i}" compset="CustomSpec" summary="Additional skill proficiencies." uniqueness="unique">
    <fieldval field="usrCandid1" value="thingid.skAnimHand | thingid.skMedicine | thingid.skNature | thingid.skPercep | thingid.skSurvival"/>
    <fieldval field="usrCandid2" value="thingid.skAnimHand | thingid.skMedicine | thingid.skNature | thingid.skPercep | thingid.skSurvival"/>
    <tag group="AllowRCust" tag="cfg5CCFVBbn"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="User" tag="NoAutoName"/>
    <eval phase="First" priority="500" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[cBbnDanSen].tagreplace[Helper.ShowSpec,Helper.Disable]]]></eval>
    <eval phase="PostLevel" priority="10000"><![CDATA[    doneif (tagis[Helper.ShowSpec] = 0)

     doneif (tagis[Helper.Disable] <> 0)

     if (field[usrChosen1].ischosen <> 0) then
       if (field[usrChosen1].chosen.tagis[component.BaseSkill] <> 0) then
         perform field[usrChosen1].chosen.assign[Helper.ProfDouble]
         endif
       endif

     if (field[usrChosen2].ischosen <> 0) then
       if (field[usrChosen2].chosen.tagis[component.BaseSkill] <> 0) then
         perform field[usrChosen2].chosen.assign[Helper.ProfDouble]
         endif
       endif]]></eval>
    <eval phase="Render" priority="90000" index="3">perform delete[Helper.ActivMenu]</eval>
    <exprreq message="Requires Barbarian level 2"><![CDATA[#levelcount[Barbarian] >= 2]]></exprreq>
    </thing>
  <thing id="cBbn5CInsPnc" name="Instinctive Pounce" description="When a creature ends its turn while within 15 feet of you, you can use a reaction to move up to half your speed towards that creature. This movement of yours does not provoke attacks of opportunity.\n\n{i}Replaces Fast Movement{/i}" compset="CustomSpec" summary="Use your reaction to move towards nearby creatures." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVBbn"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[cBbnFast].tagreplace[Helper.ShowSpec,Helper.Disable]]]></eval>
    <exprreq message="Requires Barbarian level 5"><![CDATA[#levelcount[Barbarian] >= 5]]></exprreq>
    </thing>
  <thing id="cfg5CCFVRgr" name="Ranger Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject4" value="Deft Explorer Benefits"/>
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVRgr" name="Class Feature Variants: Ranger" description="This adjustment enables the Ranger Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVRgr"></bootstrap>
    <exprreq message="Requires Ranger Level 1"><![CDATA[#levelcount[Ranger] >= 1]]></exprreq>
    </thing>
  <thing id="cRgr5CDftCny" name="Canny" description="You gain proficiency in one of the following skills: Animal Handling, Athletics, History, Insight, Investigation, Medicine, Nature, Perception, Stealth, or Survival. Your ability checks with the chosen skill use double your proficiency bonus. \n\nYou also are able to speak, read, and write two languages of your choice." compset="CustomSpec" summary="Additional skill proficiencies and languages." uniqueness="unique">
    <fieldval field="usrCandid1" value="thingid.skAnimHand | thingid.skAthletic | thingid.skHistory | thingid.skInsight | thingid.skInvestig | thingid.skMedicine | thingid.skNature | thingid.skStealth |  thingid.skPercep | thingid.skSurvival"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

     if (field[usrChosen1].ischosen <> 0) then
       if (field[usrChosen1].chosen.tagis[component.BaseSkill] <> 0) then
         perform field[usrChosen1].chosen.assign[Helper.ProfDouble]
         endif
       endif]]></eval>
    <eval phase="PostAttr" priority="1000"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

hero.childfound[cfg5CCFVRgr].field[cfgLaMax1].value += 2]]></eval>
    </thing>
  <thing id="cRgr5CFvrFoe" name="Favored Foe" description="You know the spell {i}hunter&apos;s mark{/i}, using Wisdom as your spellcasting ability for it. You can use it without concentration and without expending a spell slot. You can use it a number of times equal to your Wisdom modifier (minimum once), and regain all uses at the end of a long rest. It does not count against the number of ranger spells you know." compset="CustomSpec" summary="Cast the hunter&apos;s mark spell without a slot or concentration." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeCalc" tag="FinalMin1"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="Helper" tag="Primary"/>
    <bootstrap thing="spHuntMark">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="LongRest"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="PostLevel" priority="500"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

hero.child[cHelpRgr].field[cCustTeTot].arrayvalue[0] = 0
hero.child[cHelpRgr].field[cCustTeTot].arrayvalue[5] = 0
hero.child[cHelpRgr].field[cCustTeTot].arrayvalue[14] = 0]]></eval>
    <eval phase="PostAttr" priority="10001" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

var charges as number

charges = field[trkMax].value

hero.childfound[spHuntMark].field[trkMax].value = charges]]></eval>
    <exprreq message="Requires Ranger level 1"><![CDATA[#levelcount[Ranger] >= 1]]></exprreq>
    </thing>
  <thing id="cRgr5CDftExp" name="Deft Explorer" description="At levels 1, 6, and 10, you can pick a benefit due to your skills as an explorer:\n\n{b}Canny{/b} - You get double proficiency in a particular skill of your choice, as well as learn two languages.\n\n{b}Roving{/b} - You gain 5 movement speed and climbing and swimming speeds.\n\n{b}Tireless{/b} - You can grant yourself temporary hit points. You also reduce exhaustion on a short rest.\n\n{i}Replaces Natural Explorer{/i}" compset="CustomSpec" summary="Gain new benefits as an explorer." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="500"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

hero.child[cHelpRgr].field[cCustQuTot].arrayvalue[0] = 0
hero.child[cHelpRgr].field[cCustQuTot].arrayvalue[5] = 0
hero.child[cHelpRgr].field[cCustQuTot].arrayvalue[9] = 0]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)

if (hero.tagcount[Classes.Ranger] >= 10) then
hero.childfound[cfg5CCFVRgr].field[cfgMax4].value = 3

elseif (hero.tagcount[Classes.Ranger] >= 6) then
hero.childfound[cfg5CCFVRgr].field[cfgMax4].value = 2

elseif (hero.tagcount[Classes.Ranger] >= 1) then
hero.childfound[cfg5CCFVRgr].field[cfgMax4].value = 1


endif]]></eval>
    <exprreq message="Requires Ranger level 1"><![CDATA[#levelcount[Ranger] >= 1]]></exprreq>
    </thing>
  <thing id="cRgr5CDftRvn" name="Roving" description="Your walking speed increases by 5 feet, and you gain swimming and climbing speeds equal to that new total walking speed." compset="CustomSpec" summary="Increase walking speed and be granted swimming and climbing speeds." uniqueness="unique">
    <tag group="Helper" tag="Quaternary"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

hero.child[Speed].field[tSpeed].value += 5]]></eval>
    <eval phase="Final"><![CDATA[      doneif (tagis[Helper.Disable] <> 0)

     var myspeed as number
     myspeed = hero.child[Speed].field[tSpeed].value

     hero.child[xClimb].field[abValue].value = myspeed
     hero.child[xSwim].field[abValue].value = myspeed]]></eval>
    </thing>
  <thing id="cRgr5CDftTrl" name="Tireless" description="You can use an action to grant yourself temporary hit points equaling 1d10 + your Wisdom modifier. You can use this action a number of times equal to your Wisdom modifier (minimum once), and regain all uses of it at the end of a long rest. \n\nYour exhaustion level also decreases by 1 at the end of a short rest." compset="CustomSpec" summary="Give yourself temporary hit points." uniqueness="unique">
    <tag group="Helper" tag="Quaternary"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeCalc" tag="FinalMin1"/>
    <tag group="ChargeAttr" tag="aWIS"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    </thing>
  <thing id="cRgr5CSplFcs" name="Spellcasting Focus" description="You are able to use a druidic focus as the spellcasting focus for your ranger spells. The Player&apos;s Handbook lists some items that can be used as druidic foci in Chapter 5." compset="CustomSpec" summary="Use a druidic focus as a spellcasting focus." uniqueness="unique">
    <tag group="Helper" tag="Primary"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <exprreq message="Requires Ranger level 2"><![CDATA[#levelcount[Ranger] >= 2]]></exprreq>
    </thing>
  <thing id="cRgr5CPrmlAw" name="Primal Awareness" description="You can learn additional spells when you reach certain levels with this class. These spells don&apos;t count against the number of ranger spells you know, and can each be cast once without expending a spell slot. Each spell recharges at the end of a long rest.\n\n3rd          {i}detect magic{/i}, {i}speak with animals{/i}\n5th          {i}beast sense{/i}, {i}locate animals or plants{/i}\n9th          {i}speak with plants{/i}\n13th        {i}locate creature{/i}\n17th        {i}commune with nature{/i}\n\n{i}Replaces Primeval Awareness{/i}" compset="CustomSpec" summary="Gain additional spells at certain levels." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="ClSpecWhen" tag="3"/>
    <tag group="component" tag="BaseClSpec"/>
    <bootstrap thing="spLocaAnim">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 5]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spSpeaPlan">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 9]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spLocaCrea">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 13]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spCommNatu">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 17]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spDeteMagi">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="LongRest"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="spSpeaAnim">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="LongRest"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="sp5CBeastS">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Ranger >= 5]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <eval phase="First" priority="500" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[cRgrPriAwa].tagreplace[Helper.ShowSpec,Helper.Disable]]]></eval>
    <exprreq message="Requires Ranger level 3"><![CDATA[#levelcount[Ranger] >= 3]]></exprreq>
    </thing>
  <thing id="cRgr5CFadAwy" name="Fade Away" description="You can use a bonus action to magically turn yourself and any equipment you&apos;re wearing or carrying invisible. The invisibility lasts until the start of your next turn. Your ability to do this recharges at the end of your next short or long rest.\n\n{i}Replaces Hide in Plain Sight{/i}" compset="CustomSpec" summary="Bonus action to turn invisible." uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Usage" tag="ShortRest"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[cRgrHiPlSi].tagreplace[Helper.ShowSpec,Helper.Disable]]]></eval>
    <exprreq message="Requires Ranger level 10"><![CDATA[#levelcount[Ranger] >= 10]]></exprreq>
    </thing>
  <thing id="cAll5CMrtVrs" name="Martial Versatility" description="When you gain a level in this class, you may replace one fighting style you know with another one that your class can take." compset="CustomSpec" summary="You can replace a fighting style when you level." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="AllowRCust" tag="cfg5CCFVFtr"/>
    <tag group="AllowRCust" tag="cfg5CCFVPal"/>
    <prereq message="Requires Fighter, level 2 Paladin, or level 2 Ranger">
      <validate><![CDATA[var total as number

if (#levelcount[Ranger] >= 2) then
total +=1
endif

if (#levelcount[Fighter] >= 1) then
total +=1
endif

if (#levelcount[Paladin] >= 2) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="cfg5CCFVSor" name="Sorcerer Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <fieldval field="cfgObject2" value="Font of Magic Options"/>
    <tag group="Helper" tag="Allow2Abil"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVSor" name="Class Feature Variants: Sorcerer" description="This adjustment enables the Sorcerer Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVSor"></bootstrap>
    <exprreq message="Requires Sorcerer Level 1"><![CDATA[#levelcount[Sorcerer] >= 1]]></exprreq>
    </thing>
  <thing id="cAll5CCntVrs" name="Cantrip Versatility" description="When you gain a level in this class, you can choose one cantripl that you learned from this class&apos;s Spellcasting feature. You may replace that cantrip with another one from your class&apos;s spell list." compset="CustomSpec" summary="Switch out a cantrip when you gain a level." uniqueness="unique">
    <tag group="Helper" tag="Primary"/>
    <tag group="AllowRCust" tag="cfg5CCFVClr"/>
    <tag group="AllowRCust" tag="cfg5CCFVDrd"/>
    <tag group="AllowRCust" tag="cfg5CCFVWiz"/>
    <prereq message="Requires Cleric, Druid, or Wizard">
      <validate><![CDATA[var total as number

if (#levelcount[Cleric] >= 1) then
total +=1
endif

if (#levelcount[Druid] >= 1) then
total +=1
endif

if (#levelcount[Wizard] >= 1) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="cfg5CCFVClr" name="Cleric Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVClr" name="Class Feature Variants: Cleric" description="This adjustment enables the Cleric Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVClr"></bootstrap>
    <exprreq message="Requires Cleric Level 1"><![CDATA[#levelcount[Cleric] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVDrd" name="Druid Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVDrd" name="Class Feature Variants: Druid" description="This adjustment enables the Druid Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVDrd"></bootstrap>
    <exprreq message="Requires Druid Level 1"><![CDATA[#levelcount[Druid] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVFtr" name="Fighter Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVFtr" name="Class Feature Variants: Fighter" description="This adjustment enables the Fighter Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVFtr"></bootstrap>
    <exprreq message="Requires Fighter Level 1"><![CDATA[#levelcount[Fighter] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVMnk" name="Monk Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <fieldval field="cfgObject2" value="Monk Weapons"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVMnk" name="Class Feature Variants: Monk" description="This adjustment enables the Monk Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVMnk"></bootstrap>
    <exprreq message="Requires Monk Level 1"><![CDATA[#levelcount[Monk] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVPal" name="Paladin Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVPal" name="Class Feature Variants: Paladin" description="This adjustment enables the Paladin Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVPal"></bootstrap>
    <exprreq message="Requires Paladin Level 1"><![CDATA[#levelcount[Paladin] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVWlk" name="Warlock Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVWlk" name="Class Feature Variants: Warlock" description="This adjustment enables the Warlock Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVWlk"></bootstrap>
    <exprreq message="Requires Warlock Level 1"><![CDATA[#levelcount[Warlock] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVWiz" name="Wizard Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVWiz" name="Class Feature Variants: Wizard" description="This adjustment enables the Wizard Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVWiz"></bootstrap>
    <exprreq message="Requires Wizard Level 1"><![CDATA[#levelcount[Wizard] >= 1]]></exprreq>
    </thing>
  <thing id="cfg5CCFVRog" name="Rogue Variant Features" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Variant Features"/>
    <tag group="Helper" tag="Allow1Abil"/>
    </thing>
  <thing id="p5CCFVRog" name="Class Feature Variants: Rogue" description="This adjustment enables the Rogue Variant Features tab." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CCFVRog"></bootstrap>
    <exprreq message="Requires Rogue Level 1"><![CDATA[#levelcount[Rogue] >= 1]]></exprreq>
    </thing>
  <thing id="cAll5CHrDvPw" name="Channel Divinity: Harness Divine Power" description="You can use a bonus action to expend one use of your Channel Divinity feature. You regain one expended 1st-level spell slot." compset="CustomSpec" summary="Use Channel Divinity to regain a 1st-level slot." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVClr"/>
    <tag group="AllowRCust" tag="cfg5CCFVPal"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="FeatureTyp" tag="Special"/>
    <prereq message="Requires level 2 Cleric or level 3 Paladin">
      <validate><![CDATA[var total as number

if (#levelcount[Paladin] >= 3) then
total +=1
endif

if (#levelcount[Cleric] >= 2) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="cFtr5CManVrs" name="Maneuver Versatility" description="If you know any of the fighter Battle Master maneuvers, you can replace one of those maneuvers with a different one at the end of a long rest." compset="CustomSpec" summary="You can replace a maneuver at the end of a long rest." uniqueness="unique"></thing>
  <thing id="cRog5CCngAim" name="Cunning Action: Aim" description="You can use your Cunning Action to aim your next attack with a bonus action, granting yourself advantage on your next attack roll this turn. You can only use this bonus action if you have not moved yet this turn, and your speed is reduced to 0 for the rest of the turn once you have used it." compset="CustomSpec" summary="Cunning Action to grant yourself bonus on next attack roll." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVRog"/>
    <tag group="Helper" tag="Primary"/>
    <exprreq message="Requires Rogue level 2"><![CDATA[#levelcount[Rogue] >= 2]]></exprreq>
    </thing>
  <thing id="cFtr5CBlndFi" name="Blind Fighting" description="Unless a creature is hidden from you, being unable to see it does not impose disadvantage on your attack rolls against it." compset="CustomSpec" summary="You don&apos;t have disadvantage when fighting blind." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpPal" name="Paladin" abbrev="Paladin"/>
    <tag group="SpecSource" tag="cHelpRgr" name="Ranger" abbrev="Ranger"/>
    <tag group="SpecSource" tag="cHelpSRg" name="Ranger (spellless)" abbrev="Ranger (spellless)"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="FtrFigStyl" name="Fighter Fighting Style" abbrev="Fighter Fighting Style"/>
    <tag group="abCategory" tag="PalFigStyl" name="Paladin Fighting Style" abbrev="Paladin Fighting Style"/>
    <tag group="abCategory" tag="RgrFigStyl" name="Ranger Fighting Style" abbrev="Ranger Fighting Style"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cMnk5CKiFuSt" name="Ki-Fueled Strike" description="If you have spent 1 or more ki as part of your action for your turn, you can immediately use a bonus action to make an unarmed strike." compset="CustomSpec" summary="Make an unarmed strike as a bonus action if you&apos;ve spent ki." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abAction" tag="Bonus"/>
    <exprreq message="Requires Monk Level 2"><![CDATA[#levelcount[Monk] >= 2]]></exprreq>
    </thing>
  <thing id="cMnk5CDstEye" name="Distant Eye" description="You can spend 1 ki point to negate the disadvantage imposed on your ranged weapon attacks from attacking at long range. This benefit lasts until the end of the current turn." compset="CustomSpec" summary="Spend a ki point to negate disadvantage from long ranged attacks." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abAction" tag="None"/>
    <exprreq message="Requires Monk Level 2"><![CDATA[#levelcount[Monk] >= 2]]></exprreq>
    </thing>
  <thing id="cMnk5CQkHeal" name="Quickened Healing" description="You can use an action to spend 2 ki points, rolling one Martial Arts die. You regain hit points equal to the number rolled." compset="CustomSpec" summary="Spend 2 ki to regain hit points from a Martial Arts die." uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abAction" tag="Action"/>
    <exprreq message="Requires Monk Level 2"><![CDATA[#levelcount[Monk] >= 2]]></exprreq>
    </thing>
  <thing id="cDrd5CWldCmp" name="Wild Companion" description="You can use an action to expend one use of your Wild Shape feature to cast {i}find familiar{/i} without material components. The familiar is fey, and disappears after a number of hours equal to half your druid level." compset="CustomSpec" summary="Use Wild Shape to summon a familiar" uniqueness="unique">
    <tag group="AllowRCust" tag="cfg5CCFVDrd"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abAction" tag="Action"/>
    <tag group="SpInfo" tag="sp5CFndFam"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostLevel" index="2"><![CDATA[var level as number
var plural as string

level = hero.tagcount[Classes.Druid]

level /= 2

if (level <= 1) then
plural = " hour"
else
plural = " hours"
endif

field[abText].text = level & plural]]></eval>
    <eval phase="First" priority="10000"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[cHelpDrd].assign[CompAvail.Familiar]]]></eval>
    <exprreq message="Requires Druid level 2"><![CDATA[#levelcount[Druid] >= 2]]></exprreq>
    </thing>
  <thing id="p5CCFVManVrs" name="Class Feature Variants: Maneuver Versatility" description="If you know any of the fighter Battle Master maneuvers, you can replace one of those maneuvers with a different one at the end of a long rest." compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="OthAdjCat" tag="Class"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cFtr5CManVrs"></bootstrap>
    <prereq message="Requires at least 1 Battle Master Maneuver">
      <validate><![CDATA[var total as number

if (hero.childlives[cfg5CMarAd] <> 0) then
total +=1
endif

if (hero.childlives[c5CFtrSupD] <> 0) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="abSor5CXSpLst" name="Expanded Sorcerer Spell List" description="This feature adds the {i}Demiplane{/i}, {i}Fire Shield{/i}, {i}Flame Blade{/i}, {i}Flaming Sphere{/i}, {i}Flesh to Stone{/i}, {i}Foresight{/i}, {i}Grease{/i}, {i}Primal Savagery{/i}, {i}Protection from Evil and Good{/i}, and {i}Vampiric Touch{/i} spells to the Sorcerer&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spDemiplan"/>
    <tag group="ClsAllowSp" tag="spFireShie"/>
    <tag group="ClsAllowSp" tag="spFlamBlad"/>
    <tag group="ClsAllowSp" tag="spFlamSphe"/>
    <tag group="ClsAllowSp" tag="spFlesSton"/>
    <tag group="ClsAllowSp" tag="spForesigh"/>
    <tag group="ClsAllowSp" tag="spGrease"/>
    <tag group="ClsAllowSp" tag="sp5CXGEPrS"/>
    <tag group="ClsAllowSp" tag="spProtGoEv"/>
    <tag group="ClsAllowSp" tag="spVampTouc"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Sorcerer"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Sorcerer level 1"><![CDATA[#levelcount[Sorcerer] >= 1]]></exprreq>
    </thing>
  <thing id="abWiz5CXSpLst" name="Expanded Wizard Spell List" description="This feature adds the {i}Augury{/i}, {i}Divination{/i}, {i}Enhance Ability{/i}, and {i}Speak with Dead{/i} spells to the Wizard&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVWiz"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAugury"/>
    <tag group="ClsAllowSp" tag="spDivinati"/>
    <tag group="ClsAllowSp" tag="spEnhaAbil"/>
    <tag group="ClsAllowSp" tag="spSpeaDead"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Wizard"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Wizard level 1"><![CDATA[#levelcount[Wizard] >= 1]]></exprreq>
    </thing>
  <thing id="abWlk5CXSpLst" name="Expanded Warlock Spell List" description="This feature adds the {i}Animate Dead{/i}, {i}Create Homunculus{/i}, {i}Gate{/i}, {i}Horrid Wilting{/i}, {i}Knock{/i}, {i}Life Transference{/i}, {i}Magic Jar{/i}, {i}Mislead{/i}, {i}Modify Memory{/i}, {i}Planar Binding{/i}, {i}Project Image{/i}, {i}Shapechange{/i}, {i}Teleportation Circle{/i}, {i}Thunderwave{/i}, and {i}Weird{/i} spells to the Warlock&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVWlk"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAnimDead"/>
    <tag group="ClsAllowSp" tag="sp5CXGECrH"/>
    <tag group="ClsAllowSp" tag="spGate"/>
    <tag group="ClsAllowSp" tag="sp5CXGEAbH"/>
    <tag group="ClsAllowSp" tag="spKnock"/>
    <tag group="ClsAllowSp" tag="sp5CXGELiT"/>
    <tag group="ClsAllowSp" tag="spMagiJar"/>
    <tag group="ClsAllowSp" tag="spMislead"/>
    <tag group="ClsAllowSp" tag="spModiMemo"/>
    <tag group="ClsAllowSp" tag="spPlanBind"/>
    <tag group="ClsAllowSp" tag="spProjImag"/>
    <tag group="ClsAllowSp" tag="spShapecha"/>
    <tag group="ClsAllowSp" tag="spTeleCirc"/>
    <tag group="ClsAllowSp" tag="spThunderw"/>
    <tag group="ClsAllowSp" tag="spWeird"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Warlock"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Warlock level 1"><![CDATA[#levelcount[Warlock] >= 1]]></exprreq>
    </thing>
  <thing id="abDrd5CXSpLst" name="Expanded Druid Spell List" description="This feature adds the {i}Acid Splash{/i}, {i}Augury{/i}, {i}Aura of Vitality{/i}, {i}Ceremony{/i}, {i}Cone of Cold{/i}, {i}Continual Flame{/i}, {i}Dawn{/i}, {i}Divination{/i}, {i}Elemental Weapon{/i}, {i}Enlarge/Reduce{/i}, {i}Fire Shield{/i}, {i}Flesh to Stone{/i}, {i}Immolation{/i}, {i}Incendiary Cloud{/i}, {i}Mass Polymorph{/i}, {i}Power Word Heal{/i}, {i}Protection from Evil and Good{/i}, {i}Revivify{/i}, {i}Symbol{/i}, {i}Thunder Step{/i}, and {i}Wall of Sand{/i} spells to the Druid&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVDrd"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAcidSpla"/>
    <tag group="ClsAllowSp" tag="spAugury"/>
    <tag group="ClsAllowSp" tag="sp5CAurVit"/>
    <tag group="ClsAllowSp" tag="sp5CXGECer"/>
    <tag group="ClsAllowSp" tag="spConeCold"/>
    <tag group="ClsAllowSp" tag="spContFlam"/>
    <tag group="ClsAllowSp" tag="sp5CXGEDaw"/>
    <tag group="ClsAllowSp" tag="spDivinati"/>
    <tag group="ClsAllowSp" tag="sp5CElemWe"/>
    <tag group="ClsAllowSp" tag="spEnlargeR"/>
    <tag group="ClsAllowSp" tag="spFireShie"/>
    <tag group="ClsAllowSp" tag="spFlesSton"/>
    <tag group="ClsAllowSp" tag="sp5CXGEImm"/>
    <tag group="ClsAllowSp" tag="spInceClou"/>
    <tag group="ClsAllowSp" tag="sp5CXGEMaP"/>
    <tag group="ClsAllowSp" tag="sp5CPwrWH"/>
    <tag group="ClsAllowSp" tag="spProtGoEv"/>
    <tag group="ClsAllowSp" tag="spRevivify"/>
    <tag group="ClsAllowSp" tag="spSymbol"/>
    <tag group="ClsAllowSp" tag="sp5CXGEThS"/>
    <tag group="ClsAllowSp" tag="sp5CXGEWaS"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Druid"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Druid level 1"><![CDATA[#levelcount[Druid] >= 1]]></exprreq>
    </thing>
  <thing id="abClr5CXSpLst" name="Expanded Cleric Spell List" description="This feature adds the {i}Aura of Life{/i}, {i}Aura of Purity{/i}, {i}Aura of Vitality{/i}, {i}Branding Smite{/i}, {i}Cause Fear{/i}, {i}Power Word Heal{/i}, {i}Skill Empowerment{/i}, {i}Wall of Light{/i}, and {i}Wrathful Smite{/i} spells to the Cleric&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVClr"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="sp5CAurLif"/>
    <tag group="ClsAllowSp" tag="sp5CAurPur"/>
    <tag group="ClsAllowSp" tag="sp5CAurVit"/>
    <tag group="ClsAllowSp" tag="sp5CBrandS"/>
    <tag group="ClsAllowSp" tag="sp5CXGECaF"/>
    <tag group="ClsAllowSp" tag="sp5CPwrWH"/>
    <tag group="ClsAllowSp" tag="sp5CXGESkE"/>
    <tag group="ClsAllowSp" tag="sp5CXGEWaL"/>
    <tag group="ClsAllowSp" tag="sp5CWrathS"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Cleric"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Cleric level 1"><![CDATA[#levelcount[Cleric] >= 1]]></exprreq>
    </thing>
  <thing id="abBrd5CXSpLst" name="Expanded Bard Spell List" description="This feature adds the {i}Aid{/i}, {i}Antipathy/Sympathy{/i}, {i}Cause Fear{/i}, {i}Color Spray{/i}, {i}Command{/i}, {i}Contact Other Plane{/i}, {i}Enlarge/Reduce{/i}, {i}Heroes&apos; Feast{/i}, {i}Mass Healing Word{/i}, {i}Maze{/i}, {i}Mental Prison{/i}, {i}Mind Spike{/i}, {i}Mirror Image{/i}, {i}Phantasmal Killer{/i}, {i}Power Word Pain{/i}, {i}Prismatic Spray{/i}, {i}Prismatic Wall{/i}, {i}Scatter{/i}, {i}Slow{/i}, {i}Telepathic Bond{/i}, {i}Tiny Servant{/i}, and {i}Transformation{/i} spells to the Bard&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVBrd"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAid"/>
    <tag group="ClsAllowSp" tag="spAntipath"/>
    <tag group="ClsAllowSp" tag="sp5CXGECaF"/>
    <tag group="ClsAllowSp" tag="spColoSpra"/>
    <tag group="ClsAllowSp" tag="spCommand"/>
    <tag group="ClsAllowSp" tag="spContOthe"/>
    <tag group="ClsAllowSp" tag="spEnlargeR"/>
    <tag group="ClsAllowSp" tag="spHeroFeas"/>
    <tag group="ClsAllowSp" tag="spMsHealWd"/>
    <tag group="ClsAllowSp" tag="spMaze"/>
    <tag group="ClsAllowSp" tag="sp5CXGEMeP"/>
    <tag group="ClsAllowSp" tag="sp5CXGEMiS"/>
    <tag group="ClsAllowSp" tag="spMirrImag"/>
    <tag group="ClsAllowSp" tag="spPhanKill"/>
    <tag group="ClsAllowSp" tag="sp5CXGEPoW"/>
    <tag group="ClsAllowSp" tag="spPrisSpra"/>
    <tag group="ClsAllowSp" tag="spPrisWall"/>
    <tag group="ClsAllowSp" tag="sp5CXGESca"/>
    <tag group="ClsAllowSp" tag="spSlow"/>
    <tag group="ClsAllowSp" tag="spTeleBond"/>
    <tag group="ClsAllowSp" tag="sp5CXGETiS"/>
    <tag group="ClsAllowSp" tag="sp5CXGETeT"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Bard"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Bard level 1"><![CDATA[#levelcount[Bard] >= 1]]></exprreq>
    </thing>
  <thing id="abPal5CXSpLst" name="Expanded Paladin Spell List" description="This feature adds the {i}Dawn{/i}, {i}Flame Strike{/i}, {i}Gentle Repose{/i}, {i}Life Transference{/i}, {i}Prayer of Healing{/i}, {i}Spirit Guardians{/i}, and {i}Warding Bond{/i} spells to the Paladin&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVPal"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="sp5CXGEDaw"/>
    <tag group="ClsAllowSp" tag="spFlamStri"/>
    <tag group="ClsAllowSp" tag="spGentRepo"/>
    <tag group="ClsAllowSp" tag="sp5CXGELiT"/>
    <tag group="ClsAllowSp" tag="spPrayHeal"/>
    <tag group="ClsAllowSp" tag="spSpirGuar"/>
    <tag group="ClsAllowSp" tag="spWardBond"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Paladin"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Paladin level 2"><![CDATA[#levelcount[Paladin] >= 2]]></exprreq>
    </thing>
  <thing id="abRgr5CXSpLst" name="Expanded Ranger Spell List" description="This feature adds the {i}Aid{/i}, {i}Awaken{/i}, {i}Blinding Smite{/i}, {i}Death Ward{/i}, {i}Dominate Beast{/i}, {i}Enhance Ability{/i}, {i}Entangle{/i}, {i}Greater Restoration{/i}, {i}Gust of Wind{/i}, {i}Magic Weapon{/i}, {i}Meld into Stone{/i}, {i}Revivify{/i}, {i}Searing Smite{/i}, {i}Tongues{/i}, and {i}Warding Bond{/i} spells to the Ranger&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVRgr"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAid"/>
    <tag group="ClsAllowSp" tag="spAwaken"/>
    <tag group="ClsAllowSp" tag="sp5CBlindS"/>
    <tag group="ClsAllowSp" tag="spDeatWard"/>
    <tag group="ClsAllowSp" tag="spDomiBeas"/>
    <tag group="ClsAllowSp" tag="spEnhaAbil"/>
    <tag group="ClsAllowSp" tag="spEntangle"/>
    <tag group="ClsAllowSp" tag="spGreaRest"/>
    <tag group="ClsAllowSp" tag="spGustWind"/>
    <tag group="ClsAllowSp" tag="spMagiWeap"/>
    <tag group="ClsAllowSp" tag="spMeldSton"/>
    <tag group="ClsAllowSp" tag="spRevivify"/>
    <tag group="ClsAllowSp" tag="sp5CSearSm"/>
    <tag group="ClsAllowSp" tag="spTongues"/>
    <tag group="ClsAllowSp" tag="spWardBond"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Ranger"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <exprreq message="Requires Ranger level 2"><![CDATA[#levelcount[Ranger] >= 2]]></exprreq>
    </thing>
  <thing id="abFtr5CXSpLst" name="Expanded Eldritch Knight Spell List" description="This feature adds the {i}Augury{/i}, {i}Divination{/i}, {i}Enhance Ability{/i}, and {i}Speak with Dead{/i} spells to the Wizard/Eldritch Knight&apos;s spell list." compset="Ability">
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAugury"/>
    <tag group="ClsAllowSp" tag="spDivinati"/>
    <tag group="ClsAllowSp" tag="spEnhaAbil"/>
    <tag group="ClsAllowSp" tag="spSpeaDead"/>
    <tag group="AllowRCust" tag="cfg5CCFVFtr"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Fighter"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFtrEldK"/>
    </thing>
  <thing id="cMnk5CWeap" name="Monk Weapon" compset="CustomSpec">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[doneif (tagis[Helper.Disable] = 1)
doneif (field[usrChosen1].ischosen = 0)
      
~ Now mark the weapon as martial arts so it grabs the proper
~ damage and attribute tags
var searchexpr as string
searchexpr = "(" & field[usrChosen1].chosen.tagids[IsWeapon.?,"|"]  & ")"

~ push the martial arts tag to any weapons chosen
foreach pick in hero from BaseWep where searchexpr
  perform eachpick.assign[Special.MartArts]
nexteach]]></eval>
    <eval phase="Final" priority="10000" index="2"><![CDATA[var wep as string

wep = hero.tagids[WepProf.?," | "]

wep = replace(wep,"WepProf","thingid",0)

field[usrCandid1].text = "component.BaseWep & !component.BaseMagicI & (wProfReq.Martial|wProfReq.Simple) & !Helper.Helper  & !thingid.w5CSpellAt & !wProperty.Heavy & !wProperty.Special & !wProperty.TwoHanded & (" & wep & " | wProfReq.Simple)"]]></eval>
    </thing>
  <thing id="cMnk5CMnkWp" name="Monk Weapons" description="Rather than using the definition of monk weapons in Martial Arts, you can instead pick weapons that follow these criteria:\n\n• It must be a simple or martial weapon\n• You must be proficient with it\n• It cannot be heavy, special, or two-handed\n\nYou can choose a number of weapons equaling 5 + your Wisdom modifier (with a minimum of 5 weapons)." compset="CustomSpec" summary="Pick what weapons count as your monk weapons." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="AllowRCust" tag="cfg5CCFVMnk"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

var weapons as number

weapons = hero.child[aWIS].field[aFinalVal].value
weapons -= 10
weapons /= 2
weapons = round(weapons,0,-1)
weapons += 5
weapons = maximum (5,weapons)

hero.childfound[cfg5CCFVMnk].field[cfgMax2].value = weapons]]></eval>
    <eval phase="PostLevel" priority="4999" index="2"><![CDATA[

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)


perform hero.childfound[cMnkMarArt].assign[Helper.Disable]]]></eval>
    <eval phase="PostLevel" priority="9501" index="4"><![CDATA[perform hero.childfound[cMnkMarArt].delete[Helper.Disable]


      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

      ~ Now foreach through and carry out calculations to replace the wMain tag if the average
      ~ damage of our current tag is higher than the current one.
      var curdicenum as number
      var curdicesiz as number
      var curwepavg as number
      var dotpos as number
      var tagstring as string

      var searchexpr as string
      searchexpr = "IsWeapon.wUnarmed | Special.MartArts"

      foreach pick in hero from BaseWep where searchexpr

        ~We have the option of using Dex instead of Str for attack and damage
        perform eachpick.assign[MelAttOpt.aDEX]
        perform eachpick.assign[DamageOpt.aDEX]

        ~See if our replacement damage would offer a better average damage than what the weapon can currently deal

        curdicenum = eachpick.field[wDieCount].value
        curdicesiz = eachpick.field[wDieSize].value

        curwepavg = (curdicesiz + 1)/2
        curwepavg *= curdicenum

        if (field[abValue].value > curwepavg) then
          eachpick.field[wDieCount].value = field[wDieCount].value
          eachpick.field[wDieSize].value = field[wDieSize].value
          endif
        nexteach]]></eval>
    <eval phase="PostLevel" priority="5000" index="3"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

      ~first we have to establish our benchmark, based on our level
      ~all comparisons are made assuming that the wielder is medium, because
      ~that is what wMain tags assume. Damage dice are then adjusted up or down
      ~appropriately based on size.
      if (hero.tagcount[Classes.Monk] >= 17) then
        ~ Medium folks get 1d10 at this level. Avg = 5.5
        field[wDieCount].value = 1
        field[wDieSize].value = 10
        field[abValue].value += 5.5
      elseif (hero.tagcount[Classes.Monk] >= 11) then
        ~ Medium folks get 1d8 at this level. Avg = 4.5
        field[wDieCount].value = 1
        field[wDieSize].value = 8
        field[abValue].value += 4.5
      elseif (hero.tagcount[Classes.Monk] >= 5) then
        ~ Medium folks get 1d6 at this level. Avg = 3.5
        field[wDieCount].value = 1
        field[wDieSize].value = 6
        field[abValue].value += 3.5
      else
        ~ Medium folks get 1d4 at this level. Avg = 2.5
        field[wDieCount].value = 1
        field[wDieSize].value = 4
        field[abValue].value += 2.5
        endif

      var v_text as string

      call wMainText

      field[abText].text = v_text]]></eval>
    </thing>
  <thing id="cFtr5CSupTch" name="Superior Technique" description="You learn a maneuver of your choice from the options available to the Fighter&apos;s Battle Master archetype. If the maneuver requires your target to make a saving throw, that save&apos;s DC equals 8 + your proficiency bonus + your choice of either your Strength or Dexterity modifier. You gain 1d6 as a superiority die, which is added to any such dice you have from another source. This die is used to fuel the learned maneuver, and is expended when you use it. You regain it when you finish a short or long rest." compset="CustomSpec" summary="Learn a Battle Master maneuver." uniqueness="unique">
    <fieldval field="abValue2" value="6"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="usrCandid1" value="component.BaseAttr &amp; (IsAttr.aSTR | IsAttr.aDEX)"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="FtrFigStyl" name="Fighter Fighting Style" abbrev="Fighter Fighting Style"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="LvNamePar" tag="SignAppVal" name="Sign appended value" abbrev="Sign appended value"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="LvNamePar" tag="AppValue3" name="Append &quot;field[abValue3].value&quot;" abbrev="Append &quot;field[abValue3].value&quot;"/>
    <tag group="LvNamePar" tag="DieCntVal" name="&quot;field[abValue].value&quot; dY" abbrev="&quot;field[abValue].value&quot; dY"/>
    <tag group="LvNamePar" tag="DieSizVal2" name="Xd &quot;field[abValue2].value&quot;" abbrev="Xd &quot;field[abValue2].value&quot;"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="cfg5CMarAd"></bootstrap>
    <eval phase="PostLevel" priority="15000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ If we already have the Superiority class ability increase
      ~ the number of dice by 1.
      if (hero.childlives[c5CFtrSupD] + hero.childfound[c5CFtrSupD].tagis[Helper.ShowSpec] = 2) then        
        #trkmax[c5CFtrSupD] += 1

      ~..Show ourself on the In-Play tab
      else
         perform assign[User.Tracker]
      endif

hero.childfound[cfg5CMarAd].field[cfgMax3].value += 1]]></eval>
    <eval phase="PostLevel" priority="9000" index="2"><![CDATA[       if (field[usrChosen1].ischosen <> 0) then
         perform field[usrChosen1].chosen.pulltags[StandardDC.?]
         endif]]></eval>
    </thing>
  <thing id="cRgr5CDrdWr" name="Druidic Warrior" description="You can choose two cantrips to learn from the druid spell list. They are considered druid spells for you, and you use Wisdom as your spellcasting ability for them. You can replace one of them with another from the druid spell list each time you level in this class." compset="CustomSpec" summary="Learn 2 druid cantrips." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="SpecSource" tag="cHelpRgr"/>
    <tag group="SpecSource" tag="cHelpSRg"/>
    <tag group="abCategory" tag="RgrFigStyl"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

      perform linkage[table].assign[Helper.HasSplExp]

      linkage[table].field[cSpExAllw].value = 2
      linkage[table].field[cSpExLst].text = "component.BaseSpell & sLevel.0 & sClass.cHelpDrd"
      linkage[table].field[cSpExLstNm].text = "Druid Cantrips"

      foreach pick in hero from BaseSpell where "portal.ClsExSpLis & SplListExp.cHelpRgr"
        perform eachpick.delete[Helper.OldCasting]
        perform eachpick.assign[Helper.Cantrip]

        perform eachpick.assign[Helper.Free]
        eachpick.field[sNameMod].text = splice(eachpick.field[sNameMod].text,"Druidic Warrior",", ")
        nexteach]]></eval>
    </thing>
  <thing id="cPal5CBlsdWr" name="Blessed Warrior" description="You can choose two cantrips to learn from the cleric spell list. They are considered paladin spells for you, and you use Charisma as your spellcasting ability for them. You can replace one of them with another from the cleric spell list each time you level in this class." compset="CustomSpec" summary="Learn 2 cleric cantrips." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="SpecSource" tag="cHelpPal"/>
    <tag group="abCategory" tag="PalFigStyl"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

      perform linkage[table].assign[Helper.HasSplExp]

      linkage[table].field[cSpExAllw].value = 2
      linkage[table].field[cSpExLst].text = "component.BaseSpell & sLevel.0 & sClass.cHelpClr"
      linkage[table].field[cSpExLstNm].text = "Cleric Cantrips"

      foreach pick in hero from BaseSpell where "portal.ClsExSpLis & SplListExp.cHelpPal"
        perform eachpick.delete[Helper.OldCasting]
        perform eachpick.assign[Helper.Cantrip]

        perform eachpick.assign[Helper.Free]
        eachpick.field[sNameMod].text = splice(eachpick.field[sNameMod].text,"Blessed Warrior",", ")
        nexteach]]></eval>
    </thing>
  <thing id="cFtr5CRstStr" name="Restraining Strike" description="Immediately after hitting a creature with a melee weapon attack on your turn, you can spend one superiority die to grapple that target with a bonus action. Add the die to the Strength (Athletics) check you make for the grapple. While grappled in this way, the target is also restrained." compset="CustomSpec" summary="Spend a superiority die to add a grapple to an attack." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CBaiSwi" name="Bait and Switch" description="While within 5 feet of an ally on your turn, you can spend one superiority die and 5 feet of movement to switch places with them, without provoking opportunity attacks. Roll the superiority die and add the result to the ally&apos;s AC until the beginning of your next turn." compset="CustomSpec" summary="Swap places with an ally and add a superiority die to their AC." uniqueness="unique">
    <fieldval field="abRange" value="5"/>
    <fieldval field="abDuration" value="1"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CBrace" name="Brace" description="When an enemy visible to you moves within 5 feet of you, you can use a reaction to spend one superiority die. Make one weapon attack against the creature. If it hits, add the superiority die to the damage." compset="CustomSpec" summary="Spend a superiority die to make a reaction attack against an advancing enemy." uniqueness="unique">
    <fieldval field="abRange" value="5"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CAmbush" name="Ambush" description="You can expend one superiority die to add it to the roll of one of your Dexterity (Stealth) checks or initiative rolls." compset="CustomSpec" summary="Add superiorty die to initiative." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CSlvTng" name="Silver Tongue" description="You can spend one superiority die and add it to a Charisma (Deception or Persuasion) ability check." compset="CustomSpec" summary="Add a superiority die to a Deception or Persuasion check." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CSnipe" name="Snipe" description="You can use a bonus action to spend one superiority die and make a ranged weapon attack. As part of making the attack, you can draw a thrown weapon. If the attack hits, add the superiority die to the attack&apos;s damage." compset="CustomSpec" summary="Spend a superiority die to add it to a ranged weapon attack." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CStdEye" name="Studious Eye" description="You can spend one superiority die and add it to a Wisdom (Insight) or Intelligence (Investigation) ability check." compset="CustomSpec" summary="Add a superiority die to an Insight or Investigation check." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="FtrBMasMan" name="Fighter Battle Master Maneuver" abbrev="Fighter Battle Master Maneuver"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cSor5CEleSpl" name="Elemental Spell" description="When you cast a spell that deals acid, cold, fire, lightning, or thunder damage, you can spend 1 sorcery point to change the damage type to a different one from that list." compset="CustomSpec" summary="Change one elemental damage type to another with a sorcery point." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpSor" name="Sorcerer" abbrev="Sorcerer"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="SorMetamag" name="Sorcerer Metamagic Ability" abbrev="Sorcerer Metamagic Ability"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cSor5CSkgSpl" name="Seeking Spell" description="When you cast a spell that either requires you to make a spell attack roll or that requires a Dexterity save from the target, you can spend 1 sorcery point to ignore any half- and three-quarters cover the spell&apos;s target(s) might have." compset="CustomSpec" summary="Spend a sorcery point to ignore cover against your spell." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpSor" name="Sorcerer" abbrev="Sorcerer"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="SorMetamag" name="Sorcerer Metamagic Ability" abbrev="Sorcerer Metamagic Ability"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cFtr5CUnrSpl" name="Unerring Spell" description="If you miss with a spell&apos;s attack roll, you can spend 2 sorcery points to reroll it. You must use the second roll.\n\nYou can use Unerring Spell even if you already used another Metamagic option when you cast the spell." compset="CustomSpec" summary="Spend 2 sorcery points to reroll spell attack" uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpSor" name="Sorcerer" abbrev="Sorcerer"/>
    <tag group="abAction" tag="Free" name="Free" abbrev="Free"/>
    <tag group="abCategory" tag="SorMetamag" name="Sorcerer Metamagic Ability" abbrev="Sorcerer Metamagic Ability"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    </thing>
  <thing id="cSor5CEmpRes" name="Empowering Reserves" description="You can spend 2 sorcery points to give yourself advantage on an ability check you make during your turn." compset="CustomSpec" summary="Spend 2 sorcery points to gain advantage on a check." uniqueness="unique">
    <tag group="Helper" tag="Secondary"/>
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="cSor5CImbTch" name="Imbuing Touch" description="You can use an action to spend 2 sorcery points and touch a non-magical weapon. For 1 minute, it becomes magic and is considered as such for the purpose of overcoming immunity and resistance to nonmagical attacks." compset="CustomSpec" summary="Spend 2 sorcery points to make a mundane weapon magical." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.BaseWep &amp; !component.BaseMagicI &amp; !IsWeapon.wUnarmed"/>
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="abAction" tag="Action"/>
    </thing>
  <thing id="cFtr5CSorFor" name="Sorcerous Fortitude" description="You can use an action to spend any number of sorcery points. For every point expended, roll a d4. You are granted temporary hit points equal to the total rolled number." compset="CustomSpec" summary="Spend sorcery points to gain temporary hit points." uniqueness="unique">
    <tag group="Helper" tag="Secondary"/>
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="abAction" tag="Action"/>
    </thing>
  <thing id="cFtr5CIntrcp" name="Interception" description="When a creature visible to you hits a target within 5 feet of you with an attack, you can take a reaction to reduce the damage by 1d10 + your proficiency bonus (down to a minimum of 0 damage). You can only use this reaction if you&apos;re wielding a shield, a simple weapon, or a martial weapon." compset="CustomSpec" summary="Use reaction to reduce damage done to adjacent creature." uniqueness="unique">
    <fieldval field="abRange" value="5"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="FtrFigStyl" name="Fighter Fighting Style" abbrev="Fighter Fighting Style"/>
    <tag group="abCategory" tag="PalFigStyl" name="Paladin Fighting Style" abbrev="Paladin Fighting Style"/>
    <tag group="SpecSource" tag="cHelpRgr"/>
    <tag group="SpecSource" tag="cHelpSRg"/>
    <tag group="abCategory" tag="RgrFigStyl"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="SpecSource" tag="cHelpPal" name="Paladin" abbrev="Paladin"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="SpecSource" tag="cHelpRgC"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="PostAttr"><![CDATA[var prof as number

prof = hero.childfound[ProfBonus].field[tProfBonus].value

field[abText].text = "1d10+" & prof]]></eval>
    </thing>
  <thing id="cFtr5CThWpFi" name="Thrown Weapon Fighting" description="You are able to draw a weapon that has the thrown property as part of an attack you&apos;re making with that weapon.\n\nAdditionally, when you hit with a ranged attack using a thrown weapon, you get a +1 bonus to the damage rolled." compset="CustomSpec" summary="+1 Bonus to thrown weapon damage and can easily draw them." uniqueness="unique">
    <fieldval field="abValue" value="1"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpRgr" name="Ranger" abbrev="Ranger"/>
    <tag group="SpecSource" tag="cHelpSRg" name="Ranger (spellless)" abbrev="Ranger (spellless)"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="FtrFigStyl" name="Fighter Fighting Style" abbrev="Fighter Fighting Style"/>
    <tag group="abCategory" tag="RgrFigStyl" name="Ranger Fighting Style" abbrev="Ranger Fighting Style"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="SpecSource" tag="cHelpPal"/>
    <tag group="abCategory" tag="PalFigStyl"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="SpecSource" tag="cHelpRgC" name="Ranger (Sept 2016)" abbrev="Ranger (Sept 2016)"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      doneif (tagis[Helper.Disable] <> 0)

      foreach pick in hero from BaseWep where "wCategory.RangeThrow"
        eachpick.field[dmrBonus].value += field[abValue].value
        nexteach]]></eval>
    </thing>
  <thing id="cFtr5CUnaFig" name="Unarmed Fighting" description="Your unarmed strikes can deal bludgeoning damage equal to 1d6 (1d8 if attacking with two hands) + your Strength modifier. \n\nAlso, when successfully start to grapple a creature, you can deal 1d4 bludgeoning damage to it. Until the grapple ends, you can deal the damage again when you hit that creature with a melee attack." compset="CustomSpec" summary="Unarmed strikes and grapples deal more damage" uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpRgC"/>
    <tag group="SpecSource" tag="cHelpSRg"/>
    <tag group="SpecSource" tag="cHelpFtr"/>
    <tag group="SpecSource" tag="cHelpPal"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="abCategory" tag="FtrFigStyl"/>
    <tag group="abCategory" tag="PalFigStyl"/>
    <tag group="abCategory" tag="RgrFigStyl"/>
    <tag group="abAction" tag="None"/>
    <tag group="abRange" tag="Personal"/>
    <tag group="SpecSource" tag="cHelpRgr"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="PostLevel" priority="15000"><![CDATA[
      ~ If we're disabled, do nothing  
      doneif (tagis[Helper.Disable] <> 0)

field[wDieCount].value = 1
field[wDieSize].value = 6

var dsz as number
dsz = 3.5

      ~ If we don't have a weapon in each hand, set die size to 8 


if (hero.tagis[Hero.EquipMain] + hero.tagis[Hero.EquipOff] = 0) then
dsz += 1
field[wDieSize].value += 2
endif

      var curdicenum as number
      var curdicesiz as number
      var curwepavg as number


      foreach pick in hero from BaseWep where "IsWeapon.wUnarmed"

    ~See if our replacement damage would offer a better average damage than what the weapon can currently deal

        curdicenum = eachpick.field[wDieCount].value
        curdicesiz = eachpick.field[wDieSize].value

        curwepavg = (curdicesiz + 1)/2
        curwepavg *= curdicenum

        if (dsz > curwepavg) then

          eachpick.field[wDieCount].value = field[wDieCount].value
          eachpick.field[wDieSize].value = field[wDieSize].value
          endif
        nexteach]]></eval>
    </thing>
  <thing id="cWlk5CPacTal" name="Pact of the Talisman" description="Your patron grants you a special talisman, an amulet to aid you or whoever&apos;s wearing it. The wearer can add 1d4 to any ability checks they make for skills they&apos;re not proficient in.\n\nYou can perform a 1-hour ceremony to replace a lost talisman during a short or long rest, destroying the previous amulet in the process. When you die, the talisman dissolves to ash." compset="CustomSpec" summary="Patron grants you a talisman that grants 1d4 on non-proficient ability checks." uniqueness="unique">
    <fieldval field="actName" value="Wearing Talisman"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="WlkPacBoon" name="Warlock Pact Boon" abbrev="Warlock Pact Boon"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final"><![CDATA[
     ~ If we're disabled, do nothing & 
     doneif (tagis[Helper.Disable] <> 0 )

      doneif (field[abilActive].value = 0)    

     var sText as string
     sText = "+1d4"

     foreach pick in hero from BaseSkill where "!Helper.ProfDouble & !Helper.Proficient"

         #situational[eachpick,sText,field[thingname].text]
         nexteach]]></eval>
    </thing>
  <thing id="cWlk5CBndTal" name="Bond of the Talisman" description="If someone else is wearing your talisman and is on the same plane of existence as you, you can use an action to teleport to the open space closest to them. The wearer can likewise use an action to teleport to you." compset="CustomSpec" summary="You and the wearer of your talisman can teleport to each other." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <exprreq message="Warlock level 12 required"><![CDATA[#levelcount[Warlock] >= 12]]></exprreq>
    <exprreq message="Pact of the Talisman required"><![CDATA[#hasability[cWlk5CPacTal] <> 0]]></exprreq>
    </thing>
  <thing id="cWlk5CChMsFr" name="Chain Master&apos;s Fury" description="You can use a bonus action to command your familiar to make a single attack." compset="CustomSpec" summary="Bonus action to have familiar attack." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <exprreq message="Warlock level 9 required"><![CDATA[#levelcount[Warlock] >= 9]]></exprreq>
    <exprreq message="Pact of the Chain required"><![CDATA[#hasability[cWlkPacCha] <> 0]]></exprreq>
    </thing>
  <thing id="cWlk5CEldArm" name="Eldritch Armor" description="You can use an action to touch a suit of armor that isn&apos;t being worn or carried by anyone. If you&apos;re not wearing armor already, you instantly don it and are proficient with it until you remove it." compset="CustomSpec" summary="Instantly don and become proficient in a suit of armor." uniqueness="unique">
    <fieldval field="usrCandid1" value="EquipType.Armor &amp; !Helper.Natural"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

      perform field[usrChosen1].chosen.assign[Helper.Proficient]]]></eval>
    <exprreq message="Pact of the Blade required"><![CDATA[#hasability[cWlkPacBla] <> 0]]></exprreq>
    </thing>
  <thing id="cWlk5CFrScrb" name="Far Scribe" description="An additional page appears in your Book of Shadows. You can allow a creature to use an action to write its name on the page. The number of names that can be written there is equal to your Charisma modifier (minimum 1 name). You can use an action to touch a name, magically erasing it.\n\nYou can cast {i}spending{/i}, targeting a creature whose name is on the page and without using a spell slot or material components. To cast it, you write the message on the page. The target hears what you&apos;ve written in their mind. If they reply, the reply appears on the page instead of in your own mind. After one minute, the messages disappear from the page." compset="CustomSpec" summary="Cast the sending spell to people whose names are in your Book of Shadows." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Action"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="spSending">
      <autotag group="Helper" tag="SpellLike"/>
      </bootstrap>
    <eval phase="Final"><![CDATA[var num as number

num = hero.childfound[aCON].field[aBonus].value

num = maximum(1,num)

field[abText].text = num & " names"]]></eval>
    <exprreq message="Pact of the Tome required"><![CDATA[#hasability[cWlkPacTom] <> 0]]></exprreq>
    <exprreq message="Warlock level 5 required"><![CDATA[#levelcount[Warlock] >= 5]]></exprreq>
    </thing>
  <thing id="cWlk5CEldMnd" name="Eldritch Mind" description="The Constitution saving throws you make to maintain concentration on a spell are made with advantage." compset="CustomSpec" summary="Make spell concentration saves with advantage." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final"><![CDATA[

#situational[hero.child[svCON], "Advantage to maintain concentration on spells", field[thingname].text]]]></eval>
    <exprreq message="Pact of the Tome required"><![CDATA[#hasability[cWlkPacTom] <> 0]]></exprreq>
    </thing>
  <thing id="cWlk5CGftPrt" name="Gift of the Protectors" description="An additional page appears in your Book of Shadows. You can allow a creature to use an action to write its name on the page. The number of names that can be written there is equal to your Charisma modifier (minimum 1 name). You can use an action to touch a name, magically erasing it.\n\nWhen any creature whose name is on the page is reduced to 0 hit points without being outright killed, it instead magically drops to 1 hit point. Once that effect has occurred for any of the named creatures, it cannot happen again until you complete a long rest." compset="CustomSpec" summary="Prevent the death of people whose names are in your Book of Shadows." uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final"><![CDATA[var num as number

num = hero.childfound[aCON].field[aBonus].value

num = maximum(1,num)

field[abText].text = num & " names"]]></eval>
    <exprreq message="Pact of the Tome required"><![CDATA[#hasability[cWlkPacTom] <> 0]]></exprreq>
    <exprreq message="Warlock level 9 required"><![CDATA[#levelcount[Warlock] >= 9]]></exprreq>
    </thing>
  <thing id="cWlk5CPrtTal" name="Protection of the Talisman" description="The wearer of your talisman can add 1d4 to the roll of a saving throw in which they lack proficiency." compset="CustomSpec" summary="The talisman grants 1d4 to any of your non-proficient saving throws." uniqueness="unique">
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final" priority="101"><![CDATA[
     ~ If we're disabled, do nothing & 
     doneif (tagis[Helper.Disable] <> 0 )

      doneif (hero.childfound[cWlk5CPacTal].field[abilActive].value = 0)    

     var sText as string
     sText = "+1d4"

     foreach pick in hero from BaseSave where "!Helper.ProfDouble & !Helper.Proficient & !ProfSave.svAll"
         #situational[eachpick,sText,field[thingname].text]
         nexteach]]></eval>
    <exprreq message="Pact of the Talisman required"><![CDATA[#hasability[cWlk5CPacTal] <> 0]]></exprreq>
    <exprreq message="Warlock level 9 required"><![CDATA[#levelcount[Warlock] >= 9]]></exprreq>
    </thing>
  <thing id="cWlk5CInChMs" name="Investment of the Chain Master" description="{b}{i}Note{/b}{/i}: You must add the  Investment of the Chain Master adjustment to your minion for this invocation to fully function.\n\nThe familiar summoned by your {i}find familiar{/i} spell gains these benefits:\n\n• A swim or flight (your choice) speed of 40 feet.\n\n• It no longer needs to breathe.\n\n• Its weapon attacks are now considered to be magical for the purpose of overcoming immunity and resistance to nonmagical attacks.\n\n• Any saving throws the familiar forces another creature to make are made against your spell save DC." compset="CustomSpec" summary="Grant additional benefits to your familiar." uniqueness="unique">
    <fieldval field="usrLabelAr" value="Speed Gained"/>
    <arrayval field="usrArray" index="0" value="Flying"/>
    <arrayval field="usrArray" index="1" value="Swimming"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <exprreq message="Pact of the Chain required"><![CDATA[#hasability[cWlkPacCha] <> 0]]></exprreq>
    </thing>
  <thing id="cWlk5CRebTal" name="Rebuke of the Talisman" description="When someone wearing your talisman is hit by an attacker visible to and within 30 feet of you, you can make a reaction to deal psychic damage equaling your Charisma modifier (minimum 1 damage) and push it up to 10 feet away from the creature wearing the talisman." compset="CustomSpec" summary="Use a reaction to deal psychic damage to an attacker." uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <usesource source="p5eCFVUACP"/>
    <tag group="abCategory" tag="WlkEldInvo" name="Warlock Eldritch Invocation" abbrev="Warlock Eldritch Invocation"/>
    <tag group="Helper" tag="Tertiary" name="Tertiary" abbrev="Tertiary"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <eval phase="Final"><![CDATA[var num as number

num = hero.childfound[aCON].field[aBonus].value

num = maximum(1,num)

field[abText].text = num & " psychic"]]></eval>
    <exprreq message="Pact of the Talisman required"><![CDATA[#hasability[cWlk5CPacTal] <> 0]]></exprreq>
    </thing>
  <thing id="abRog5CXSpLst" name="Expanded Arcane Trickster Spell List" description="This feature adds the {i}Augury{/i}, {i}Divination{/i}, {i}Enhance Ability{/i}, and {i}Speak with Dead{/i} spells to the Wizard/Arcane Trickster&apos;s spell list." compset="Ability">
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ClsAllowSp" tag="spAugury"/>
    <tag group="ClsAllowSp" tag="spDivinati"/>
    <tag group="ClsAllowSp" tag="spEnhaAbil"/>
    <tag group="ClsAllowSp" tag="spSpeaDead"/>
    <tag group="AllowRCust" tag="cfg5CCFVRog"/>
    <eval phase="First"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.Rogue"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5cRogArcT"/>
    </thing>
  <thing id="abSor5CXSpLDv" name="Expanded Divine Soul Sorcerer Spell List" description="This feature adds the {i}Aura of Life{/i}, {i}Aura of Purity{/i}, {i}Aura of Vitality{/i}, {i}Branding Smite{/i}, {i}Cause Fear{/i}, {i}Power Word Heal{/i}, {i}Skill Empowerment{/i}, {i}Wall of Light{/i}, and {i}Wrathful Smite{/i} spells to the Cleric/Divine Soul Sorcerer&apos;s spell list." compset="Ability">
    <tag group="AllowRCust" tag="cfg5CCFVSor"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Final" priority="21000"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

~these vars will hold the tag expressions for spells and cantrips

var spell as string
var known as string 
var first as string
var second as string
var third as string
var fourth as string
var fifth as string
var ninth as string

~ fetch spell expressions
spell = hero.childfound[cHelpSor].field[cSpKnoExpr].text 
known = hero.childfound[cHelpSor].field[cSpellExpr].text 

~ these receive the extra spells for each circle

first = " | thingid.sp5CXGECaF | thingid.sp5CWrathS "
second = " | thingid.sp5CBrandS "
third = " | thingid.sp5CAurVit "
fourth = " | thingid.sp5CAurLif | thingid.sp5CAurPur "
fifth = " | thingid.sp5CXGESkE | thingid.sp5CXGEWaL "
ninth = " | thingid.sp5CPwrWH "


spell &= first
known &= first

spell &= second
known &= second

spell &= third
known &= third

spell &= fourth
known &= fourth

spell &= fifth
known &= fifth

spell &= ninth
known &= ninth


hero.childfound[cHelpSor].field[cSpKnoExpr].text = spell
hero.childfound[cHelpSor].field[cSpellExpr].text = known
hero.childfound[cHelpSor].field[cSplBkExpr].text = known]]></eval>
    <pickreq thing="c5CSorDiSo"/>
    </thing>
  <thing id="p5CInvChnMst" name="Warlock: Investment of the Chain Master" compset="InPlay">
    <usesource source="p5eCFVUACP"/>
    <tag group="Helper" tag="AdjInfo" name="Adjustment Information" abbrev="Adjustment Information"/>
    <tag group="Helper" tag="NoIncr" name="NoIncr" abbrev="NoIncr"/>
    <tag group="OthAdjCat" tag="Class" name="Class" abbrev="Class"/>
    <tag group="Helper" tag="NoAdvLeag"/>
    <bootstrap thing="xSwim">
      <containerreq phase="First" priority="5000">fieldval:abValue = 1</containerreq>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="ra5CMinInChMs">
      <containerreq phase="First" priority="5000"><![CDATA[fieldval:pIsOn <> 0 & fieldval:abValue2 = 1]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="5000">fieldval:abValue = 0</containerreq>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <eval phase="First"><![CDATA[    ~ If we're not enabled, get out now
    doneif (field[pIsOn].value = 0)
    doneif (tagis[CompIs.Familiar] = 0)

field[abValue].value = master.childfound[cWlk5CInChMs].field[usrIndex].value
field[abValue2].value = 1]]></eval>
    <exprreq message="Must be a Familiar"><![CDATA[tagis[CompIs.Familiar] > 0]]></exprreq>
    <prereq message="Requires Investment of the Chain Master">
      <validate><![CDATA[@valid = 0
doneif (tagis[CompIs.Familiar] = 0)

if (master.childlives[cWlk5CInChMs] <>0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="ra5CMinInChMs" name="Investment of the Chain Master" description="The familiar summoned by your {i}find familiar{/i} spell gains these benefits:\n\n• A swim or flight (your choice) speed of 40 feet.\n\n• It no longer needs to breathe.\n\n• Its weapon attacks are now considered to be magical for the purpose of overcoming immunity and resistance to nonmagical attacks.\n\n• Any saving throws the familiar forces another creature to make are made against your spell save DC." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="10001"><![CDATA[var SVDC as number

SVDC = master.hero.childfound[cHelpWlk].field[cSplSaveDC].value

field[abText].text = "Save DC " & SVDC]]></eval>
    </thing>
  <thing id="cClr5CBlsStr" name="Blessed Strikes" description="When you damage a creature with one of your spells or weapon attacks, you can also deal 1d8 radiant damage to that creature. Once you&apos;ve dealt this damage, you cannot do so again until the beginning of your next turn." compset="CustomSpec" summary="Deal an extra 1d8 radiant damage once per round." uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="8"/>
    <tag group="abAction" tag="None"/>
    <tag group="AllowRCust" tag="cfg5CCFVClr"/>
    <tag group="Usage" tag="Round"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="DamageType" tag="dtRadiant"/>
    <eval phase="Final" priority="5000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

foreach  pick in hero where "(ClSpecWhen.14 | ClSpecWhen.8) & SpecSource.cHelpClr & !thingid.cClrDesUnd"
 perform each.tagreplace[Helper.ShowSpec,Helper.Disable]
nexteach]]></eval>
    <exprreq message="Requires Cleric Level 8"><![CDATA[#levelcount[Cleric] >= 8]]></exprreq>
    </thing>
  </document>
