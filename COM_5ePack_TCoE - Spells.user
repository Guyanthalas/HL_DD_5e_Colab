<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="sp5CBldDis" name="Blade of Disaster" description="You create a planar rift in the shape of a blade, roughly 3 feet long in an open space visbile to you and within range. The blade lasts for the spell&apos;s duration. When you cast this spell, you can make up to two melee spell attacks with the blade, each one against a creature, loose object, or structure within 5 feet of the blade. On a hit, the target suffers 4d12 force damage. On a critical hit, which is an 18 or higher on the d20 for this spell, the blade deals an additional 8d12 force damage (total of 12d12).\n\nYou can use a bonus action on your turn to move the blade up to 30 feet to an open space you can see, then make up to two melee spell attacks with it again.\n\nThe blade is not impeded by any barrier, not even a wall of force." compset="Spell">
    <fieldval field="sRange" value="60 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 minute"/>
    <usesource source="5eTCoE"/>
    <usesource source="p5eIDRotFP"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sLevel" tag="9"/>
    <tag group="sCastTime" tag="BonusAct1"/>
    <tag group="Helper" tag="SplAttack"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CDrmBlu" name="Dream of the Blue Veil" description="You and up to eight willing creatures within range fall unconscious for the spell&apos;s duration. You dream of another world on the Material Plane. If the spell reaches its full duration, the visions end with each of you finding and pulling back a mysterious blue curtain. The spell then ends as you&apos;re mentally and physically transported to the world you saw in those visions.\n\nIn order to cast this spell, you must have a magic item that came from the destination world, and you must know that world exists, even if you don&apos;t know it by name. You arrive in the other world in a safe location within 1 mile of where that magic item was created. Alternatively, you can cast the spell if one of the affected creatures was originally from the other world, which causes your destination to be a safe location within 1 mile of where they were born.\n\nIf a creature takes damage, the spell ends early for them and they are not transported. If yoy take damage, the spell ends for everyone, and nobody is transported." compset="Spell">
    <fieldval field="sCompDesc" value="A willing creature or a magic item from the destination world"/>
    <fieldval field="sRange" value="20 feet"/>
    <fieldval field="sDuration" value="6 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="7"/>
    <tag group="sCastTime" tag="Minutes10"/>
    <tag group="sClass" tag="cHelpBrd"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CCstBrw" name="Caustic Brew" description="A 30 foot by 5 foot line of acid spews from you in a direction you choose. Every creature in the line must make Dexterity save. On a failure, the creature is covered in acid for the spell&apos;s duration or until a creature uses its action to scrape or wash the acid off itself or another creature. A creature covered in the acid suffers 2d4 acid damage at beginning of each of its turns.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 2d4 for each slot level above 1st." compset="Spell">
    <fieldval field="sRange" value="30 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 minute"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Evocation"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sLevel" tag="1"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplSave"/>
    <tag group="sClass" tag="cHelpAtf"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CMndWhp" name="Mind Whip" description="You psychically lash out at one creature visible to you and within range. The target must make an Intelligence save. On a failure, the target suffers 3d6 psychic damage, and can&apos;t take a reaction until the end of its next turn. On its next turn, it must choose whether it gets a move, an action, or a bonus action; it gets only one of those. On a successful save, the target takes half as much damage and doesn&apos;t suffer the other effects.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd. The creatures must be within 30 feet of each other when you target them." compset="Spell">
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="1 round"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Enchant"/>
    <tag group="sComp" tag="V"/>
    <tag group="sLevel" tag="2"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplSave"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5COthGui" name="Otherworldly Guise" description="You speak an incantation to call magic of the Lower Planes or Upper Planes (your choice) to transform yourself. You gain these benefits until the spell ends:\n• You have immunity to the poisoned condition (Lower Planes) or the charmed condition (Upper Planes).\n• You gain a flying speed of 40 feet as spectral wings appear on your back.\n• You gain a +2 bonus to AC.\n• All your weapon attacks are magical. You can use your spellcasting ability modifier, instead of Strength or Dexterity, for the attack and damage rolls of your weapon attacks.\n• Unless you already have a feature like Extra Attack that lets you attack more than once on your turn, you gain the ability to attack twice instead of once when you take the attack action on your turn." compset="Spell">
    <fieldval field="sCompDesc" value="an object engraved with a symbol of the Outer Planes"/>
    <fieldval field="sCompCost" value="500"/>
    <fieldval field="sRange" value="self"/>
    <fieldval field="sDuration" value="Concentration, up to 1 minute"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Transmutat"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="6"/>
    <tag group="sCastTime" tag="BonusAct1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CIntFrt" name="Intellect Fortress" description="For the duration of the spell, you or one willing creature visible to you and within range is resistant to psychic damage. They also have advantage on Intelligence, Wisdom, and Charisma saves.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a spell slot of 4th level or higher, you can target one additional creature for each slot level above 3rd. The targets must be within 30 feet of each other when you target them." compset="Spell">
    <fieldval field="sRange" value="30 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Abjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sLevel" tag="3"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplSave"/>
    <tag group="sClass" tag="cHelpAtf"/>
    <tag group="sClass" tag="cHelpBrd"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CMndSlv" name="Mind Sliver" description="You spike psychic energy into the mind of a target visible to you and within range. The target must make an Intelligence save. On failure, it suffers 1d6 psyhic damage and subtracts 1d4 from the next saving throw it makes before the end of your next turn.\n\nThis spell&apos;s damage increases by 1d6 when you reach certain levels: 2d6 at 5th level, 3d6 at 11th level, and 4d6 at 17th level." compset="Spell">
    <fieldval field="sRange" value="60 feet"/>
    <fieldval field="sDuration" value="1 round"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Enchant"/>
    <tag group="sComp" tag="V"/>
    <tag group="sLevel" tag="0"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplSave"/>
    <tag group="sClass" tag="cHelpSor"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CSptShr" name="Spirit Shroud" description="You call forth intangible and invulnerable spirts of the dead to fly around you for the duration of the spell.\n\nUntil the spell ends, any attack you make deals an extra 1d8 damage when you hit a creature within 10 feet of you. When you cast the spell, chose the type of damage: radiant, necrotic, or cold. Any creature that takes this damage is unable to regain hit points until the beginning of your next turn.\n\nAdditionally, any creature of your choice that you can see that starts its turn within 10 feet of you has its speed reduced by 10 feet until the beginning of your next turn.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d8 for every two slot levels above 3rd." compset="Spell">
    <fieldval field="sRange" value="self"/>
    <fieldval field="sDuration" value="Concentration, up to 1 minute"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Necromancy"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sLevel" tag="3"/>
    <tag group="sCastTime" tag="BonusAct1"/>
    <tag group="sClass" tag="cHelpClr"/>
    <tag group="sClass" tag="cHelpPal"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    </thing>
  <thing id="sp5CSumAbr" name="Summon Aberration" description="You summon an aberrant spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Aberrant Spirit stat block. When you cast the spell, choose Beholderkin, Slaad, or Star Spawn. The creature resembles an aberration of that kind, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 5th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="a pickled tentacle and an eyeball in a platinum-inlaid vial"/>
    <fieldval field="sCompCost" value="400"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="4"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First" priority="1000"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumBst" name="Summon Beast" description="You summon a bestial spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Bestial Spirit stat block. When you cast the spell, choose an environment: Air, Land, or Water. The creature resembles an animal of your choice that is native to the chosen environment, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 3rd level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="a feather, tuft of fur, and fish tail inside a gilded acorn"/>
    <fieldval field="sCompCost" value="200"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="2"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpDrd"/>
    <tag group="sClass" tag="cHelpRgr"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumCel" name="Summon Celestial" description="You summon a celestial spirit. It manifests in an angelic form in an unoccupied space that you can see within range. This physical manifestation uses the Celestial Spirit stat block. When you cast the spell, choose Avenger or Defender. Your choice determines the creature&apos;s attack in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 6th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="a golden reliquary"/>
    <fieldval field="sCompCost" value="500"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="5"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpClr"/>
    <tag group="sClass" tag="cHelpPal"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumCon" name="Summon Construct" description="You summon the spirit of a construct. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Construct Spirit stat block. When you cast the spell, choose a material: Clay, Metal, or Stone. The creature resembles a golem or a modron (your choice) made of the chosen material, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 4th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="an ornate stone and metal lockbox"/>
    <fieldval field="sCompCost" value="400"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="4"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="sClass" tag="cHelpAtf"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First" priority="505"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumEle" name="Summon Elemental" description="You summon an elemental spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Elemental Spirit stat block. When you cast the spell, choose an element: Air, Earth, Fire, or Water. The creature resembles a bipedal form wreathed in the chosen element, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 5th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="air, a pebble, ash, and water inside a gold-inlaid vial"/>
    <fieldval field="sCompCost" value="400"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="4"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpDrd"/>
    <tag group="sClass" tag="cHelpRgr"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumFey" name="Summon Fey" description="You summon a fey spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Fey Spirit stat block. When you cast the spell, choose a mood: Fuming, Mirthful, or Tricksy. The creature resembles a fey creature of your choice marked by the chosen mood, which determines one of the traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 4th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="a gilded flower"/>
    <fieldval field="sCompCost" value="300"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="3"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpDrd"/>
    <tag group="sClass" tag="cHelpRgr"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumFnd" name="Summon Fiend" description="You summon a fiendish spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Fiendish Spirit stat block. When you cast the spell, choose Demon, Devil, or Yugoloth. The creature resembles a fiend of the chosen type, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 7th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="humanoid blood inside a ruby vial"/>
    <fieldval field="sCompCost" value="600"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="6"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumShd" name="Summon Shadowspawn" description="You summon a shadowy spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Shadow Spirit stat block. When you cast the spell, choose an emotion: Fury, Despair, or Fear. The creature resembles a misshapen biped marked by the chosen emotion, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 4th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="tears inside a gem"/>
    <fieldval field="sCompCost" value="300"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Conjur"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="3"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="sp5CSumUnd" name="Summon Undead" description="You summon an undead spirit. It manifests in an unoccupied space that you can see within range. This physical manifestation uses the Undead Spirit stat block. When you cast the spell, choose the creature&apos;s form: Ghostly, Putrid, or Skeletal. The spirit resembles an undead creature with the chosen form, which determines certain traits in its stat block. If the creature drops to 0 hit points or the spell ends, the creature disappears.\n\nThe creature is your and your companions&apos; ally. In combat, it shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action needed from you). If it doesn&apos;t receive orders, it takes the dodge action and moves out of harm&apos;s way as possbile.\n\n{b}{i}At Higher Levels.{/i}{/b} When you cast this spell using a 4th level or higher spell slot, apply that higher level in the appropriate places indicated on the creature&apos;s stat block." compset="Spell">
    <fieldval field="sCompDesc" value="a gilded skull"/>
    <fieldval field="sCompCost" value="300"/>
    <fieldval field="sRange" value="90 feet"/>
    <fieldval field="sDuration" value="Concentration, up to 1 hour"/>
    <usesource source="5eTCoE"/>
    <tag group="sSchool" tag="Necromancy"/>
    <tag group="sComp" tag="V"/>
    <tag group="sComp" tag="S"/>
    <tag group="sComp" tag="M"/>
    <tag group="sLevel" tag="3"/>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="SplMatAtLe"/>
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature"/>
    <tag group="sClass" tag="cHelpWlk"/>
    <tag group="sClass" tag="cHelpWiz"/>
    <eval phase="First"><![CDATA[

    ~ If we're disabled, do nothing & 
    doneif (tagis[Helper.Disable] = 1)

    ~ Push our info to the Summoned creature so we can pull it down
    perform hero.childfound[5CSummon].pushtags[SpInfo.?]]]></eval>
    </thing>
  <thing id="c5CSumCrt" name="Summoned Creature" compset="Companion" stacking="never" uniqueness="unique">
    <fieldval field="CompType" value="Summoned Creature"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[
      var searchexpr as string
      var total as number
      searchexpr = "("

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumAbr] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumAbe"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumBst] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumBst"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumCel] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumCel"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumCon] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumCon"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumEle] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumEle"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumFey] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumFey"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumFnd] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumFnd"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumShd] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumShd"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumUnd] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumUnd"
        endif

      if (hero.childfound[5CSummon].tagcount[SpInfo.sp5CSumDra] <> 0) then
        total += 1
        if (total > 1) then
          searchexpr &= " | "
          endif
        searchexpr &= "thingid.r5CSumDra"
        endif

      searchexpr &= ")"

      minion.childfound[Totals].field[tRaceExpr].text = searchexpr]]></eval>
    <minion id="Summoned" isinherit="no">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="HideTab" tag="race" name="race" abbrev="race"/>
      <bootstrap thing="ra5CSumSplLvl"></bootstrap>
      </minion>
    </thing>
  <thing id="r5CSumAbe" name="Aberrant Spirit" compset="Race">
    <fieldval field="rSTR" value="6"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rINT" value="6"/>
    <fieldval field="rCHA" value="-4"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="DamageImm" tag="dtPsychic"/>
    <tag group="RaceSize" tag="Medium0" name="Medium" abbrev="Medium"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="tpAberr"></bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lDeepSpeec"></bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The aberration can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 40
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 40 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 4
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 4]]></eval>
    </thing>
  <thing id="5CSummon" name="Summoned Creature" description="Add this to add one of these creatures to your hero, based on which Summon spell you have:\n• Aberrant Spirit\n• Bestial Spirit\n• Celestial Spirit\n• Construct Spirit\n• Draconic Spirit\n• Elemental Spirit\n• Fey Spirit\n• Fiendish Spirit\n• Shadow Spirit\n• Undead Spirit" compset="CompClHelp" uniqueness="unique">
    <tag group="CompAvail" tag="c5CSummon" name="Summoned Creature" abbrev="Summoned Creature"/>
    <bootstrap thing="c5CSumCrt"></bootstrap>
    <link linkage="realcomp" thing="c5CSumCrt"/>
    </thing>
  <thing id="p5CSumCrt" name="Summon Creature" description="Add this to add a summoned creature to your character. This is usually used if a scroll or item grants you a casting of a Summon ____ spell." compset="InPlay">
    <usesource source="5eTCoE"/>
    <usesource source="5eFFToD"/>
    <tag group="Custom" tag="ScrollSum"/>
    <tag group="OthAdjCat" tag="UserBot6th"/>
    <tag group="Adjustment" tag="Class" name="Classes" abbrev="Classes"/>
    <tag group="Helper" tag="NoIncr" name="NoIncr" abbrev="NoIncr"/>
    <eval phase="First" priority="10000"><![CDATA[    doneif (field[pIsOn].value = 0)
    doneif (field[pChosen].ischosen = 0)
    perform field[pChosen].chosen.assign[CompAvail.c5CSummon]
      
~ that assigned the summoning to a particular class
~ if that class then summons the creature, it's using the spell scroll,
~ and therefore needs use to push our custom tag, whiche we'll use later
~ to tell it to use the default scroll spell bonuses, not the class's
~ so we test to see which class added the summoned creature   
~ this is by looking at the hasagent on the companion helper

    var Cls as string
    Cls = hero.childfound[5CSummon].tagids[hasagent.?,""]
    Cls = replace(Cls,"hasagent.","",0)

~ now our variable should equal the class helper, like cHelpFtr
~ then we test it to see if it's the same as where this adjustment
~ added the summon spell

    if (compare(field[pChosen].chosen.idstring,Cls) = 0) then
    perform hero.childfound[c5CSumCrt].pushtags[Custom.?]
    endif]]></eval>
    </thing>
  <thing id="ra5CSumSplLvl" name="Spell Level" description="Some of the summoned spirit&apos;s features depend on the level at which the spell was cast. Select the spell level in the In-Play tab." compset="RaceSpec">
    <fieldval field="abValue" value="2"/>
    <fieldval field="actIncrNam" value="Spell Level"/>
    <fieldval field="actUserMin" value="2"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="LvNamePar" tag="AppText"/>
    <bootstrap thing="ra5CRgCSBD">
      <containerreq phase="First" priority="499"><![CDATA[(fieldval:abValue5 > 14)]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="49000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

~ set name to activation level
   field[abText].text = "Level " & field[actUser].value


~ if it's a spell scroll cast, use the default spell scroll bonuses
   if (master.childfound[c5CSumCrt].tagcount[Custom.ScrollSum] <> 0) then
    if (field[actUser].value >= 9) then
     field[abValue3].value = 19
     field[abValue4].value = 11
    elseif (field[actUser].value >= 7) then
     field[abValue3].value = 18
     field[abValue4].value = 10
    elseif (field[actUser].value >= 5) then
     field[abValue3].value = 17
     field[abValue4].value = 9
    elseif (field[actUser].value >= 3) then
     field[abValue3].value = 15
     field[abValue4].value = 7
    else
     field[abValue3].value = 13
     field[abValue4].value = 5
    endif
   endif

doneif (master.childfound[c5CSumCrt].tagcount[Custom.ScrollSum] <> 0)


    var Cls as string
    Cls = master.childfound[5CSummon].tagids[hasagent.?,""]
    Cls = replace(Cls,"hasagent","thingid",0)


      ~Pull master's spell save DC into abValue3 for use in other features
   foreach pick in master where Cls
    field[abValue3].value = eachpick.field[cSplSaveDC].value
    nexteach

      ~Pull master's spell attack into abValue4 for use in other features
   foreach pick in master where Cls
    field[abValue4].value = eachpick.field[cSplAttack].value
    nexteach]]></eval>
    <eval phase="PostAttr" priority="12000" index="5"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

~ and damage.
foreach pick in hero from BaseWep where "wGroup.Natural"
   eachpick.field[dmmBonus].value += field[actUser].value
   eachpick.field[dmrBonus].value += field[actUser].value
nexteach]]></eval>
    <eval phase="PostLevel" index="6"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ store the proficiency of the hero in abValue2:

field[abValue2].value = master.childfound[ProfBonus].field[tProfBonus].value

~ now we replace the prof bonus of the minion with the stored hero one

hero.childfound[ProfBonus].field[tProfBonus].value = field[abValue2].value]]></eval>
    </thing>
  <thing id="sr5CAbrBeh" name="Beholderkin" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumAbe"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="xFly">
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtPsychic"/>
      <autotag group="wProperty" tag="Spell"/>
      <autotag group="DamageOver" tag="aINT"/>
      <autotag group="RanAttOver" tag="aINT"/>
      <assignval field="livename" value="Eye Ray"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wRangeNorm" value="150"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Eye Ray"/>
      </bootstrap>
    </thing>
  <thing id="sr5CAbrSla" name="Slaadi" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumAbe"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtSlashing"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Claws"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Claws"/>
      <assignval field="wAttackEff" value="If the target is a creature, it is unable to regain hit points until the beginning of the aberration&apos;s next turn."/>
      </bootstrap>
    </thing>
  <thing id="sr5CAbrStr" name="Star Spawn" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumAbe"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtPsychic"/>
      <autotag group="wProperty" tag="Spell"/>
      <autotag group="DamageOver" tag="aINT"/>
      <autotag group="MelAttOver" tag="aINT"/>
      <assignval field="livename" value="Psychic Slam"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Psychic Slam"/>
      </bootstrap>
    <bootstrap thing="ra5CAbrWhs"></bootstrap>
    </thing>
  <thing id="ra5CAbrWhs" name="Whispering Aura" description="At the beginning of each of the star spawn&apos;s turns, every creature within 5 feet of it must make a Wisdom save versus its summoner&apos;s spell save DC. On a failure, the creaure suffers 2d6 psychic damage. This does not occur if the star spawn is incapacitated." compset="RaceSpec">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="Universal" tag="Universal" name="Universal Monster Ability" abbrev="Universal Monster Ability"/>
    <tag group="abSave" tag="aWIS"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value

      field[CustDesc].text = "At the beginning of each of the star spawn's turns, every creature within 5 feet of it must make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom save. On a failure, the creaure suffers 2d6 psychic damage. This does not occur if the star spawn is incapacitated."]]></eval>
    </thing>
  <thing id="r5CSumBst" name="Bestial Spirit" compset="Race">
    <fieldval field="rSTR" value="8"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rINT" value="-6"/>
    <fieldval field="rCHA" value="-5"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rDEX" value="1"/>
    <fieldval field="rWIS" value="4"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="xMultiatt"></bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="tpBeast"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtPiercing"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="sbName" value="Maul"/>
      <assignval field="livename" value="Maul"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="8"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 30
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 20 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 2
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 2]]></eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The beast can make " & Mlt & " attack(s)."]]></eval>
    </thing>
  <thing id="r5CSumCel" name="Celestial Spirit" compset="Race">
    <fieldval field="rSTR" value="6"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rWIS" value="4"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="DamageRes" tag="dtRadiant"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="tpCelestia"></bootstrap>
    <bootstrap thing="lCelestial"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="ra5CCelHea"></bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The celestial can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 40
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 50 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 1</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 5
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 5]]></eval>
    </thing>
  <thing id="sr5CBstAir" name="Air" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumBst"/>
    <bootstrap thing="ra5CFlyBy">
      <assignval field="abText" value="beast"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      herofield[tBonusHP].value -= 10]]></eval>
    </thing>
  <thing id="sr5CBstLnd" name="Land" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumBst"/>
    <bootstrap thing="ra5CPackTa">
      <assignval field="abText" value="beast"/>
      </bootstrap>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    </thing>
  <thing id="sr5CBstWtr" name="Water" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumBst"/>
    <bootstrap thing="ra5CPackTa">
      <assignval field="abText" value="beast"/>
      </bootstrap>
    <bootstrap thing="ra5CWaBre">
      <assignval field="abText" value="beast"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="30"/>
      </bootstrap>
    </thing>
  <thing id="ra5CCelHea" name="Healing Touch" description="The celesital touches another creature. The target magically regains hit points equaling 2d8 + the level at which the summon spell was cast." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="Usage" tag="Day" name="/day" abbrev="/day"/>
    <tag group="User" tag="Tracker" name="tracker" abbrev="tracker"/>
    <tag group="FeatureTyp" tag="Action" name="Action" abbrev="Action"/>
    <eval phase="Final" priority="50000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

     field[CustDesc].text = "The celesital touches another creature. The target magically regains 2d8 + " & hero.childfound[ra5CSumSplLvl].field[actUser].value & " hit points."]]></eval>
    </thing>
  <thing id="sr5CCelAve" name="Avenger" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumCel"/>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtRadiant"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="RanAttOver" tag="aDEX"/>
      <assignval field="livename" value="Radiant Bow"/>
      <assignval field="wRangeNorm" value="150"/>
      <assignval field="wDieCount" value="2"/>
      <assignval field="sbName" value="Radiant Bow"/>
      <assignval field="wRangeLong" value="600"/>
      <assignval field="wDieSize" value="6"/>
      </bootstrap>
    </thing>
  <thing id="sr5CCelDef" name="Defender" compset="SubRace" uniqueness="unique">
    <fieldval field="rAC" value="2"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumCel"/>
    <tag group="RaceSize" tag="Medium0"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtRadiant"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Radiant Mace"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Radiant Mace"/>
      <assignval field="wAttackEff" value="The celestial can give 1d10 temporary hit points to either itself or another creature it can see within 10 feet of the target."/>
      </bootstrap>
    </thing>
  <thing id="r5CSumCon" name="Construct Spirit" compset="Race">
    <fieldval field="rCHA" value="-5"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rSTR" value="8"/>
    <fieldval field="rCON" value="8"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rAC" value="3"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="DamageRes" tag="dtPoison"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnIncapa"/>
    <tag group="CondImm" tag="pcnParaly"/>
    <tag group="CondImm" tag="pcnPetri"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtBludgeon"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <assignval field="sbName" value="Slam"/>
      <assignval field="livename" value="Slam"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDieCount" value="1"/>
      </bootstrap>
    <bootstrap thing="tpConst"></bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 4
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 4]]></eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The construct can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 40
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 15 - 60 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value</eval>
    </thing>
  <thing id="sr5CConMet" name="Metal" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumCon"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="ra5CHeaBod">
      <assignval field="abText" value="construct"/>
      <assignval field="abText2" value="1d10"/>
      </bootstrap>
    </thing>
  <thing id="ra5CConSto" name="Stony Lethargy" description="When a creature visible to the construct begins its turn within 10 feet of the construct, the cosntruct can force it to make a Wisdom saving throw versus the construct&apos;s summoner&apos;s spell save DC. On a failure, the target cannot take any reactions and its speed is halved until the beginning of its next turn." compset="RaceSpec">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="StandardDC" tag="aINT"/>
    <tag group="Universal" tag="Universal" name="Universal Monster Ability" abbrev="Universal Monster Ability"/>
    <tag group="abSave" tag="aWIS"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value

      field[CustDesc].text = "When a creature visible to the construct begins its turn within 10 feet of the construct, the cosntruct can force it to make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom save. On a failure, the target cannot take any reactions and its speed is halved until the beginning of its next turn."]]></eval>
    </thing>
  <thing id="sr5CConSto" name="Stone" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumCon"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="ra5CConSto">
      <assignval field="abText" value="construct"/>
      <assignval field="abText2" value="1d10"/>
      </bootstrap>
    </thing>
  <thing id="ra5CConBes" name="Beserk Lashing" description="When the construct takes damage, it makes a slam attack against a random creature within 5 feet of it. If no creatures are in range, the construct moves up to half its speed toward a visible enemy. This movement does not provoke attacks of opportunity." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    </thing>
  <thing id="sr5CConCla" name="Clay" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumCon"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="ra5CConBes">
      <assignval field="abText" value="construct"/>
      <assignval field="abText2" value="1d10"/>
      </bootstrap>
    </thing>
  <thing id="r5CSumEle" name="Elemental Spirit" compset="Race">
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rSTR" value="8"/>
    <fieldval field="rCON" value="7"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rDEX" value="5"/>
    <fieldval field="rSpeed" value="40"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnParaly"/>
    <tag group="CondImm" tag="pcnPetri"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <tag group="CondImm" tag="pcnUnconc"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="tpElementa"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="lPrimord"></bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 50
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 40 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 1</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 4
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 4]]></eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The elemental can make " & Mlt & " attack(s)."]]></eval>
    </thing>
  <thing id="sr5CEleEar" name="Earth" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumEle"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtBludgeon"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Slam"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Slam"/>
      </bootstrap>
    <bootstrap thing="xBurrow">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <eval phase="First">perform hero.assign[DamageRes.dtPiercing]
     perform hero.assign[DamageRes.dtSlashing]</eval>
    </thing>
  <thing id="sr5CEleAir" name="Air" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumEle"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtBludgeon"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Slam"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Slam"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="ra5CAmporh">
      <assignval field="sbName" value="Amorphous Form"/>
      <assignval field="livename" value="Amorphous Form"/>
      <assignval field="abText" value="elemental"/>
      </bootstrap>
    <eval phase="First">perform hero.assign[DamageRes.dtLightnin]
     perform hero.assign[DamageRes.dtThunder]</eval>
    </thing>
  <thing id="sr5CEleWat" name="Water" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumEle"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtBludgeon"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Slam"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Slam"/>
      </bootstrap>
    <bootstrap thing="ra5CAmporh">
      <assignval field="sbName" value="Amorphous Form"/>
      <assignval field="livename" value="Amorphous Form"/>
      <assignval field="abText" value="elemental"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <eval phase="First">perform hero.assign[DamageRes.dtAcid]</eval>
    </thing>
  <thing id="sr5CEleFir" name="Fire" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumEle"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtFire"/>
      <autotag group="DamageOver" tag="aSTR"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="livename" value="Slam"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Slam"/>
      </bootstrap>
    <bootstrap thing="ra5CAmporh">
      <assignval field="sbName" value="Amorphous Form"/>
      <assignval field="livename" value="Amorphous Form"/>
      <assignval field="abText" value="elemental"/>
      </bootstrap>
    <eval phase="First">perform hero.assign[DamageImm.dtFire]</eval>
    </thing>
  <thing id="r5CSumFey" name="Fey Spirit" compset="Race">
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rINT" value="4"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rWIS" value="1"/>
    <fieldval field="rCON" value="4"/>
    <fieldval field="rSpeed" value="40"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="tpFey"></bootstrap>
    <bootstrap thing="lSylvan"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="ra5CFeyFey"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtPiercing"/>
      <autotag group="MelAttOver" tag="aSTR"/>
      <assignval field="sbName" value="Shortsword"/>
      <assignval field="livename" value="Shortsword"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDamExtra" value=" and 1d6 force "/>
      </bootstrap>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 30
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 30 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 1</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 3
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 3]]></eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The fey can make " & Mlt & " attack(s)."]]></eval>
    </thing>
  <thing id="ra5CFeyFey" name="Fey Step" description="The fey uses a bonus action to magically teleport up to 30 feet to an open space that it can see. Depending on the fey&apos;s chosen mood, another effect then occurs." compset="RaceSpec">
    <arrayval field="usrArray" index="0" value="Fuming"/>
    <arrayval field="usrArray" index="1" value="Mirthful"/>
    <arrayval field="usrArray" index="2" value="Tricksy"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

   var extra as string

   if (field[usrIndex].value = 0) then
     field[abText].text = "Fuming"
     extra = " The fey has advantage on the next attack roll it makes before the end of this current turn."
   elseif (field[usrIndex].value = 1) then
     field[abText].text = "Mirthful"
     perform assign[abSave.aWIS]
     field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value
     extra = " The fey can force one creature it can see to make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom saving throw. On a failure, the target is charmed by the fey and its summoner for 1 minute, or until the target is damaged."
   elseif (field[usrIndex].value = 2) then
     field[abText].text = "Tricksy"
     extra = " The fey can fill a 5-foot cube within 5 feet of itself with magical darkness. The darkness lasts until the end of the fey's next turn."
   endif


   field[CustDesc].text = "The fey uses a bonus action to magically teleport up to 30 feet to an open space that it can see." & extra]]></eval>
    </thing>
  <thing id="r5CSumFnd" name="Fiend Spirit" compset="Race">
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="5"/>
    <fieldval field="rSpeed" value="40"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <tag group="RaceSize" tag="Large1"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="DamageRes" tag="dtFire"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="tpFiend"></bootstrap>
    <bootstrap thing="lAbyssal"></bootstrap>
    <bootstrap thing="lInfernal"></bootstrap>
    <bootstrap thing="xTelepathy">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="ra5CMagResN">
      <assignval field="abText" value="The fiend"/>
      </bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The fiend can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 60
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 15 - 90 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 1</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 6
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 6]]></eval>
    </thing>
  <thing id="sr5CFndDem" name="Demon" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumFnd"/>
    <bootstrap thing="xClimb">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="ra5CFndDea"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtNecrotic"/>
      <autotag group="MelAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <assignval field="sbName" value="Bite"/>
      <assignval field="livename" value="Bite"/>
      <assignval field="wDieSize" value="12"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wAttackEff" value="If the target is a loose (not worn or carried), flammable object, it also catches fire."/>
      </bootstrap>
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      herofield[tBonusHP].value -= 10]]></eval>
    </thing>
  <thing id="ra5CFndDea" name="Death Throes" description="When the fiend drops to 0 hit points or when the spell that summoned it ends, the fiend explodes. Every creature within 10 feet of it must make a Dexterity save versus the fiend&apos;s summoner&apos;s spell save DC. The saving creature takes 2d10 + the spell level&apos;s fire damage on a failure, or half that on a success." compset="RaceSpec">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="Universal" tag="Universal" name="Universal Monster Ability" abbrev="Universal Monster Ability"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value

      field[CustDesc].text = "When the fiend drops to 0 hit points or when the spell that summoned it ends, the fiend explodes. Every creature within 10 feet of it must make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Dexterity save. On a failure, the creaure suffers 2d10 + " & hero.childfound[ra5CSumSplLvl].field[actUser].value & " fire damage on a failure, or half that on a success."

     field[abText].text = "2d10 + " & hero.childfound[ra5CSumSplLvl].field[actUser].value & " fire"]]></eval>
    </thing>
  <thing id="sr5CFndDec" name="Devil" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumFnd"/>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtFire"/>
      <autotag group="RanAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="wProperty" tag="Spell"/>
      <assignval field="livename" value="Hurl Flame"/>
      <assignval field="wDieSize" value="6"/>
      <assignval field="wDieCount" value="2"/>
      <assignval field="wRangeNorm" value="150"/>
      <assignval field="sbName" value="Hurl Flame"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="ra5CDevSitN">
      <assignval field="abText" value="the fiend"/>
      </bootstrap>
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      herofield[tBonusHP].value -= 20]]></eval>
    </thing>
  <thing id="sr5CFndYug" name="Yugoloth" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumFnd"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtSlashing"/>
      <autotag group="MelAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <assignval field="sbName" value="Claws"/>
      <assignval field="livename" value="Claws"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wAttackEff" value="Immediately after making the attack, regardless of whether it hits or misses, the fiend can magically teleport up to 30 feet to an open space it can see."/>
      </bootstrap>
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      herofield[tBonusHP].value -= 10]]></eval>
    </thing>
  <thing id="r5CSumShd" name="Shadow Spirit" compset="Race">
    <fieldval field="rSTR" value="3"/>
    <fieldval field="rINT" value="-6"/>
    <fieldval field="rCHA" value="6"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rSpeed" value="40"/>
    <fieldval field="rCON" value="5"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="DamageRes" tag="dtNecrotic"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtCold"/>
      <autotag group="MelAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="wProperty" tag="Spell"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="12"/>
      <assignval field="sbName" value="Chilling Rend"/>
      <assignval field="livename" value="Chilling Rend"/>
      </bootstrap>
    <bootstrap thing="tpMonstros"></bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <bootstrap thing="ra5CShdDre"></bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach

~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The damage type is your choice. The target is also grappled, with an escape DC of " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & ". Until the grapple ends, the beast cannot use this attack on another target."
nexteach

~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The spirit can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 35
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 15 - 45 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 2</eval>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 3
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 3]]></eval>
    </thing>
  <thing id="ra5CShdDre" name="Dreadful Scream" description="The spirit screams, forcing every creature within 30 feet of it to make a WIsdom save versus the spirit&apos;s summoner&apos;s spell save DC. A creature failing the save is frightened for 1 minute. It can repeat the save at the end of each of its turns, ending the effect on itself with a success." compset="RaceSpec">
    <fieldval field="trkMax" value="1"/>
    <tag group="abSave" tag="aWIS"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="Usage" tag="Day"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value

      field[CustDesc].text = "The spirit screams, forcing every creature within 30 feet of it to make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom save. A creature failing the save is frightened for 1 minute. It can repeat the save at the end of each of its turns, ending the effect on itself with a success."]]></eval>
    </thing>
  <thing id="sr5CShdFur" name="Fury" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumShd"/>
    <bootstrap thing="ra5CShdTer"></bootstrap>
    </thing>
  <thing id="sr5CShdFea" name="Fear" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumShd"/>
    <bootstrap thing="ra5CShdSte"></bootstrap>
    </thing>
  <thing id="sr5CShdDes" name="Despair" compset="SubRace" uniqueness="unique">
    <tag group="RaceType" tag="Normal"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="SubRace" tag="r5CSumShd"/>
    <bootstrap thing="ra5CShdWei"></bootstrap>
    </thing>
  <thing id="ra5CShdTer" name="Terror Frenzy" description="The spirit&apos;s attack rolls against frightened creatures are made with advantage." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="ra5CShdWei" name="Weight of Sorrow" description="Any creature, other than its summoner, that begins its turn within 5 feet of the spirit has its speed reduced by 20 feet until the beginning of that creature&apos;s next turn." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="ra5CShdSte" name="Shadow Stealth" description="While in dim light or darkness, the spirit can Hide as a bonus action." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    </thing>
  <thing id="r5CSumUnd" name="Undead Spirit" compset="Race">
    <fieldval field="rSTR" value="2"/>
    <fieldval field="rINT" value="-6"/>
    <fieldval field="rCHA" value="-1"/>
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rDEX" value="6"/>
    <fieldval field="rCON" value="5"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Custom" tag="InheritDC" name="InheritDC" abbrev="InheritDC"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="DamageImm" tag="dtNecrotic"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnParaly"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <tag group="Alignment" tag="Unaligned"/>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="xMultiatt"></bootstrap>
    <bootstrap thing="tpUndead"></bootstrap>
    <eval phase="First" priority="5000" index="4"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Tell the spell level thing that our minimum spell level is 3
     hero.childfound[ra5CSumSplLvl].field[actUserMin].value = 3]]></eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~ go through each natural weapon on the hero and find what attack attribute
~ we've assigned to it. We MUST assign one with the MelAttOver and RanAttOver
~ tags for this to work. Pull that bonus, add the prof, find the master's
~ spell attack bonus in abValue4 from the Spell Level thing, and remove
~ the regular attack bonus while adding the master spell attack

foreach pick in hero from BaseWep where "wGroup.Natural"

    var Rng as string
    var CrR as number
    Rng = eachpick.tagids[RanAttOver.?,""]
    Rng = replace(Rng,"hasagent","thingid",0)
    CrR = (hero.firstchild[Rng].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

    eachpick.field[wRanAtk].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrR

    var Mel as string
    var CrM as number
    Mel = eachpick.tagids[MelAttOver.?,""]
    Mel = replace(Mel,"hasagent","thingid",0)
    CrM = (hero.firstchild[Mel].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

eachpick.field[wAttack].value += hero.childfound[ra5CSumSplLvl].field[abValue4].value - CrM

nexteach



~Take half our spell level rounded down for multiattack text
var Mlt as number
Mlt = hero.childfound[ra5CSumSplLvl].field[actUser].value
Mlt /= 2
Mlt = round(Mlt,0,-1)
hero.childfound[xMultiatt].field[CustDesc].text = "The spirit can make " & Mlt & " attack(s)."]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = 30
HPAdj += hero.childfound[ra5CSumSplLvl].field[actUser].value * 10 - 30 - 1

herofield[tBonusHP].value = HPAdj

~ Add the spell level to our AC Bonus
hero.childfound[ArmorClass].field[Bonus].value += hero.childfound[ra5CSumSplLvl].field[actUser].value - 2</eval>
    </thing>
  <thing id="sr5CUndGho" name="Ghostly" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumUnd"/>
    <tag group="Custom" tag="InheritDC"/>
    <bootstrap thing="ra5CShdInc"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Creature"/>
      <autotag group="DamTypeOvr" tag="dtNecrotic"/>
      <autotag group="MelAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="abSave" tag="aWIS"/>
      <autotag group="Custom" tag="InheritDC"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Deathly Touch"/>
      <assignval field="livename" value="Deathly Touch"/>
      <assignval field="wDieSize" value="8"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="40"/>
      <autotag group="Helper" tag="Hover"/>
      </bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "The target must succeed on a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom save or become frightened of the spirit until the end of the target's next turn."
nexteach]]></eval>
    </thing>
  <thing id="ra5CShdInc" name="Incorporeal Passage" description="The spirit can move through other creatures and objects as if they were difficult terrain. If it ends its turn within an object, it is pushed to the closest open space and suffers 1d10 force damage for every 5 feet it was shunted." compset="RaceSpec">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    </thing>
  <thing id="sr5CShdPut" name="Putrid" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumUnd"/>
    <tag group="Custom" tag="InheritDC"/>
    <bootstrap thing="ra5CShdFes"></bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtSlashing"/>
      <autotag group="MelAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="abSave" tag="aCON"/>
      <autotag group="Custom" tag="InheritDC"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="sbName" value="Rotting Claw"/>
      <assignval field="livename" value="Rotting Claw"/>
      <assignval field="wDieSize" value="6"/>
      </bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[~Check if we've added the tag to a weapon to inherit the master's spell save
~DC. Then update the description with it.

foreach pick in hero from BaseWep where "Custom.InheritDC"
 eachpick.field[wAttackEff].text = "If the target is poisoned, it must succeed on a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Wisdom save or become paralyzed until the end of your next turn."
nexteach]]></eval>
    </thing>
  <thing id="ra5CShdFes" name="Festering Aura" description="Any creature, other than the spirit&apos;s summoner, the begins its turn wtihin 5 feet of the spirit must make a Constitution save versus the spirit&apos;s summoner&apos;s spell save DC. On a failure, it is poisoned until the beginning of its next turn." compset="RaceSpec">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="abSave" tag="aCON"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CSumSplLvl].field[abValue3].value

      field[CustDesc].text = "Any creature, other than the spirit's summoner, the begins its turn wtihin 5 feet of the spirit must make a DC " & hero.childfound[ra5CSumSplLvl].field[abValue3].value & " Constitution save. On a failure, it is poisoned until the beginning of its next turn."]]></eval>
    </thing>
  <thing id="sr5CUndSke" name="Skeletal" compset="SubRace" uniqueness="unique">
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="RaceType" tag="NPC"/>
    <tag group="SubRace" tag="r5CSumUnd"/>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtNecrotic"/>
      <autotag group="RanAttOver" tag="aDEX"/>
      <autotag group="DamageOver" tag="aDEX"/>
      <autotag group="wProperty" tag="Spell"/>
      <assignval field="livename" value="Grave Bolt"/>
      <assignval field="wDieSize" value="4"/>
      <assignval field="wDieCount" value="2"/>
      <assignval field="sbName" value="Grave Bolt"/>
      <assignval field="wRangeNorm" value="150"/>
      </bootstrap>
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      herofield[tBonusHP].value -= 10]]></eval>
    </thing>
  <thing id="p5CSplOthGui" name="Otherworldly Guise" description="Select the your spellcasting ability to apply this. Select the appropriate number on the incremeter to choose which planes you chose for this spell:\n1 - Lower Planes\n2 - Upper Planes" compset="InPlay" uniqueness="unique">
    <fieldval field="pDuration" value="1 minute"/>
    <fieldval field="pMinimum" value="1"/>
    <fieldval field="pMaximum" value="2"/>
    <usesource source="5eTCoE"/>
    <tag group="OthAdjCat" tag="UserBot3rd" name="User 3rd Bottom Group" abbrev="User 3rd Bottom Group"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="Adjustment" tag="Attribute"/>
    <tag group="SpInfo" tag="sp5COthGui"/>
    <bootstrap thing="ab5CSplOthGu">
      <containerreq phase="First" priority="100"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="100"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <eval phase="Final" priority="50000" index="5"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      hero.childfound[ArmorClass].field[tAC].value += 2]]></eval>
    <eval phase="PostAttr" priority="600" index="3"><![CDATA[
~ If we're not enabled, get out now
doneif (field[pIsOn].value = 0)
doneif (field[pChosen].ischosen = 0)

var iAtr as string
var iDam as string
var iAtk as string
var iRng as string

iAtr = field[pChosen].chosen.tagids[SplAttr.?,""]
iDam = replace(iAtr,"SplAttr","DamageOpt",0)
iAtk = replace(iAtr,"SplAttr","MelAttOpt",0)
iRng = replace(iAtr,"SplAttr","RanAttOpt",0)

foreach pick in hero from BaseWep
  perform eachpick.assignstr[iDam]
  perform eachpick.assignstr[iAtk]
  perform eachpick.assignstr[iRng]
  nexteach]]></eval>
    <eval phase="First" index="4">doneif (field[pIsOn].value = 0)

if (field[pAdjust].value = 1) then 
  perform hero.assign[DamageImm.dtFire]
  perform hero.assign[DamageImm.dtPoison]
  perform hero.assign[CondImm.pcnPoison]
elseif (field[pAdjust].value = 2) then 
  perform hero.assign[DamageImm.dtRadiant]
  perform hero.assign[DamageImm.dtNecrotic]
  perform hero.assign[CondImm.pcnCharmed]
endif</eval>
    </thing>
  <thing id="ab5CSplOthGu" name="Otherworldly Guise" compset="Ability">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="SpInfo" tag="sp5COthGui"/>
    </thing>
  </document>
