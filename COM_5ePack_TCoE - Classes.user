<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cfg5C1WthWrd" name="One with the Word" compset="Configure" uniqueness="unique">
    <tag group="Helper" tag="SpCountLev"/>
    <tag group="Helper" tag="SplMayExcd"/>
    <eval phase="Final" priority="50000" index="3"><![CDATA[    doneif (hero.childfound[c5CWizOneWth].field[actUser].value = 0)
    doneif (field[cfgMaxSp1].value = field[cfgLeftSp1].value)
    doneif (tagis[Helper.Disable] <> 0)

  var searchexpr as string
  var otherexpr as string
  var blep as number

  searchexpr = "("
  
  foreach pick in hero from BaseSpell where "hasagent.cfg5C1WthWrd"
    if (blep > 0) then
      searchexpr &= " | " 
     endif
    searchexpr &= eachpick.tagids[thingid.?]
    blep += 1
   perform eachpick.assign[Hide.Spell]
   nexteach

  searchexpr &= ")"
  otherexpr = searchexpr
  searchexpr &= " & portal.ClsBook"
  otherexpr &= " & Helper.Memorized"

  foreach pick in hero from BaseSpell where searchexpr
      eachpick.field[sNameMod].text = "Lost"
      perform eachpick.assign[Hide.Spell]
  nexteach

  foreach pick in hero from BaseSpell where otherexpr
      eachpick.field[sNameMod].text = "Lost from spellbook"
  nexteach]]></eval>
    <eval phase="Final" priority="50001"><![CDATA[      ~ If not disabled get out now!
      doneif (tagis[Helper.Disable] <> 0)

field[cfgAllwSp1].text &= " & ("

var blep as number

  foreach pick in hero from BaseSpell where "portal.ClsBook & !Hide.Spell"
    if (blep > 0) then
      field[cfgAllwSp1].text &= " | " 
      endif
    field[cfgAllwSp1].text &= eachpick.tagids[thingid.?]
    blep += 1
  nexteach

field[cfgAllwSp1].text &= ")"]]></eval>
    </thing>
  <thing id="c5CWizOneWth" name="One with the Word" description="While the Awakened Spellbook is on your person, your Intelligence (Arcana) checks are made with advantage.\nAdditionally, if you take damage while your spellbook&apos;s mind is manifested, you can prevent all of that damage with a reaction. This reaction dismisses the mind, and you must roll 3d6. The spellbook temporarily loses spells with a total number of spell levels equal to or greater than the total number rolled. You choose these spells. For example, a total roll of 10 could be covered by losing a 5th-level spell, a 4th-level spell, and a 1st-level spell. If your spellbook does not have enough spells to cover the cost, you drop to 0 hit points.\nYou cannot cast these spells while they are lost, even if you find them in another spellbook or on a scroll. Once you complete 1d6 long rests, the spells reappear in your spellbook.\nYou can only use this reaction once per long rest.\n\n{b}Hero Lab Note:{/b} Use the In-Play tab to note the total number of spell levels lost by using this ability. This will open the One with the Word tab, where you can select which spells were lost. At the end of your 1d6 long rests, you can delete those spells from that tab and set the number back to zero." compset="ClSpecial" summary="Reaction to negate damage at the cost of spells.">
    <fieldval field="actUserMin" value="0"/>
    <fieldval field="actUserMax" value="18"/>
    <fieldval field="actIncrNam" value="Total spell levels lost:"/>
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="abAction" tag="Reaction"/>
    <bootstrap thing="cfg5C1WthWrd">
      <containerreq phase="First" priority="496"><![CDATA[fieldval:actUser > 0]]></containerreq>
      </bootstrap>
    <eval phase="First"><![CDATA[ 
      ~ If disabled get out now!
      doneif (tagis[Helper.Disable] <> 0)
      doneif (field[actUser].value = 0)
      doneif (hero.tagcount[Classes.Wizard] < 14)

    hero.childfound[cfg5C1WthWrd].field[cfgMaxSp1].value += field[actUser].value
    hero.childfound[cfg5C1WthWrd].field[cfgSpell1].text = "spells (total levels) lost"]]></eval>
    <eval phase="Final" index="2"><![CDATA[

      ~ If disabled get out now!
      doneif (tagis[Helper.Disable] <> 0)
      doneif (hero.tagcount[Classes.Wizard] < 14)


      #situational[hero.child[skArcana], "Advantage while your Awakened Spellbook is on your person.", field[thingname].text]]]></eval>
    </thing>
  <thing id="c5CWizOrdScr" name="Order of Scribes" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="ProductId" tag="Wizards" name="Wizards of the Coast, LLC" abbrev="Wizards of the Coast, LLC"/>
    <tag group="SpecSource" tag="cHelpWiz" name="Wizard" abbrev="Wizard"/>
    <tag group="abCategory" tag="WizArcTrad" name="Wizard Arcane Tradition" abbrev="Wizard Arcane Tradition"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CWizOneWth">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CWizWzQuil">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CWizAwkSpl">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CWizManMnd">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CWizMstScr">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    </thing>
  <thing id="c5CWizWzQuil" name="Wizardly Quill" description="You can use a bonus action to create a Tiny, magical quill in your free hand. It provides these benefits:\n• The quill needs no ink, and instead produces its own ink in a color of your choice on the writing surface.\n• The time you have to spend to copy a spell into your spellbook now equals 2 minutes per spell level, as long as you&apos;re using the quill for the transcription.\n• You can use a bonus action to wave the quill over anything you&apos;ve written with it, so long as the writing is within 5 feet of you. This erases the writing." compset="ClSpecial" summary="Receive a magical quill that produces its own ink.">
    <tag group="abAction" tag="Bonus"/>
    </thing>
  <thing id="c5CWizAwkSpl" name="Awakened Spellbook" description="You&apos;ve awakened an arcane intelligence in your spellbook. While holding the book, you gain these benefits:\n• You can use the book as your spellcasting focus for your wizard spells.\n• When you cast a wizard spell using a spell slot, you can replace the damage type of that spell with the type from another spell in your spellbook for that specific  casting of the spell. The latter spell must be of the same level as the spell slot you expend.\n• When you cast a wizard spell as a ritual, you can use the spell&apos;s casting time instead of the additional ten minutes. Once you&apos;ve used this feature, you must complete a long rest before doing so again." compset="ClSpecial" summary="You have a special spellbook with unique benefits.">
    <fieldval field="trkMax" value="1"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="None"/>
    <tag group="Usage" tag="LongRest"/>
    </thing>
  <thing id="c5CWizManMnd" name="Manifest Mind" description="You can use a bonus action to call forth the mind of your spellbook while you are carrying the book. It appears as a Tiny spectral object, hovering in an open space within 60 feet of you. The intangible manifestation doesn&apos;t occupy its space, and gives off 10 feet of dim light. \nWhile the mind is manifested, it can hear and see, and has 60 feet of darkvision. It can telepathically share what it hears and sees with you (no action needed).\nWhen you cast a wizard spell on your turn, you can cast it as if you are occupying its space and using its senses. You can do this a number of times equaling your proficiency bonus, and you regain all spent uses of this feature when you complete a long rest.\nThe manifestation ends if it is more than 300 feet away from you, if it is dispelled, if the Awakened Spellbook is destroyed, if you die, or if you use a bonus action to dismiss it.\nOnce you&apos;ve caused this manifestation, you cannot do so again until you complete a long rest. You can also expend any spell slot to do it again." compset="ClSpecial" summary="Bonus action to manifest the mind of your spellbook.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abAction" tag="Bonus"/>
    <eval phase="PostAttr">field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value</eval>
    </thing>
  <thing id="c5CWizMstScr" name="Master Scrivener" description="When you complete a long rest, you can touch your magical quill to a blank piece of parchment or paper to create a magic scroll. Your Awakened Spellbook must be within 5 feet of you. The spell must be from that spellbook, be 1st or 2nd level, and must have a casting time of 1 action. The spell counts as 1 level higher than normal once it is on the scroll.\nYou can cast the spell from the scroll as an action. The scroll is unintelligible to anyone but you. The spell vanishes from the scroll when it&apos;s cast or when you complete your next long rest, whichever happens first.\nYou are also practiced in crafting spell scrolls. The gold and time you must spend to make them is halved so long as you use your Wizardly Quill in their crafting." compset="ClSpecial" summary="Create temporary scrolls.">
    <fieldval field="actName" value="Scroll Made?"/>
    <tag group="Usage" tag="5CUse"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="Final"><![CDATA[

    if ( field[abilActive].value <> 0 ) then
      field[usrCandid1].text = "component.BaseSpell & portal.ClsBook & (sLevel.1 | sLevel.2) & sCastTime.Action1 &!Hide.Spell"
      field[trkMax].value = 1
      endif]]></eval>
    </thing>
  <thing id="c5CRgrSwrmkp" name="Swarmkeeper" description="You are surrounded by a swarm of nature spirits that assists you in combat." compset="CustomSpec" uniqueness="unique">
    <comment>Supersedes UA Ranger.</comment>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpRgC" name="Ranger (Sept 2016)" abbrev="Ranger (Sept 2016)"/>
    <tag group="SpecSource" tag="cHelpRgr" name="Ranger" abbrev="Ranger"/>
    <tag group="abCategory" tag="RgrArchety" name="Ranger Archetype" abbrev="Ranger Archetype"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <bootstrap thing="c5CRgrSwWrit">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="c5CRgrSwMigh">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="c5CRgrSwDism">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CRgrSwrmMg">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CRgrSwGath">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CRgrSwrmMg" name="Swarmkeeper Magic" description="You learn {i}mage hand{/i} if you didn&apos;t already know it. The hand takes the shape of your swarming spirits. You learn additional spells at certain levels in the class, shown in the table blow. The spell counts as a ranger spell, but it doesn&apos;t count against the total number of ranger spells known. \n\n{b}Swarmkeeper Spells{/b}\n{b}Ranger Level Spell{/b}\n3rd                    {i}faerie fire{/i}\n5th                    {i}web{/i}\n9th                    {i}gaseous form{/i}\n13th                  {i}arcane eye{/i}\n17th                  {i}insect plague{/i}" compset="ClSpecial" summary="Learn new swarmkeeper spells as you level.">
    <bootstrap thing="spFaerFire">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spWeb">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spGaseForm">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spArcaEye">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spInsePlag">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spMageHand">
      <autotag group="Helper" tag="Cantrip"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    </thing>
  <thing id="c5CRgrSwWrit" name="Writhing Tide" description="You can use a bonus action to cause the swarm to coalesce and carry you. For 1 minute, or until you&apos;re incapacitated, you gain a flying speed of 10 feet and can hover. \n\nYou can use this feature a number of times equaling your proficiency bonus, and regain all spent uses of it at the end of a long rest." compset="ClSpecial" summary="Bonus action to gain 10 ft. hovering flight for 1 minute.">
    <fieldval field="abDuration" value="1"/>
    <fieldval field="actName" value="Writhing Tide active? (1 minute)"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Bonus"/>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="10"/>
      </bootstrap>
    <eval phase="PostAttr">field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value</eval>
    </thing>
  <thing id="c5CRgrSwMigh" name="Mighty Swarm" description="Your Gathered Seam is more powerful in these ways:\n\n• The damage of Gathered Swarm increases to 1d8\n• When a creature fails its saving throw versus being moved by Gathered Swarm, you can also cause it to be knocked prone.\n• The gathered swarm provides you half cover until the beginning of your next turn whenever it moves you." compset="ClSpecial" summary="Swarm damage increases, knocks enemies prone, provides you cover.">
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CRgrSwDism" name="Swarming Dismissal" description="When you take damage, you can take a reaction to merge into your swarm. You gain resistance to that damage, vanish into your swarm, and then teleport. You reappear with your swarm in an open space you can see, within 30 feet of you.\n\nYou can use this feature a number of times equal to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Reaction to resist damage and teleport.">
    <fieldval field="abRange" value="30"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="PostAttr">field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value</eval>
    </thing>
  <thing id="c5CRgrSwGath" name="Gathered Swarm" description="A swarm of incorporeal nature spirits surrounds you, remaining in your space with you while you&apos;re alive. You choose its appearance. \n\nOnce on each of your turns, you can cause the swarm to help you in once of these ways, immediately after you hit a creature with an attack:\n• The target of the attack suffers 1d6 piercing damage from the swarm.\n• The target of the attack must make a Strength save versus your spell save DC. On a failure, it is moved up to 15 feet horizontally in a direction of your choice.\n• The swarm moves you 5 feet horizontally in a direction of your choice." compset="ClSpecial" summary="Your swarm can damage or push enemies, or move you.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="abSave" tag="aSTR"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[      if (#levelcount[Ranger] >= 11) then
        field[abText].text = "1d8"
      else
        field[abText].text = "1d6"
        endif]]></eval>
    </thing>
  <thing id="c5CPalWatch" name="Oath of the Watchers" description="Oath of the Watchers paladins are bound to defend mortal realms from extraplanar threats.\n\n{b}Tenets of the Watchers{/b}\n\n{b}{i}Vigilance..{/b} {/i}The enemies you face are powerful, cunning, and tricky. Always be on guard for their foul play.\n\n{b}{i}Loyalty.{/b} {/i}Stay true to your friends and your duty. Have no dealings with fiends, no matter how friendly they seem.\n\n{b}{i}Discipline.{/b} {/i}You are the guardian against the dark beyond. Your blade and mind must both be sharp to survive what terrors await you.\n\n\n{b}Oath of the Watchers Spells{/b}\nYou gain oath spells at the paladin levels listed below.\n\n{b}Level   Spells{/b}\n{b}3rd{/b}       {i}alarm{/i},{i} detect magic{/i}\n{b}5th{/b}       {i}moonbeam{/i},{i} see invisibility{/i}\n{b}9th{/b}       {i}counterspell{/i},{i} nondetection{/i}\n{b}13th{/b}     {i}aura of purity{/i},{i} banishment{/i}\n{b}17th{/b}     {i}hold monster{/i},{i} scrying{/i}" compset="CustomSpec" summary="Your oath binds you to the duties of vigilance, loyalty, and discipline." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpPal" name="Paladin" abbrev="Paladin"/>
    <tag group="abCategory" tag="PalSacOath" name="Paladin Sacred Oath" abbrev="Paladin Sacred Oath"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <bootstrap thing="c5CPalAbjExt">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CPalAurSnt">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="c5CPalVigReb">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CPalMrtBlw">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="spAlarm">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spDeteMagi">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spMoonbeam">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spSeeInvi">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="sp5CCounte">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spNondetec">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="sp5CAurPur">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spBanishme">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spHoldMons">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="spScrying">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpPal"/>
      </bootstrap>
    <bootstrap thing="c5CPalWatWil">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CPalWatWil" name="Channel Divinity: Watcher&apos;s Will" description="You can use an action to pick a number of creatures (equal to your Charisma modifier, minimum 1) visible to and within 30 feet of you. For the next minute, you and the chosen creatures have advantage on Intelligence, Wisdom, and Charima saves." compset="ClSpecial" summary="Grant advantage on Int, Wis, and Cha saves.">
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="abDuration" tag="Minute" name="Minute" abbrev="min"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Action" name="Action" abbrev="Act"/>
    <tag group="abCategory" tag="PalChanDiv" name="Paladin Channel Divinity" abbrev="Paladin Channel Divinity"/>
    <tag group="User" tag="Activation"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       var CMod as number
       CMod = #attrbonus1[aCHA]
       CMod = maximum(1,CMod)

       field[abText].text = CMod & " creature"

       doneif (CMod = 1)
       
       field[abText].text &= "s"]]></eval>
    </thing>
  <thing id="c5CPalAbjExt" name="Channel Divinity: Abjure the Extraplanar" description="You can use an action to present your holy symbol to all aberrations, celestials, elementals, fey, and fiends within 30 feet of you. Such a creature, if it is able to hear you, must make a Wisdom save. On a failure, it is turned for 1 minute or until it is damaged.\n\nA turned creature must spend its turns moving as far away from you as possible, and it cannot willingly end its turn within 30 feet of you. The only actions it can take are to Dash or to escape an effect that is preventing its movement. If it cannot move any further, it can take the Dodge action." compset="ClSpecial" summary="Extraplanar creatures that can see or hear you within 30 feet must make Wis save or flee.">
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="abCategory" tag="PalChanDiv" name="Paladin Channel Divinity" abbrev="Paladin Channel Divinity"/>
    <tag group="abDuration" tag="Minute" name="Minute" abbrev="min"/>
    <tag group="abRange" tag="Feet" name="Feet" abbrev="ft."/>
    <tag group="abSave" tag="aWIS" name="Wisdom" abbrev="Wis"/>
    <tag group="StandardDC" tag="aCHA" name="Charisma" abbrev="Charisma"/>
    <tag group="abAction" tag="Action" name="Action" abbrev="Act"/>
    </thing>
  <thing id="c5CPalAurSnt" name="Aura of the Sentinel" description="If you&apos;re not incapacitated, you emit an aura of alertness. You and any creatures of your choice within 10 feet of you gain a bonus to your initiative rolls equal to your proficiency bonus.\n\nThe range of this aura becomes 30 feet when you reach level 18." compset="ClSpecial" summary="You and friendly creatures in range add your proficiency to initiative.">
    <fieldval field="abRange" value="10"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Feet" name="Feet" abbrev="ft."/>
    <tag group="LvNamePar" tag="IncRange" name="Include Range text" abbrev="Include Range text"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      if (field[xAllLev].value >= 18) then
        field[abRange].value += 20
        endif]]></eval>
    <eval phase="PostAttr" index="2"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

hero.childfound[Initiative].field[Bonus].value += hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CPalVigReb" name="Vigilant Rebuke" description="Whenever you or a creature visible to and within 30 feet of you makes a successful Intelligence, Wisdom, or Charisma save, you can use a reaction to deal 2d8 + your Charisma modifier force damage to the creature that caused them to make that save." compset="ClSpecial" summary="Reaction to deal 2d8+CHA damage against a creature that forced a save.">
    <fieldval field="abRange" value="30"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       var CMod as number
       var SgdC as string

       CMod = hero.childfound[aCHA].field[aModBonus].value
       if (CMod < 0) then
         SgdC = ""
       else
         SgdC = "+"   
       endif

       field[abText].text = "2d8" & SgdC & CMod & " force"]]></eval>
    </thing>
  <thing id="c5CPalMrtBlw" name="Mortal Bulwark" description="You can use a bonus action to gain these benefits for 1 minute:\n\n•  You have 120 ft. of truesight\n•  Your attack rolls against aberrations, celestials, elementals, fey, and fiends are made with advantage.\n•  When you successfully deal damage to a creature by hitting it with an attack roll, you can force it to make a Charisma save versus your spell save DC. On a failure, the creature is magically banished to its home plane, unless it&apos;s already there. On a successful saving throw, the creature cannot be banished by this feature for the next 24 hours. \n\nOnce you&apos;ve used this feature, you can regain your use of it by either expending a 5th-level spell slot or completing a long rest." compset="ClSpecial" summary="Bonus action to gain Truesight, advantage on extraplanar foes, banishment for 1 minute.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="User" tag="Activation" name="Activation" abbrev="Activation"/>
    <tag group="User" tag="Tracker" name="tracker" abbrev="tracker"/>
    <tag group="DamageRes" tag="dcAll" name="All damage" abbrev="All damage"/>
    <tag group="abSave" tag="aCHA"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Usage" tag="LongRest" name="/long rest" abbrev="/long rest"/>
    <tag group="abDuration" tag="Minute"/>
    <bootstrap thing="raTruesigh">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="120"/>
      </bootstrap>
    </thing>
  <thing id="io5CAtfArcHlm" name="Arcane Armor Helm" description="The helm from the Artificer Armorer&apos;s Arcane Armor." compset="Wondrous">
    <tag group="Helper" tag="EquipMag"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="EquipAvail"/>
    </thing>
  <thing id="io5CAtfArcBts" name="Arcane Armor Boots" description="The boots from the Artificer Armorer&apos;s Arcane Armor." compset="Wondrous">
    <tag group="Helper" tag="EquipMag"/>
    <tag group="Helper" tag="EquipAvail"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="Helper"/>
    </thing>
  <thing id="c5CAtfArmor" name="Armorer" description="An Armorer specializes in modifying armor to act as a conduit for their magic, for attack or defense.\n\n{b}Tools of the Trade.{/b} You gain proficiency with smith’s tools, assuming you don’t already have it. If you do, you gain proficiency in another artisan&apos;s tool of your choice. You also become proficient with heavy armor." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="SpecSource" tag="cHelpAtf" name="Artificer" abbrev="Artificer"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CAtfArmSpl">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CAtfArcArm">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CAtfPrfArm">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cExtraAtt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="c5CAtfArnMdi">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="gTooSmith">
      <autotag group="Hide" tag="Tool"/>
      </bootstrap>
    <bootstrap thing="c5CAtfArmMod">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <eval phase="PreLevel" priority="2400"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     perform hero.childfound[cHelpAtf].assign[ArmProfGrp.ArmorHeavy]

     if (hero.tagcount[ProfTool.gTooSmith] = 0) then
       perform hero.childfound[gTooSmith].assign[Proficienc.Tool]
       perform hero.childfound[gTooSmith].assign[Helper.TrainTool]
       perform hero.assign[ProfTool.gTooSmith]
     elseif (hero.tagcount[ProfTool.gTooSmith] <> 0) then
       hero.childfound[cHelpAtf].field[cToolMax].value += 1
     endif]]></eval>
    </thing>
  <thing id="c5CAtfArmSpl" name="Armorer Spells" description="Starting at 3rd level, you always have certain spells prepared after you reach particular levels in this class, as shown in the Armorer Spells table. These spells count as artificer spells for you, but they don’t count against the number of artificer spells you prepare.\n\n{b}Armorer Spells{/b}\n{b}Artificer Level Spell{/b}\n3rd                   {i}magic missile, thunderwave{/i}\n5th                   {i}mirror image, shatter{/i}\n9th                   {i}hypnotic pattern, lightning bolt{/i}\n13th                 {i}fire shield, greater invisibility{/i}\n17th                 {i}passwall, wall of force{/i}" compset="ClSpecial" summary="Gain new spells as an Armorer.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <bootstrap thing="spMagiMiss">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spMirrImag">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spGreaInvi">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spPasswall">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spHypnPatt">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spFireShie">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spWallForc">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spLighBolt">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spShatter">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    <bootstrap thing="spThunderw">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpAtf"/>
      </bootstrap>
    </thing>
  <thing id="c5CAtfArcArm" name="Arcane Armor" description="With your smith&apos;s tools in hand, you can use an action to turn a suit of armor you&apos;re wearing into Arcane Armor. You have these benefits while wearing the armor:\n\n• You can ignore any Strength requirements of the armor\n• The armor can be your spellcasting focus fofr your artificer spells.\n• The armor attaches to you, and cannot be removed against your will. It expands to cover your whole body, though the helmet is retractable or deployable with a bonus action. Any limbs you may be missing are replaced by the armor, and it functions identically to those limbs.\n• You can use an action to doff or done the armor. It continues to be your armor until you don another suit, or until you die." compset="ClSpecial" summary="Turn a suit of armor into your Arcane Armor.">
    <fieldval field="usrCandid1" value="component.BaseArmor &amp; !EquipType.Shield &amp; !Helper.Natural"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Custom" tag="ArcArm" name="ArcArm" abbrev="ArcArm"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <eval phase="Final"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now

     perform field[usrChosen1].chosen.delete[ArmorMinSt.?]
     perform field[usrChosen1].chosen.assign[Custom.ArcArm]]]></eval>
    <eval phase="Render" priority="99990" index="2"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     field[usrChosen1].chosen.field[sbName].text = "Arcane Armor (" & field[usrChosen1].chosen.field[livename].text & ")"
     field[usrChosen1].chosen.field[livename].text = "Arcane Armor (" & field[usrChosen1].chosen.field[livename].text & ")"]]></eval>
    </thing>
  <thing id="c5CAtfArmMod" name="Armor Model" description="You can customize your armor, choosing between either Guardian or Infiltrator armor. Each model gives you special benefits while worn, including a special weapon. Attacks you make with that weapon can use your Intelligence modifier, rather than Strength or Dexterity, for the attack and damage rolls. With your smith&apos;s tools in hand, you can switch models whenever you complete a short or long rest.\n\n{i}{b}Guardian:{/b}{/i}\n{b}Thunder Gauntlets.{/b} Each gauntlet on the armor is a simple melee weapon. When you aren&apos;t holding anything with it, a gauntlet deals 1d8 thunder damage on a hit. Additionally, a creature hit by it has disadvantage on attack rolls against targets other than you until the beginning of your next turn.\n{b}Defensive Field.{/b} You can use a bonus action to gain temporary hit points equal to your level in this class, replacing any temporary hit points you already have. You lose these hit points if you doff the armor. You can use this feature a number of times equal to your proficiency bonus, and you regain all spent uses of it when you complete a long rest.\n\n{i}{b}Infiltrator:{/b}{/i}\n{b}Lightning Launcher.{/b} A gemlike node appears on either one of your armored fists or the chest of your armor, your choice. It is a simple ranged weapon, with 90 ft//300 ft. range. It deals 1d6 lightning damage on a hit. And once on each of your turn, you can deal an extra 1d6 lightning damage when you hit a target with it.\n{b}Powered Steps.{/b} Your walking speed is increased by 5 feet.\n{b}Dampening Field.{/b} You have advantage on Dexterity (Stealth) checks. If the armor normally imposes disadvantage on those rolls for you, the disadvantage and the advantage cancel each other out as usual." compset="ClSpecial" summary="Turn a suit of armor into your Arcane Armor.">
    <arrayval field="usrArray" index="0" value="Guardian"/>
    <arrayval field="usrArray" index="1" value="Infiltrator"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Helper" tag="ActivMenu"/>
    <bootstrap thing="w5CAtfThnGnt">
      <containerreq phase="First" priority="100">fieldval:abValue=1</containerreq>
      </bootstrap>
    <bootstrap thing="w5CAtfLigLau">
      <containerreq phase="First" priority="100">fieldval:abValue=2</containerreq>
      </bootstrap>
    <bootstrap thing="PoolWlkBls">
      <containerreq phase="First" priority="500">fieldval:abValue=1</containerreq>
      <autotag group="Value" tag="9"/>
      <assignval field="livename" value="Defensive Field"/>
      </bootstrap>
    <bootstrap thing="c5CAtfDefFie">
      <containerreq phase="First" priority="500">fieldval:abValue=1</containerreq>
      </bootstrap>
    <bootstrap thing="w5CAtfThnGnt">
      <containerreq phase="First" priority="100">fieldval:abValue=1</containerreq>
      </bootstrap>
    <bootstrap thing="c5CAtfGrdPrf">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abValue=1 & count:Classes.ArtificerR >=15]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CAtfInfPrf">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abValue=2 & count:Classes.ArtificerR >=15]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="99" index="2"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now

     ~ only proceed if we have selected Infiltrator
     doneif (field[usrIndex].value <> 1)

     ~ if no armor has been chosen, get out
     doneif (hero.child[c5CAtfArcArm].field[usrChosen1].ischosen = 0)

     ~ set our focus to the chosen armor
     perform hero.child[c5CAtfArcArm].field[usrChosen1].chosen.setfocus

     ~ check if the armor is equipped
     if (focus.field[gIsEquip].value = 1) then
        field[abValue].value = 2
        hero.childfound[Speed].field[tSpeed].value += 5

        if (focus.tagcount[Helper.StealthDis] <> 0) then
           perform focus.delete[Helper.StealthDis]
        else
           #situational[hero.child[skStealth], "Advantage", "Infiltrator Arcane Armor"]
       endif
     endif]]></eval>
    <eval phase="Final" priority="500" index="3"><![CDATA[
     doneif (field[abValue].value <> 1)

     ~ Add temp HP
     var temphp as number
     temphp = hero.tagcount[Classes.ArtificerR]
     hero.findchild[TempHpPool,"Value.9"].field[thpMinAllw].value = temphp
     hero.findchild[TempHpPool,"Value.9"].field[thpMaxAllw].value = temphp]]></eval>
    <eval phase="First" priority="99"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)
     ~ If we're not enabled, get out now

     ~ only proceed if we have selected Guardian
     doneif (field[usrIndex].value <> 0)

     ~ if no armor has been chosen, get out
     doneif (hero.child[c5CAtfArcArm].field[usrChosen1].ischosen = 0)

     ~ set our focus to the chosen armor
     perform hero.child[c5CAtfArcArm].field[usrChosen1].chosen.setfocus

     ~ check if the armor is equipped
     if (focus.field[gIsEquip].value = 1) then
        field[abValue].value = 1
     endif]]></eval>
    </thing>
  <thing id="w5CAtfLigLau" name="Lightning Launcher" description="Once on each of your turn, you can deal an extra 1d6 lightning damage when you hit a target with this weapon." compset="Weapon">
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="6"/>
    <fieldval field="wRangeNorm" value="90"/>
    <fieldval field="wRangeLong" value="300"/>
    <usesource source="5eTCoE"/>
    <tag group="DamageType" tag="dtLightnin"/>
    <tag group="wProfReq" tag="Simple"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="DamageOpt" tag="aINT"/>
    <tag group="RanAttOpt" tag="aINT"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="Helper" tag="NoSelect"/>
    <eval phase="Final" priority="99999999">perform delete[Helper.AllEqBoth]
perform delete[Helper.AllEqMain]
perform delete[Helper.AllEqOff]</eval>
    <eval phase="Final" index="2"><![CDATA[
    doneif (hero.tagcount[Classes.ArtificerR] >= 9)

    perform assign[Helper.EquipMag]]]></eval>
    </thing>
  <thing id="w5CAtfThnGnt" name="Thunder Gauntlet" description="When you aren&apos;t holding anything with the hand this gauntlet is on, you can use it to make attacks. A creature hit by it has disadvantage on attack rolls against targets other than you until the beginning of your next turn." compset="Weapon">
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="8"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="DamageOpt" tag="aINT"/>
    <tag group="MelAttOpt" tag="aINT"/>
    <tag group="DamageType" tag="dtThunder"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="Helper" tag="NoSelect"/>
    <tag group="wProfReq" tag="Simple"/>
    <eval phase="Final"><![CDATA[
    doneif (hero.tagcount[Classes.ArtificerR] >= 9)

    perform assign[Helper.EquipMag]]]></eval>
    </thing>
  <thing id="c5CAtfDefFie" name="Defensive Field" description="You can use a bonus action to gain temporary hit points equal to your level in this class, replacing any temporary hit points you already have. You lose these hit points if you doff your Arcane Armor. You can use this feature a number of times equal to your proficiency bonus, and you regain all spent uses of it when you complete a long rest." compset="CustomSpec" uniqueness="unique">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr"><![CDATA[field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value
field[abText].text = "Bonus action"]]></eval>
    </thing>
  <thing id="c5CAtfArnMdi" name="Armor Modifications" description="Your Arcane Armor now counts as separate items for the purposes of infusing items. It includes the armor (the chest piece), boots, a helm, and the special weapon(s) of the armor. Each item can bear an infusion, and the infusions transfer if you change your armor&apos;s model. Additionally, your total number of active infusions increases by 2. However, those extra two infusions must be used on parts of your Arcane Armor." compset="ClSpecial" summary="Your arcane armor is now multiple pieces for infusing.">
    <tag group="Custom" tag="ArcArmWep"/>
    <bootstrap thing="io5CAtfArcHlm">
      <containerreq phase="First" priority="450"><![CDATA[count:Classes.ArtificerR >=9]]></containerreq>
      </bootstrap>
    <bootstrap thing="io5CAtfArcBts">
      <containerreq phase="First" priority="450"><![CDATA[count:Classes.ArtificerR >=9]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="500"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)


     hero.childfound[cfg5CAtfInfus].field[cfgMax2].value += 2]]></eval>
    </thing>
  <thing id="c5CAtfPrfArm" name="Perfected Armor" description="Based on the model of your Arcane Armor, you gain one of these benefits:\n\n{i}{b}Guardian:{/b}{/i}\nWhen a Huge or smaller creature visible to you ends its turn within 30 feet of you, you can take a reaction to magically force that creature to make a Strength save versus your spell save DC. On a failure, it&apos;s pulled up to 25 feet directly toward an open space. If this pull puts it within 5 feet of you, you can make a melee weapon attack against it as part of this reaction.\n\nYou can use this reaction a number of times equal to your proficiency bonus, and regain all spent uses of it when you complete a long rest.\n\n{i}{b}Infiltrator:{/b}{/i}\nAny creature that takes lightning damage from your armor&apos;s Lightning Launcher shines with magical dim light in a 5-foot radius until the beginning of your next turn. For that time, it has disadvantage on attack rolls against you. Additionally, the next attack roll against it has advantage, and it takes an extra 1d6 lightning damage if that attack hits." compset="ClSpecial" summary="Grant greater benefits to your arcane armor.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CAtfInfPrf" name="Perfected Armor: Infiltrator" description="Any creature that takes lightning damage from your armor&apos;s Lightning Launcher shines with magical dim light in a 5-foot radius until the beginning of your next turn. For that time, it has disadvantage on attack rolls against you. Additionally, the next attack roll against it has advantage, and it takes an extra 1d6 lightning damage if that attack hits." compset="CustomSpec" uniqueness="unique">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    </thing>
  <thing id="c5CAtfGrdPrf" name="Perfected Armor: Guardian" description="When a Huge or smaller creature visible to you ends its turn within 30 feet of you, you can take a reaction to magically force that creature to make a Strength save versus your spell save DC. On a failure, it&apos;s pulled up to 25 feet directly toward an open space. If this pull puts it within 5 feet of you, you can make a melee weapon attack against it as part of this reaction.\n\nYou can use this reaction a number of times equal to your proficiency bonus, and regain all spent uses of it when you complete a long rest." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="25"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="aSTR"/>
    <tag group="StandardDC" tag="aINT"/>
    <eval phase="PostAttr">field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value</eval>
    </thing>
  <thing id="c5CSorAbMnd" name="Aberrant Mind" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpSor" name="Sorcerer" abbrev="Sorcerer"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CSorPsiSor">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CSorPsyDef">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CSorRevFls">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CSorPsiSpl">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cfg5CPsiSpl"></bootstrap>
    <bootstrap thing="c5CSorWrpImp">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="c5CSorTlSpch">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    </thing>
  <thing id="c5CSorTlSpch" name="Telepatchic Speech" description="You can use a bonus action to form a telepathic link between your mind and another. Choose one creature visible to and within 30 feet of you. The two of you can speak telepathically to each other while within a number of miles equalling your Charisma modifier (a minimum of 1 mile). You must speak mentally in a language you both know.\n\nThe connection lasts for a number of minutes equal to your sorcerer level. If you die, become incapacitated, or use this ability to link with a different creature, the connection with the first creature ends." compset="ClSpecial" summary="Bonus action to create a telepathic link with a creature.">
    <fieldval field="abRange" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="abRange" tag="Mile"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       var Miles as number
       var Minutes as number
       var Plural1 as string
       var Plural2 as string
 
       Miles = maximum(1,#attrbonus1[aCHA])
       Minutes = #levelcount[Sorcerer]
       Plural1 = ""

       if (Miles > 1) then
          Plural1 = "s"
          endif

       Plural2 = ""
       if (Minutes > 1) then
          Plural2 = "s"
          endif

       field[abDuration].value = Minutes
       field[abRange].value = Miles
       field[abText].text = Miles & " mile" & Plural1 & ", " & Minutes & " minute" & Plural2]]></eval>
    </thing>
  <thing id="c5CSorPsiSpl" name="Psionic Spells" description="You always have certain spells prepared after you reach particular levels in this class, as shown in the Psionic Spells table. These spells count as sorcerer spells for you, but they don’t count against the number of sorcerer spells you know.\n\nWhenever you gain another level in the sorcerer class, one of the spells gained from this feature can be replaced with another spell of the same level. The new spell must be from either the divination or an enchantment school, and must be from the sorcerer, warlock, or wizard spell list. Use the Psionic Spells tab to indicate if you&apos;re replacing the spell, then select the new one from the list.\n\n{b}Psionic Spells{/b}\n{b}Sorcerer Level Spell{/b}\n1st                     {i}arms of Hadar, dissonant whispers, mind sliver{/i}\n3rd                     {i}calm emotions, detect thoughts{/i}\n5th                     {i}hunger of Hadar, sending{/i}\n7th                     {i}black tentacles, summon aberration{/i}\n9th                     {i}telekinesis, telepathic bond{/i}" compset="ClSpecial" summary="Gain new spells as an psionic sorcerer.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    </thing>
  <thing id="cfg5CPsiSpl" name="Psionic Spells" compset="Configure" uniqueness="unique">
    <fieldval field="cfgAllwSp1" value="(Helper.Helper &amp; !Helper.Helper)"/>
    <fieldval field="cfgSpell1" value="Replacement Psionic Spells"/>
    <fieldval field="cfgObject1" value="Psionic Spells"/>
    <tag group="Helper" tag="ClsCastLev"/>
    <tag group="StandardDC" tag="aCHA"/>
    <bootstrap thing="c5CPsiArmsH">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 1]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiDissW">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 1]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiCalmE">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiDeteT">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiHungH">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiSendg">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiBlacT">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 7]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiSumAb">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 7]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiTeleB">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiTelek">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CPsiMindS">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 1]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="50000"><![CDATA[
    doneif (field[cfgMaxSp1].value = field[cfgLeftSp1].value)
    doneif (tagis[Helper.Disable] <> 0)


  var searchexpr as string
  var blep as number

  searchexpr = "("
  
  foreach pick in hero from BaseSpell where "hasagent.cfg5CPsiSpl"
    if (blep > 0) then
      searchexpr &= " | " 
     endif
    searchexpr &= eachpick.tagids[thingid.?]
    blep += 1
   nexteach

  searchexpr &= ") &!Helper.Cantrip"

  foreach pick in hero from BaseSpell where searchexpr
      perform eachpick.assign[Helper.Free]
      perform eachpick.assign[Helper.Known]
      perform eachpick.assign[SpellType.cHelpSor]
      eachpick.field[sNameMod].text = "Psionic"
  nexteach]]></eval>
    <eval phase="First" priority="250" index="2"><![CDATA[
    doneif (tagis[Helper.Disable] <> 0)
    field[cfgMaxSp1].value += #levelcount[Sorcerer]]]></eval>
    <eval phase="First" priority="505" index="3"><![CDATA[
    doneif (tagis[Helper.Disable] <> 0)
    field[cfgMaxSp1].value -= #levelcount[Sorcerer]]]></eval>
    <eval phase="Final" priority="50001" index="4"><![CDATA[
    doneif (field[cfgMaxSp1].value = field[cfgLeftSp1].value)
    doneif (tagis[Helper.Disable] <> 0)


  var searchexpr as string
  var blep as number

  searchexpr = "("
  
  foreach pick in hero from BaseSpell where "hasagent.cfg5CPsiSpl"
    if (blep > 0) then
      searchexpr &= " | " 
     endif
    searchexpr &= eachpick.tagids[thingid.?]
    blep += 1
   nexteach

  searchexpr &= ") & Helper.Cantrip"

  foreach pick in hero from BaseSpell where searchexpr
      perform eachpick.assign[Helper.Free]
      perform eachpick.assign[Helper.Cantrip]
      perform eachpick.assign[SpellType.cHelpSor]
      eachpick.field[sNameMod].text = "Psionic"
  nexteach]]></eval>
    </thing>
  <thing id="c5CPsiArmsH" name="1 - Arms of Hadar" description="Your Psionic Spells feature grants you the {i}Arms of Hadar{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the Arms of Hadar spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="sp5CArmHad">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[
  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 2)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.1"

  perform hero.childfound[cfg5CPsiSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiDissW" name="1 - Dissonant Whispers" description="Your Psionic Spells feature grants you the {i}dissonant whispers{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the dissonant whispers spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="sp5CDissW">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 2)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.1"

  perform hero.childfound[cfg5CPsiSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiCalmE" name="2 - Calm Emotions" description="Your Psionic Spells feature grants you the {i}calm emotions{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the calm emotions spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spCalmEmot">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 4)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.2"

  perform hero.childfound[cfg5CPsiSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiDeteT" name="2 - Detect Thoughts" description="Your Psionic Spells feature grants you the {i}detect thoughts{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the detect thoughts spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spDeteThou">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 4)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.2"

  perform hero.childfound[cfg5CPsiSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiHungH" name="3 - Hunger of Hadar" description="Your Psionic Spells feature grants you the {i}Hunger of Hadar{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the Hunger of Hadar spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="sp5CHungeH">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 6)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.3"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiSendg" name="3 - Sending" description="Your Psionic Spells feature grants you the {i}sending{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the sending spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spSending">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 6)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.3"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiBlacT" name="4 - Black Tentacles" description="Your Psionic Spells feature grants you the {i}black tentacles{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the black tentacles spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spBlacTent">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 8)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.4"

  perform hero.childfound[cfg5CPsiSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiSumAb" name="4 - Summon Aberration" description="Your Psionic Spells feature grants you the {i}summon aberration{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the summon aberration spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="sp5CSumAbr">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 8)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.4"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiTeleB" name="5 - Telepathic Bond" description="Your Psionic Spells feature grants you the {i}telepathic bond{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the telepathic bond spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spTeleBond">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 10)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.5"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiTelek" name="5 - Telekinesis" description="Your Psionic Spells feature grants you the {i}telekinesis{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a divination or enchantment spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the telekinesis spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="spTelekine">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 10)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"


  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.5"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CPsiMindS" name="0 - Mind Sliver" description="Your Psionic Spells feature grants you the {i}mind sliver{/i} cantrip. When you gain a level in the Sorcerer class, you may forget this cantrip and replace it with a divination or enchantment cantrip from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new cantrip from the menu on the Psionic Spells tab." compset="CustomSpec" summary="Have or replace the mind sliver cantrip." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CPsiSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CPsiSpl"/>
    <bootstrap thing="sp5CMndSlv">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Cantrip"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Psionic"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 2)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Divination | sSchool.Enchant) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.0"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CPsiSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="5CPsiSpRep" name="Replaced" compset="Simple">
    <tag group="Helper" tag="Helper"/>
    </thing>
  <thing id="c5CSorPsiSor" name="Psionic Sorcery" description="When you cast a 1st level or higher spell using your Psionic Spells feature, you can choose to spend a spell slot like normal or use sorcery points equalling the spell&apos;s level. If you use the sorcery points, you can ignore all verbal and somatic components of the spell. If a material component is consumed by the spell, however, you still need that material component. Otherwise you can also ignore the material component." compset="ClSpecial" summary="Spend sorcery points to cast psionic spells without components.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CSorPsyDef" name="Psychic Defenses" description="You have resistance to psychic damage, and your saves versus being charmed or frightened are made with advantage." compset="ClSpecial" summary="Psychic damage resistance and advantage on saves versus being frightened or charmed.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       #situational[hero.child[svAll], "Advantage versus being charmed or frightened", field[thingname].text]

       perform hero.assign[DamageRes.dtPsychic]]]></eval>
    </thing>
  <thing id="c5CSorRevFls" name="Revelation in Flesh" description="You can use a bonus action to spend 1 or more sorcery points to magically transform your body for 10 minutes. For every point spent, you can gain one of these benefits, which last for the duration of the transformation:\n\n•  You can see any invisbile creatures within 60 feet of you, assuming they are not behind total cover.\n•  You gain a flying speed equal to your walking speed, with the ability to hover. \n•  You gain a swimming speed equal to twice your walking speed, and become able to breathe underwater.\n•  Your body and anything you&apos;re wearing or carrying becomes pliable. You&apos;re able to move through spaces as narrow as 1 inch without squeezing. You can also use 5 feet of movement to escape nonmagical restraints or a grapple." compset="ClSpecial" summary="Bonus action to transform your body for sight and movement.">
    <fieldval field="actName" value="Body Transformed"/>
    <fieldval field="abDuration" value="10"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Activation"/>
    <tag group="abDuration" tag="Minute"/>
    <bootstrap thing="c5CSorRevSwm">
      <containerreq phase="First" priority="499"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CSorRevInv">
      <containerreq phase="First" priority="499"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CSorRevFly">
      <containerreq phase="First" priority="499"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CSorRevPli">
      <containerreq phase="First" priority="499"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CSorRevFly" name="Revelation in Flesh (Flight)" compset="CustomSpec" uniqueness="unique">
    <fieldval field="actName" value="Flight active (1 point)"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (field[abilActive].value = 0)

       var Speed as number
       var Flight as string

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)
       Speed *= 2

       Speed = maximum(hero.childfound[xFly].field[abValue].value,Speed)

       Flight = "Value." & Speed


       perform hero.childfound[xFly].delete[Value.?]
       perform hero.childfound[xFly].assignstr[Flight]]]></eval>
    </thing>
  <thing id="c5CSorRevSwm" name="Revelation in Flesh (Swim)" description="You are able to breath underwater and have a swim speed equal to twice your walking speed." compset="CustomSpec" uniqueness="unique">
    <fieldval field="actName" value="Swimming active (1 point)"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="xSwim">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (field[abilActive].value = 0)

       var Speed as number
       var Swim as string

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)
       Speed *= 2

       Speed = maximum(hero.childfound[xSwim].field[abValue].value,Speed)

       Swim = "Value." & Speed

       perform hero.childfound[xSwim].delete[Value.?]
       perform hero.childfound[xSwim].assignstr[Swim]

       perform delete[Helper.SpecUp]
       perform hero.childfound[c5CSorRevFls].assign[Helper.SpecUp]]]></eval>
    </thing>
  <thing id="c5CSorRevInv" name="Revelation in Flesh (See Invisibility)" description="You can see any invisbile creatures within 60 feet of you, assuming they are not behind total cover." compset="CustomSpec" uniqueness="unique">
    <fieldval field="actName" value="See invisibility active (1 point)"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (field[abilActive].value = 0)

       perform delete[Helper.SpecUp]
       perform hero.childfound[c5CSorRevFls].assign[Helper.SpecUp]]]></eval>
    </thing>
  <thing id="c5CSorRevPli" name="Revelation in Flesh (Pliable)" description="Your body and anything you&apos;re wearing or carrying becomes pliable. You&apos;re able to move through spaces as narrow as 1 inch without squeezing. You can also use 5 feet of movement to escape nonmagical restraints or a grapple." compset="CustomSpec" uniqueness="unique">
    <fieldval field="actName" value="Pliable active (1 point)"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (field[abilActive].value = 0)

       perform delete[Helper.SpecUp]
       perform hero.childfound[c5CSorRevFls].assign[Helper.SpecUp]]]></eval>
    </thing>
  <thing id="5CPsiSpKnw" name="Known" compset="Simple">
    <tag group="Helper" tag="Helper"/>
    </thing>
  <thing id="c5CRgrFeyWnd" name="Fey Wanderer" compset="CustomSpec" uniqueness="unique">
    <comment>Supersedes UA Ranger.</comment>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpRgr" name="Ranger" abbrev="Ranger"/>
    <tag group="abCategory" tag="RgrArchety" name="Ranger Archetype" abbrev="Ranger Archetype"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <bootstrap thing="c5CRgrBgTwst">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="c5CRgrFeyRei">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="c5CRgrMstWnd">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CRgrOthGlm">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CRgrDrdStr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CRgrFyWnMg">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CRgrDrdStr" name="Dreadful Strikes" description="When you hit with a weapon, you can add an additional 1d4 psychic to the total damage done. A creature can only take this extra damage once per turn. \n\nThe extra damage increases to 1d6 when you reach Ranger level 11." compset="ClSpecial" summary="Deal extra psychic damage on weapon hit once per turn.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[      if (#levelcount[Ranger] >= 11) then
        field[abText].text = "1d6 psychic"
      else
        field[abText].text = "1d4 psychic"
        endif]]></eval>
    </thing>
  <thing id="c5CRgrOthGlm" name="Otherworldly Glamour" description="Your Charisma checks gain a bonus equal to your Wisdom modifier (minimum +1). You also gain proficiency in one skill of your choice between Deception, Performance, and Persuasion." compset="ClSpecial" summary="Add Wisdom to Charisma checks and gain one Charisma skill proficiency.">
    <fieldval field="usrCandid1" value="thingid.skDecept | thingid.skPerform | thingid.skPersuas"/>
    <tag group="abAction" tag="None"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="User" tag="NoAutoName"/>
    <eval phase="Final" priority="1000"><![CDATA[   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)

   var iWis as number

   iWis = hero.childfound[aWIS].field[aModBonus].value
   iWis = maximum(1,iWis)

   hero.childfound[skDecept].field[Bonus].value += iWis
   hero.childfound[skPerform].field[Bonus].value += iWis
   hero.childfound[skPersuas].field[Bonus].value += iWis
   hero.childfound[skIntim].field[Bonus].value += iWis]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)
   doneif (field[usrChosen1].ischosen = 0)

   perform field[usrChosen1].chosen.assign[Helper.Proficient]]]></eval>
    </thing>
  <thing id="c5CRgrBgTwst" name="Beguiling Twist" description="Your saves against being charmed or frightened are made with advantage.\n\nAdditionally, whenever you or a creature visible to and within 120 feet of you makes a successful save against a charm or frightening effect, you can use a reaction to force another creature you can see within 120 feet of you to make a Wisdom save versus you spell save DC. On a failure, that creature is either charmed or frightened (you pick which) by you for 1 minute. The target can repeat the save at the end of each of its turns, ending the effect for itself with a success." compset="ClSpecial" summary="Advantage on saves versus fright or charm, reaction to reverse such an effect.">
    <fieldval field="abRange" value="120"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="abSave" tag="aWIS"/>
    <tag group="StandardDC" tag="aWIS"/>
    <eval phase="Final"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       #situational[hero.child[svAll], "Advantage versus being charmed or frightened", field[thingname].text]]]></eval>
    </thing>
  <thing id="c5CRgrFeyRei" name="Fey Reinforcements" description="You know the {i}summon fey{/i} spell, which does not count against your total number of ranger spells you know. You can cast it without material components. You have one free (no spell slot use required) casting of it, that recharges when you finish a long rest.\n\nWhen you begin casting the spell, you can choose for it to not require your concentration. If you do so, the duration of the spell becomes 1 minute for that casting of it." compset="ClSpecial" summary="Gain and use the summon fey spell 1/long rest or with spell slot.">
    <bootstrap thing="sp5CSumFey">
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="sp5CSumFey">
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      <autotag group="BonusSplAt" tag="11"/>
      </bootstrap>
    </thing>
  <thing id="c5CRgrMstWnd" name="Misty Wanderer" description="You can cast {i}misty step{/i} without the use of a spell slot. You can do this a number of times per long rest equalling your Wisdom modifier (minimum of 1 casting).\n\nAdditionally, your castings of {i}misty step{/i} allow you to bring along a single willing creature that is visible to and within 5 feet of you. Once they teleport with you, they appear in an open space of your choice within 5 feet of your destination." compset="ClSpecial" summary="Misty step Wisdom mod per long rest, and can bring someone.">
    <tag group="Custom" tag="FeyMisty" name="Fey Wanderer&apos;s Misty Step"/>
    <bootstrap thing="spMistStep">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="BonusSplAt" tag="15"/>
      <autotag group="Custom" tag="FeyMisty"/>
      <assignval field="sNameMod" value="can bring ally"/>
      </bootstrap>
    <eval phase="PostAttr"><![CDATA[   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)

   var iWis as number

   iWis = hero.childfound[aWIS].field[aModBonus].value
   iWis = maximum(1,iWis)

   foreach pick in hero where "thingid.spMistStep & Custom.FeyMisty"
     eachpick.field[trkMax].value = iWis
     eachpick.field[CustDesc].text = eachpick.field[descript].text & "\n\nYou can bring along a single willing creature that is visible to and within 5 feet of you. Once they teleport with you, they appear in an open space of your choice within 5 feet of your destination."
     nexteach]]></eval>
    </thing>
  <thing id="c5CRgrFyWnMg" name="Fey Wanderer Magic" description="You learn additional spells at certain levels in the class, shown in the table blow. The spell counts as a ranger spell, but it doesn&apos;t count against the total number of ranger spells known. \n\n{b}Fey Wanderer Spells{/b}\n{b}Ranger Level Spell{/b}\n3rd                    {i}charm person{/i}\n5th                    {i}misty step{/i}\n9th                    {i}dispel magic{/i}\n13th                  {i}dimension door{/i}\n17th                  {i}mislead{/i}" compset="ClSpecial" summary="Learn new swarmkeeper spells as you level.">
    <bootstrap thing="spCharPers">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spMistStep">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spDispMagi">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spDimeDoor">
      <autotag group="BonusSplAt" tag="13"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    <bootstrap thing="spMislead">
      <autotag group="BonusSplAt" tag="17"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpRgr"/>
      </bootstrap>
    </thing>
  <thing id="c5CSorClck" name="Clockwork Soul" compset="CustomSpec" uniqueness="unique">
    <fieldval field="usrLabelAr" value="Manifestations of Order"/>
    <arrayval field="usrArray" index="0" value="Hovering spectral cogs"/>
    <arrayval field="usrArray" index="1" value="Eyes are spinning clock hands"/>
    <arrayval field="usrArray" index="2" value="Brassy glowing skin"/>
    <arrayval field="usrArray" index="3" value="Floating geometry &amp; equations "/>
    <arrayval field="usrArray" index="4" value="Tiny clockwork casting focus"/>
    <arrayval field="usrArray" index="5" value="Magic sounds like clockwork"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpSor" name="Sorcerer" abbrev="Sorcerer"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CSorRstBal">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CSorBstLaw">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CSorTrnOrd">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cfg5CClkSpl"></bootstrap>
    <bootstrap thing="c5CSorClkSpl">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CSorClkCvl">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    </thing>
  <thing id="c5CSorClkSpl" name="Clockwork Magic" description="Starting at 3rd level, you always have certain spells known after you reach particular levels in this class, as shown in the Clockwork Spells table. These spells count as sorcerer spells for you, but they don’t count against the number of sorcerer spells you know.\n\nWhenever you gain another level in the sorcerer class, one of the spells gained from this feature can be replaced with another spell of the same level. The new spell must be from either the divination or an enchantment school, and must be from the sorcerer, warlock, or wizard spell list. Use the Clockwork Spells tab to indicate if you&apos;re replacing the spell, then select the new one from the list.\n\n{b}Clockwork Spells{/b}\n{b}Sorcerer Level Spell{/b}\n1st                     {i}alarm, protection from evil and good{/i}\n3rd                     {i}aid, lesser restoration{/i}\n5th                     {i}dispel magic, protection from energy{/i}\n7th                     {i}freedom of movement, summon construct{/i}\n9th                     {i}greater restoration, wall of force{/i}" compset="ClSpecial" summary="Gain new spells as an clockwork sorcerer.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    </thing>
  <thing id="cfg5CClkSpl" name="Clockwork Spells" compset="Configure" uniqueness="unique">
    <fieldval field="cfgAllwSp1" value="(Helper.Helper &amp; !Helper.Helper)"/>
    <fieldval field="cfgSpell1" value="Replacement Clockwork Spells"/>
    <fieldval field="cfgObject1" value="Clockwork Spells"/>
    <tag group="Helper" tag="ClsCastLev"/>
    <tag group="StandardDC" tag="aCHA"/>
    <bootstrap thing="c5CClkAlar">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 1]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkPrtEG">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 1]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkAid">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkLsrRs">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkDspMg">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkPrtEn">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 5]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkFrdMv">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 7]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkSumCn">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 7]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkGrtRs">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CClkWlFrc">
      <containerreq phase="First" priority="501"><![CDATA[fieldval:cfgMaxSp1 >= 9]]></containerreq>
      </bootstrap>
    <eval phase="Final" priority="50000"><![CDATA[
    doneif (field[cfgMaxSp1].value = field[cfgLeftSp1].value)
    doneif (tagis[Helper.Disable] <> 0)


  var searchexpr as string
  var blep as number

  searchexpr = "("
  
  foreach pick in hero from BaseSpell where "hasagent.cfg5CClkSpl"
    if (blep > 0) then
      searchexpr &= " | " 
     endif
    searchexpr &= eachpick.tagids[thingid.?]
    blep += 1
   nexteach

  searchexpr &= ") &!Helper.Cantrip"

  foreach pick in hero from BaseSpell where searchexpr
      perform eachpick.assign[Helper.Free]
      perform eachpick.assign[Helper.Known]
      perform eachpick.assign[SpellType.cHelpSor]
      eachpick.field[sNameMod].text = "Clockwork"
  nexteach]]></eval>
    <eval phase="First" priority="250" index="2"><![CDATA[
    doneif (tagis[Helper.Disable] <> 0)
    field[cfgMaxSp1].value += #levelcount[Sorcerer]]]></eval>
    <eval phase="First" priority="505" index="3"><![CDATA[
    doneif (tagis[Helper.Disable] <> 0)
    field[cfgMaxSp1].value -= #levelcount[Sorcerer]]]></eval>
    </thing>
  <thing id="c5CClkAlar" name="1 - Alarm" description="Your Clockwork Magic feature grants you the {i}alarm{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the Arms of Hadar spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spAlarm">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[
  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 2)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.1"

  perform hero.childfound[cfg5CClkSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkPrtEG" name="1 - Protection from Evil and Good" description="Your Clockwork Magic feature grants you the {i}protection from evil and good{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the dissonant whispers spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spProtGoEv">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 2)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.1"

  perform hero.childfound[cfg5CClkSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkAid" name="2 - Aid" description="Your Clockwork Magic feature grants you the {i}aid{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the calm emotions spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spAid">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 4)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.2"

  perform hero.childfound[cfg5CClkSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkLsrRs" name="2 - Lesser Restoration" description="Your Clockwork Magic feature grants you the {i}lesser restoration{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the detect thoughts spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spLessRest">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 4)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.2"

  perform hero.childfound[cfg5CClkSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkDspMg" name="3 - Dispel Magic" description="Your Clockwork Magic feature grants you the {i}dispel magic{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the Hunger of Hadar spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spDispMagi">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 6)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.3"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CClkSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkPrtEn" name="3 - Protection from Energy" description="Your Clockwork Magic feature grants you the {i}protection from energy{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the sending spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spProtEner">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 6)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.3"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CClkSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]

debug focus.field[cfgAllwSp1].text]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkFrdMv" name="4 - Freedom of Movement" description="Your Clockwork Magic feature grants you the {i}freedom of movement{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the black tentacles spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spFreeMove">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 8)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.4"

  perform hero.childfound[cfg5CClkSpl].setfocus

  doneif (field[usrChosen2].ischosen = 0)

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkSumCn" name="4 - Summon Construct" description="Your Clockwork Magic feature grants you the {i}summon construct{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the summon aberration spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="sp5CSumCon">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 8)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.4"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CClkSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkGrtRs" name="5 - Greater Restoration" description="Your Clockwork Magic feature grants you the {i}greater restoration{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the telepathic bond spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spGreaRest">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 10)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"

  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.5"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CClkSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CClkWlFrc" name="5 - Wall of Force" description="Your Clockwork Magic feature grants you the {i}wall of force{/i} spell. When you gain a level in the Sorcerer class, you may forget this spell and replace it with a abjuration or transmutation spell from the Sorcerer, Warlock, or Wizard spell list. If you do so, indicate that you&apos;re replacing it using the drop down, then choose the new spell from the menu on the Clockwork Spells tab." compset="CustomSpec" summary="Have or replace the telekinesis spell." uniqueness="unique">
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CClkSpl"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="Helper" tag="Primary"/>
    <tag group="CustTaken" tag="cfg5CClkSpl"/>
    <bootstrap thing="spWallForc">
      <containerreq phase="First" priority="503">fieldval:abValue = 1</containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpSor"/>
      <assignval field="sNameMod" value="Clockwork"/>
      </bootstrap>
    <eval phase="First" priority="502" index="2"><![CDATA[  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") = 0)

  field[abValue].value += 1]]></eval>
    <eval phase="Final"><![CDATA[  doneif (#levelcount[Sorcerer] < 10)

  field[usrCandid1].text = "thingid.5CPsiSpKnw | thingid.5CPsiSpRep"


  var Repl as string

  Repl = field[usrChosen1].chosen.tagids[thingid.?,""]

  doneif (compare(Repl,"thingid.5CPsiSpRep") <> 0)

  field[usrCandid2].text = "(sSchool.Abjur | sSchool.Transmutat) & (sClass.cHelpSor | sClass.cHelpWlk | sClass.cHelpWiz) & sLevel.5"

  doneif (field[usrChosen2].ischosen = 0)

  perform hero.childfound[cfg5CClkSpl].setfocus

  focus.field[cfgMaxSp1].value += 1

  focus.field[cfgAllwSp1].text &= " | " & field[usrChosen2].chosen.tagids[thingid.?," | "]]]></eval>
    <eval phase="Render" priority="999999" index="3">perform delete[Helper.ActivMenu]</eval>
    </thing>
  <thing id="c5CSorRstBal" name="Restore Balance" description="When a creature visible to and within 60 feet of you is about to roll a d20 with advantage or disadvantage, you can use a reaction to remove the advantage or disadvantage.\n\nYou can do this feature a number of times equal to your proficiency bonus, and you regain all spent uses when you finish a long rest." compset="ClSpecial" summary="Reaction to remove advantage or disadvantage.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <eval phase="PostAttr">field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value</eval>
    </thing>
  <thing id="c5CSorBstLaw" name="Bastion of Law" description="You can use an action to expend between 1 and 5 sorcery points to create a magical ward around yourself or another creature visible to and within 30 feet of you. The ward lasts until you create another one or complete a long rest.\n\nThe ward has a number of d8s equal to the number of sorcery points spent in creating it. When the warded creature is damaged, it can spend a number of those dice, roll them, and reduce the damage taken by the rolled total." compset="ClSpecial" summary="Spend sorcery points to create a damage-reducing ward.">
    <fieldval field="actName" value="Ward Active?"/>
    <fieldval field="actUserMin" value="0"/>
    <fieldval field="actUserMax" value="5"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Action"/>
    <eval phase="PostAttr" priority="99999"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)
       doneif (field[abilActive].value = 0)

       perform assign[Helper.UserAdjust]
       field[actIncrNam].text = "d8s remaining"

       doneif (field[actUser].value = 0)
       field[abText].text = field[actUser].value & "d8 damage left"]]></eval>
    </thing>
  <thing id="c5CSorTrnOrd" name="Trance of Order" description="You can use a bonus action to enter a state of consciousness aligned to the endless calculations of the lawful plane. For 1 minute, you gain these benefits:\n\n• Attack rolls against you cannot benefit from advantage.\n• Whenever you make an attack roll, ability check, or saving throw, treat a roll of 9 or lower on the d20 as a roll of 10.\n\nOnce you&apos;ve used this feature, you cannot do so again until you complete a long rest or spend 5 sorcery points to recharge it." compset="ClSpecial" summary="Bonus action to prevent advantage on attacks against you, get minimum 10 on d20 rolls.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abText" value="1 minute"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="User" tag="Tracker"/>
    <tag group="LvNamePar" tag="AppText"/>
    </thing>
  <thing id="c5CSorClkCvl" name="Clockwork Cavalcade" description="You can use an action to summon spirits of order in a 30-foot cube originating from you. They appear as modrons or other constructs of your choice. They are intangible and invulnerable. Within the cube, they create these effects before vanishing:\n\n• They restore up to 100 hit points, divided as you like between any creatures of your choice within the cube.\n• They instantly repair any damaged objects that are completely within the cube.\n• Every spell of 6th or lower level on any creatures and objects of your choice within the cube ends immediately.\n\nOnce you&apos;ve used this feature, you cannot do so again until you complete a long rest or spend 7 sorcery points to recharge it." compset="ClSpecial" summary="Summon construct spirits to 30-foot cube of healing and repairing.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abText" value="30-foot cube"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abDuration" tag="Instant"/>
    <tag group="LvNamePar" tag="AppText"/>
    </thing>
  <thing id="c5CSorWrpImp" name="Warping Implosion" description="You can use an action to teleport to an open space visible to and within 120 feet of you. Immediately after you disappear from your previous space, every creature within 30 feet of that space must make a Strength save versus your spell save DC. On a failure, a creature suffers 3d10 force damage and is pulled directly toward the space you leff, ending in an open space as close as possible to it.  On a successful save, a creature takes half the damage and is not pulled.\n\nOnce you&apos;ve used this feature, you cannot do so again until you complete a long rest or spend 5 sorcery points to recharge it." compset="ClSpecial" summary="Action to teleport 120 feet, damage and pull in creatures by previous space.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="120"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abDuration" tag="Instant"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="aSTR"/>
    <tag group="StandardDC" tag="aCHA"/>
    </thing>
  <thing id="r5CWldfrSpt" name="Wildfire Spirit" compset="Race">
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rINT" value="3"/>
    <fieldval field="rCHA" value="1"/>
    <fieldval field="rAC" value="1"/>
    <fieldval field="rHPStart" value="5"/>
    <fieldval field="rCON" value="4"/>
    <fieldval field="rWIS" value="5"/>
    <fieldval field="rHDSides" value="1"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="Alignment" tag="Unaligned" name="Unaligned" abbrev="UN"/>
    <tag group="RaceSize" tag="Small11"/>
    <tag group="DamageImm" tag="dtFire"/>
    <tag group="CondImm" tag="pcnCharmed"/>
    <tag group="CondImm" tag="pcnFright"/>
    <tag group="CondImm" tag="pcnGrapple"/>
    <tag group="CondImm" tag="pcnProne"/>
    <tag group="CondImm" tag="pcnRestr"/>
    <bootstrap thing="wOtherRng">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtFire"/>
      <assignval field="livename" value="Flame Seed"/>
      <assignval field="sbName" value="Flame Seed"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="6"/>
      <assignval field="wTarget" value="one target you can see"/>
      <assignval field="wRangeNorm" value="60"/>
      </bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its summoner&apos;s languages"/>
      <assignval field="sbName" value="Understands its summoner&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="tpElementa"></bootstrap>
    <bootstrap thing="ra5CWldFrT"></bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Value" tag="30"/>
      <autotag group="Helper" tag="Hover"/>
      </bootstrap>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = hero.childfound[ra5CMstPwr].field[abValue5].value 
HPAdj *= 5
HPAdj -= hero.childfound[aCON].field[aModBonus].value
HPAdj += 4

herofield[tBonusHP].value += HPAdj</eval>
    <eval phase="Final" priority="50000" index="2"><![CDATA[
~ pull our DEX and prof to determine what our attack bonus currently is

var CrAt as number

CrAt = (hero.childfound[aDEX].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

~ add our spell attack (stored in abValue4 of Primal Bond) and subtract
~ the current to attack bonus from any natural attacks. This way any 
~ other additions to the bonus can still count

foreach pick in hero from BaseWep where "wGroup.Natural"
eachpick.field[wRanAtk].value += hero.childfound[ra5CMstPwr].field[abValue4].value - CrAt
nexteach]]></eval>
    </thing>
  <thing id="ra5CMstPwr" name="Master&apos;s Power" description="The creature inherits its master&apos;s proficiency bonus." compset="RaceSpec">
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ and damage.
foreach pick in hero from BaseWep where "wGroup.Natural"
   eachpick.field[dmmBonus].value = field[abValue2].value 
   eachpick.field[dmrBonus].value = field[abValue2].value
nexteach]]></eval>
    <eval phase="PostLevel" index="2"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ store the proficiency of the hero in abValue2:

field[abValue2].value = master.childfound[ProfBonus].field[tProfBonus].value

~ now we replace the prof bonus of the minion with the stored hero one

hero.childfound[ProfBonus].field[tProfBonus].value = field[abValue2].value]]></eval>
    <eval phase="Final" priority="49000" index="3"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Pull master's spell save DC into abValue3 for use in other features
  field[abValue3].value = master.childfound[cHelpDrd].field[cSplSaveDC].value  


      ~Pull master's spell attack into abValue4 for use in other features
  field[abValue4].value = master.childfound[cHelpDrd].field[cSplAttack].value]]></eval>
    </thing>
  <thing id="ra5CWldFrT" name="Fiery Teleportation" compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec" name="Show Spec" abbrev="Show Spec"/>
    <tag group="Universal" tag="Universal" name="Universal Monster Ability" abbrev="Universal Monster Ability"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~ Set DC to hero's Spell save DC, as stored in companion ability
      field[abDC].value = hero.childfound[ra5CMstPwr].field[abValue3].value

      field[CustDesc].text = "The creature and every willing creature of your choice within 5 feet of it teleport up to 15 feet to open spaces visible to you. Then every creature within 5 feet of the original space must make a DC " & hero.childfound[ra5CMstPwr].field[abValue3].value & " Dexterity save. On a failure, such a creature takes 1d6 + " & hero.childfound[ra5CMstPwr].field[abValue2].value & " fire damage."

      field[abText].text = "1d6+" & hero.childfound[ra5CMstPwr].field[abValue2].value & " fire damage"]]></eval>
    </thing>
  <thing id="c5CWldfrSpt" name="Wildfire Spirit" compset="Companion" stacking="never" uniqueness="unique">
    <fieldval field="CompType" value="Wildfire Spirit"/>
    <eval phase="First" priority="455" index="4"><![CDATA[~ Well, there's no way (afaik) to count the class levels from the hero
~ at the minion, so we need to do it somewhere in the hero context and 
~ send the info to be used at the minion. 
~
~ In this case, since all animal companions will receive the 
~ companion bond racial ability to add their extra skills, we'll
~ use it to bootstrap the extra HD as well. The tag expression used 
~ in the condition for the bootstrap will test the value of the
~ abValue5 field, which we set here.

~ This must be done at the First stage, since the bootstraps happen
~ there. Or so I'm told by the error messages.

var level as number
level = hero.tagcount[Classes.Druid]
minion.childfound[ra5CMstPwr].field[abValue5].value = level]]></eval>
    <minion id="WildfireSpirit" isinherit="no">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="HideTab" tag="classes"/>
      <tag group="HideTab" tag="personal"/>
      <tag group="HideTab" tag="journal"/>
      <bootstrap thing="ra5CMstPwr"></bootstrap>
      <bootstrap thing="r5CWldfrSpt"></bootstrap>
      </minion>
    </thing>
  <thing id="c5CDrdWldFr" name="Circle of Wildfire" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="SpecSource" tag="cHelpDrd" name="Druid" abbrev="Druid"/>
    <bootstrap thing="c5CDrdSmWldf">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CDrdEnhBnd">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CDrdCauFlm">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CDrdBlzRvl">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CDrdWldSpl">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    </thing>
  <thing id="c5CDrdWldSpl" name="Circle Spells" description="At 2nd level and above, you gain additional spells. You automatically know and prepare these spells as they become available at the appropriate levels. The spells do not count against any limit of spells known or prepared per day and you gain access to them even if they would not normally appear on the druid spell list.\n\n{b}Circle of Wildfire Spells{/b}\n{b}Druid Level    Spell{/b}\n2nd                    {i}burning hands, cure wounds{/i}\n3rd                     {i}flaming sphere, scorching ray{/i}\n5th                     {i}plant growth, revivify{/i}\n7th                     {i}aura of life, fire shield{/i}\n9th                     {i}flame strike, mass cure wounds{/i}" compset="ClSpecial" summary="Gain new spells as part of the circle of wildfire.">
    <bootstrap thing="spPlanGrow">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spRevivify">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="sp5CAurLif">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spFireShie">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spFlamStri">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spMassCure">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spAid">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spBurnHand">
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spCureWoun">
      <autotag group="SpellType" tag="cHelpDrd"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      </bootstrap>
    <bootstrap thing="spScorRay">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    </thing>
  <thing id="c5CDrdSmWldf" name="Summon Wildfire Spirit" description="You can use an action to expend one use of your Wild Shape to summon a wildfire spirit, instead of taking on a beast form. \n\nThe spirit appears in an open space of your choice that is visible to and within 30 feet of you. Every creature within 10 feet of the spirit (except for you) when it appears must make a Dexterity save versus your spell save DC, taking 2d6 fire damage on a failure. \n\nThe spirit is friendly to you and your allies, and it obeys your command. You determine its appearance. In combat, it shares your initiative but take its turn right after yours. It only takes the Dodge action, unless you use a bonus action to command it to do something in its stat block or another action available to it. If you&apos;re incapacitated, it can take any action of its choice.\n\nThe spirit manifests for 1 hour, until you summon another wildfire spirit, until it reaches 0 hit points, or until you die." compset="ClSpecial" summary="Spend a Wild Shape to summon a wildfire spirit.">
    <fieldval field="abRange" value="30"/>
    <fieldval field="abDuration" value="1"/>
    <fieldval field="actName" value="Wildfire Spirit Summoned"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abDuration" tag="Hour"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Action"/>
    <bootstrap thing="c5CWldfrSpt">
      <containerreq phase="First" priority="450"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CDrdEnhBnd" name="Enhanced Bond" description="Whenever you cast a fire damage or hit point-restoring spell while your wildfire spirit is summoned, you can add 1d8 to one damage or healing roll of the spell. \n\nAdditionally, when you cast a spell with a range other than self, you can choose for the spell to originate from the wildfire spirit instead of yourself." compset="ClSpecial" summary="Add 1d8 to healing or fire damage spell while spirit is up, and cast from it.">
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CDrdCauFlm" name="Cauterizing Flames" description="When a Small or larger creature dies within 30 feet of you or your wildfire spirit, a harmless spectral appears in the dead creature&apos;s space and lasts there for 1 minute. When a creature visible to you enters the space, you can use a reaction to end the flame. The creature receives either fire damage or healing, your choice, equal to 2d10 + your Wisdom modifier. \n\nYou can use this reaction a number of times equaling your proficiency bonus, and regain all spent uses of it when you complete a long rest." compset="ClSpecial" summary="Use the death of a nearby creature to heal or damage a creature in its space.">
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value
field[abText].text = "2d10+" & #attrbonus1[aWIS]]]></eval>
    </thing>
  <thing id="c5CDrdBlzRvl" name="Blazing Revival" description="If your wildfire spirit is within 120 feet of you when you are reduced to 0 hit points and thus fall unconscious, you can cause the spirit to also drop to 0 hit points. Then you regain half your hit points and immediately get back up on your feet. \n\nOnce you&apos;ve use this feature, you cannot do so again until you complete a long rest." compset="ClSpecial" summary="Drop your wildfire spirit to save you from death.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="120"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abRange" tag="Feet"/>
    </thing>
  <thing id="c5CWlkGenie" name="The Genie" description="{b}Genie Expanded Spells{/b}\nWhen you learn new spells, you can choose from the spells below, in addition to the Warlock spell list. The level listed below corresponds with the level of the spell, not your warlock level.\n\n{b}Level   Spells{/b}\n{b}1st{/b}        {i}detect evil and good{/i}\n{b}2nd{/b}       {i}phantasmal force{/i}\n{b}3rd{/b}       {i}create food and water{/i}\n{b}4th{/b}       {i}phantasmal killer{/i}\n{b}5th{/b}       {i}creation{/i}\n{b}9th{/b}       {i}wish{/i}\n\n{b}Genie Type Expanded Spells{/b}\nDepending on the kind of genie your patron is (dao, djinni, efreeti, or marid), additional spells are also added to your spell list as above.\n\n{b}{i}Dao Spells{/i}{/b}\n{b}Level   Spells{/b}\n{b}1st{/b}        {i}sanctuary{/i}\n{b}2nd{/b}       {i}spike growth{/i}\n{b}3rd{/b}       {i}meld into stone{/i}\n{b}4th{/b}       {i}stone shape{/i}\n{b}5th{/b}       {i}wall of stone{/i}\n\n{b}{i}Djinni Spells{/i}{/b}\n{b}Level   Spells{/b}\n{b}1st{/b}        {i}thunderwave{/i}\n{b}2nd{/b}       {i}gust of wind{/i}\n{b}3rd{/b}       {i}wind wall{/i}\n{b}4th{/b}       {i}greater invisibility{/i}\n{b}5th{/b}       {i}seeming{/i}\n\n{b}{i}Efreeti Spells{/i}{/b}\n{b}Level   Spells{/b}\n{b}1st{/b}        {i}burning hands{/i}\n{b}2nd{/b}       {i}scorching ray{/i}\n{b}3rd{/b}       {i}fireball{/i}\n{b}4th{/b}       {i}fire shield{/i}\n{b}5th{/b}       {i}flame strike{/i}\n\n{b}{i}Marid Spells{/i}{/b}\n{b}Level   Spells{/b}\n{b}1st{/b}        {i}fog cloud{/i}\n{b}2nd{/b}       {i}blur{/i}\n{b}3rd{/b}       {i}sleet storm{/i}\n{b}4th{/b}       {i}control water{/i}\n{b}5th{/b}       {i}cone of cold{/i}" compset="CustomSpec" uniqueness="unique">
    <fieldval field="usrLabelAr" value="Genie Kind"/>
    <arrayval field="usrArray" index="0" value="Dao"/>
    <arrayval field="usrArray" index="1" value="Djinni"/>
    <arrayval field="usrArray" index="2" value="Efreeti"/>
    <arrayval field="usrArray" index="3" value="Marid"/>
    <usesource source="5eTCoE"/>
    <tag group="ClsAllowSp" tag="spPlanGrow" name="Plant Growth" abbrev="Plant Growth"/>
    <tag group="ClsAllowSp" tag="spSeeming" name="Seeming" abbrev="Seeming"/>
    <tag group="ClsAllowSp" tag="spSleep" name="Sleep" abbrev="Sleep"/>
    <tag group="ClsAllowSp" tag="sp5CPhantF" name="Phantasmal Force" abbrev="Phantasmal Force"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="abCategory" tag="WlkOthPatr" name="Warlock Otherworldly Patron" abbrev="Warlock Otherworldly Patron"/>
    <bootstrap thing="c5CWlkEleGft">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CWlkSncVsl">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CWlkLmtWsh">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CWlkGenVsl">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CWlkGnWrth">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CWlkBtlRsp">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <eval phase="Final" priority="10001" index="2"><![CDATA[  doneif (hero.tagcount[Classes.Warlock] < 16)
    foreach pick in hero where "thingid.cWlkMysArc"
      if (eachpick.field[xIndex].value >= 4) then
        eachpick.field[usrCandid1].text = "(component.BaseSpell & sClass.cHelpWlk & sLevel.9) | thingid.spWish"
      endif
    nexteach]]></eval>
    <eval phase="PostLevel" priority="10000">doneif (islinkage[table] = 0)

      perform linkage[table].assign[ClsAllowSp.spDeteEvil]
      perform linkage[table].assign[ClsAllowSp.sp5CPhantF]
      perform linkage[table].assign[ClsAllowSp.spCreaFood]
      perform linkage[table].assign[ClsAllowSp.spPhanKill]
      perform linkage[table].assign[ClsAllowSp.spCreation]
      perform linkage[table].assign[ClsAllowSp.spWish]

    if (field[usrIndex].value = 0) then
      perform linkage[table].assign[ClsAllowSp.spSanctuar]
      perform linkage[table].assign[ClsAllowSp.spSpikGrow]
      perform linkage[table].assign[ClsAllowSp.spMeldSton]
      perform linkage[table].assign[ClsAllowSp.spStonShap]
      perform linkage[table].assign[ClsAllowSp.spWallSton]
    elseif (field[usrIndex].value = 1) then
      perform linkage[table].assign[ClsAllowSp.spThunderw]
      perform linkage[table].assign[ClsAllowSp.spGustWind]
      perform linkage[table].assign[ClsAllowSp.spWindWall]
      perform linkage[table].assign[ClsAllowSp.spGreaInvi]
      perform linkage[table].assign[ClsAllowSp.spSeeming]
    elseif (field[usrIndex].value = 2) then
      perform linkage[table].assign[ClsAllowSp.spBurnHand]
      perform linkage[table].assign[ClsAllowSp.spScorRay]
      perform linkage[table].assign[ClsAllowSp.spFireball]
      perform linkage[table].assign[ClsAllowSp.spFireShie]
      perform linkage[table].assign[ClsAllowSp.spFlamStri]
    elseif (field[usrIndex].value = 3) then
      perform linkage[table].assign[ClsAllowSp.spFogClou]
      perform linkage[table].assign[ClsAllowSp.spBlur]
      perform linkage[table].assign[ClsAllowSp.spSleeStor]
      perform linkage[table].assign[ClsAllowSp.spContWate]
      perform linkage[table].assign[ClsAllowSp.spConeCold]
    endif</eval>
    </thing>
  <thing id="c5CWlkEleGft" name="Elemental Gift" description="You now have resistance to a partuclar type of damage, based on your genie patron: bludgeoning (dao), thunder (djinni), fire (efreeti), or cold (marid).\n\nAlso, you can use a bonus action to grant yourself a flying speed (with hovering) of 30 feet for 10 minutes. You can use this feature a number of times equaling your proficiency bonus, and regain all spent uses of it when you complete a long rest." compset="ClSpecial" summary="Gain damage resistance from your patron and bonus action to fly.">
    <fieldval field="actName" value="Flying Active (10 minutes)"/>
    <fieldval field="abDuration" value="10"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Activation"/>
    <tag group="abDuration" tag="Minute"/>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <eval phase="PostAttr" priority="5000"><![CDATA[    doneif (tagis[Helper.Disable] <> 0)
    doneif (tagis[Helper.ShowSpec] = 0)

    perform hero.childfound[c5CWlkGenie].setfocus

    if (focus.field[usrIndex].value = 0) then
       perform hero.assign[DamageRes.dtBludgeon]
    elseif (focus.field[usrIndex].value = 1) then
       perform hero.assign[DamageRes.dtThunder]
    elseif (focus.field[usrIndex].value = 2) then
       perform hero.assign[DamageRes.dtFire]
    elseif (focus.field[usrIndex].value = 3) then
       perform hero.assign[DamageRes.dtCold]
    endif


    field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CWlkSncVsl" name="Sanctuary Vessel" description="When you use the Bottled Respite feature to enter your Genie&apos;s Vessel, you can now choose up to five willing creatures visible to and within 30 feet of you. The chosen creatures are pulled into the vessel with you.\n\nYou can use a bonus action to eject any creatures from the vessel. Everyone is ejected if you leave, if you die, or if the vessel is destroyed.\n\nAdditionally, anyone, including yourself, who stays in the vessel for at least 10 minutes gains the benefits of completing a short rest. You all can add your proficiency bonus to the number of hit points they regain by spending Hit Dice as part of a short rest there." compset="ClSpecial" summary="Bring others into your Genie&apos;s Vessel and quick short rests within.">
    <fieldval field="abRange" value="30"/>
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abRange" tag="Feet"/>
    </thing>
  <thing id="c5CWlkLmtWsh" name="Limited Wish" description="You can use an action to speak your desire for a small wish to your patron into your Genie&apos;s Vessel. The wish is for the efffect of a 6th-level or lower spell with a casting time of 1 action. The spell can be from any class&apos;s spell list, and you do not need to meet the requirements of the spell, including components with a cost. The spell takes effect as part of the action to wish for it.\n\nOnce you&apos;ve used this action, you cannot do so again until you complete 1d4 long rests." compset="ClSpecial" summary="Ask your patron to grant you a 6th-level or lower spell every 1d4 long rests.">
    <fieldval field="trkMax" value="1"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Usage" tag="Usage5Cd4D"/>
    </thing>
  <thing id="c5CWlkGenVsl" name="Genie&apos;s Vessel" description="Your patron grants you a Tiny object to serve as a vessel of its power. You can use it as a spellcasting focus for your warlock spells. You can decide its appearance or select it at random. While holding the vessel, you can use it for both Bottled Respite and Genie&apos;s Wrath.\n\nThe vessel&apos;s AC equals your spell save DC. Its hit points are equal to your warlock level plus your proficiency bonus, and it is immune to poison and psychic damage.\n\nIf the vessel is destroyed or you lose it, you can perform a 1-hour ceremony to gain a replacement from your patron. The ceremony can be done during a short or long rest, and any existing previous vessel is destroyed. If you die, the vessel vanishes in an eruption of elemental power." compset="ClSpecial" summary="Your genie has granted you a vessel of its power.">
    <arrayval field="usrArray" index="0" value="Oil lamp"/>
    <arrayval field="usrArray" index="1" value="Urn"/>
    <arrayval field="usrArray" index="2" value="Ring"/>
    <arrayval field="usrArray" index="3" value="Bottle"/>
    <arrayval field="usrArray" index="4" value="Statuette"/>
    <arrayval field="usrArray" index="5" value="Lantern"/>
    <bootstrap thing="g5CGenVsl"></bootstrap>
    <eval phase="Final" priority="11000"><![CDATA[
var iHP as number

iHP = hero.childfound[ProfBonus].field[tProfBonus].value + hero.tagcount[Classes.Warlock]

field[livename].text = field[name].text & " (AC " & hero.childfound[cHelpWlk].field[cSplSaveDC].value & ", HP " & iHP & ")"]]></eval>
    </thing>
  <thing id="c5CWlkBtlRsp" name="Bottled Respite" description="While touching your Genie&apos;s Vessel, you can use an action to magically disappear and enter the vessel. It remains in the space you left. The interior is an interdimensional space that is a 20-foot-radius cylinder. The ceiling is 20 feet high, and it resembles the vessel. There are cushions and low tables, and the atmosphere inside is comfortable. You can still hear whatever&apos;s happening outside, as if you were still in the space the vessel occupies.\n\nYou can stay inside the vessel for a number of hours equal to double your proficiency bonus. You can use a bonus action to exit the vessel, reappearing in an open space closest to the vessel. You also leave if the vessel is destroyed or if you die. Any objects left in the vessel remain there until removed. If the vessel is destroyed, any objects still in it also harmlessly appear in open spaces closest to the vessel&apos;s former space. Once you&apos;ve entered the vessel, you must complete a long rest before entering it again." compset="ClSpecial" summary="You can enter your Genie&apos;s Vessel.">
    <fieldval field="trkMax" value="1"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abAction" tag="Action"/>
    </thing>
  <thing id="c5CWlkGnWrth" name="Genie&apos;s Wrath" description="Once during each of your turns, while touching your Genie&apos;s Vessel, when you hit with an attack roll, you can deal extra damage to the target equaling your proficiency bonus. The damage type is determined by your patron: bludgeoning (dao), thunder (djinni), fire (efreeti), or cold (marid)." compset="ClSpecial" summary="You can deal extra damage on a hit equal to your proficiency bonus.">
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr"><![CDATA[    doneif (tagis[Helper.Disable] <> 0)
    doneif (tagis[Helper.ShowSpec] = 0)

    var iDam as string

    perform hero.childfound[c5CWlkGenie].setfocus

    if (focus.field[usrIndex].value = 0) then
       iDam = "bludgeoning"
    elseif (focus.field[usrIndex].value = 1) then
       iDam = "thunder"
    elseif (focus.field[usrIndex].value = 2) then
       iDam = "fire"
    elseif (focus.field[usrIndex].value = 3) then
       iDam = "cold"
    endif

    field[abText].text = hero.childfound[ProfBonus].field[tProfBonus].value & " " & iDam & ", 1/turn"]]></eval>
    </thing>
  <thing id="c5CFtrRuneKni" name="Rune Knight" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abCategory" tag="5CFtrRunes" name="Fighter Rune Knight Runes"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CFtrRnBns">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CFtrRnGiMi">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CFtrRunCrv">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CFtrRncShl">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="c5CFtrGrtStr">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CFtrRncJug">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="c5CFtrMstRns">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <eval phase="Validation" priority="1" index="2"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)

       hero.childfound[cHelpFtr].field[cCstS4Expr].text &= " & abCategory.5CFtrRunes"]]></eval>
    <eval phase="PostLevel" priority="9000"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)

       linkage[table].field[cSpec4thNm].text = "Runes"
       linkage[table].field[cSpec4thSi].text = "Rune"

       linkage[table].field[cCustQuTot].arrayvalue[2] += 2
       linkage[table].field[cCustQuTot].arrayvalue[6] += 3
       linkage[table].field[cCustQuTot].arrayvalue[9] += 4
       linkage[table].field[cCustQuTot].arrayvalue[14] += 5]]></eval>
    </thing>
  <thing id="c5CFtrRunCrv" name="Rune Carver" description="You learn two runes of your choice. Each time you gain a level in this class, you can replace a rune you know with a different one. You learn additional runes at levels 7, 10, and 15.\n\nWhen you complete a long rest, you can touch a number of objects equal to the total number of runes you know and insribe a different rune on each object. Such an object must be a weapon, armor, a shield, jewelry, or someother item you can wear or hold in your hand. The rune remains on that object until you complete a long rest. An object can only have one inscribed rune at a time. \n\nIf a rune requires a saving throw, your Rune Magic save DC is 8 + your proficiency bonus + your Constitution modifier." compset="ClSpecial" summary="Imbue objects with runic power.">
    <tag group="StandardDC" tag="aCON"/>
    <tag group="FeatureTyp" tag="Special"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[var iDC as number

iDC = #attrbonus1[aCON]
iDC += hero.childfound[ProfBonus].field[tProfBonus].value
iDC += 8

field[abText].text = "Save DC " & iDC]]></eval>
    </thing>
  <thing id="c5CFtrRnBns" name="Bonus Proficiencies" description="You gain proficiency smith&apos;s tools, and learn the Giant language." compset="ClSpecial" summary="Learn smith&apos;s tools and the Giant language.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <bootstrap thing="gTooSmith"></bootstrap>
    <bootstrap thing="lGiant"></bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      doneif (tagis[Helper.Disable] <> 0)


      perform hero.assign[ProfTool.gTooSmith]
      perform hero.child[gTooSmith].assign[Helper.TrainTool]
      perform hero.child[gTooSmith].assign[Hide.Tool]
      perform hero.child[gTooSmith].assign[Proficienc.Tool]]]></eval>
    </thing>
  <thing id="c5CFtrRnGiMi" name="Giant&apos;s Might" description="As a bonus action, you imbue yourself with the might of a giant, magically gaining these benefits for 1 minute:\n\n• If you are not already Large, you become so. If you don&apos;t have enough room to become Large, your size does not change.\n• You have advantage on ability checks and saving throws based on Strength\n• Once on each of your turns, one of your weapon or unarmed attacks can deal an extra 1d6 damage to a hit target.\n\nYou can use this feature a number of times equal to your proficiency bonus, and you regain all spent uses of it when you complete a long rest." compset="ClSpecial" summary="Grow larger for 1 minute, gaining advantage on Strength and extra damage.">
    <fieldval field="actName" value="Active (1 minute)"/>
    <fieldval field="usrLabelAr" value="Size"/>
    <fieldval field="abDuration" value="1"/>
    <arrayval field="usrArray" index="0" value="Normal"/>
    <arrayval field="usrArray" index="1" value="Large"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="First" priority="20000" index="4"><![CDATA[~increase our size if Large or Huge are selected

     doneif (field[abilActive].value = 0)

     if (field[usrIndex].value = 1) then
        if (herofield[tSize].value < 1) then
           herofield[tSize].value = 1
           field[abValue].value = 1
        endif
     elseif (field[usrIndex].value = 2) then
        if (herofield[tSize].value < 2) then
           herofield[tSize].value = 2
           field[abValue].value = 2
        endif       
     endif]]></eval>
    <eval phase="PostAttr" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    <eval phase="Final" index="3"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (field[abilActive].value = 0)

     var iDam as string
     if (hero.tagcount[Classes.Fighter] >= 18) then
        iDam = "1d10"
     elseif (hero.tagcount[Classes.Fighter] >= 10) then
        iDam = "1d8"
     else
        iDam = "1d6"
     endif 
     field[abText].text = "+" & iDam & " damage 1/turn"

     #situational[hero.child[svSTR], "Advantage", field[thingname].text]
     #situational[hero.child[skAthletic], "Advantage", field[thingname].text]]]></eval>
    <eval phase="Final" priority="11000" index="5"><![CDATA[     doneif (field[abilActive].value = 0)
     doneif (field[usrIndex].value = 0)

~HeroLab automatically increases reach when size increases; this is not 
~part of the 5e rules. So we have to reduce our reach back to normal when
~this feature increases size

~we set abValue to indicate that we increased the size with this feature
~so we call to that to make sure it was us; otherwise we leave reach alone

~if made large by us (abValue=1), reduce the reach    
     if (field[abValue].value = 1) then
        herofield[tReach].value -= 5
        endif

~if made huge by us (abValue=2), reduce the reach
     if (field[abValue].value = 2) then
        herofield[tReach].value -= 5
        endif

~if we have Huge selected (usrIndex=2) but were already Huge (abValue<>2)
~ add 5 to reach. This is a technicality, but I'm going to adhere to the ~letter of the law of the feature

     doneif (field[abValue].value = 2)
     doneif (field[usrIndex].value <> 2)
     
     herofield[tReach].value += 5]]></eval>
    <eval phase="Final" index="6"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (tagis[Helper.ShowSpec] = 0)

~if we're level 18 or higher, add Huge as an option

     if (hero.tagcount[Classes.Fighter] >= 18) then
        field[usrArray].arraytext[2] = "Huge"
        endif]]></eval>
    </thing>
  <thing id="c5CFtrCldRn" name="Cloud Rune" description="While wearing or carrying an object with this rune, your Dexterity (Sleight of Hand) and Charisma (Deception) checks are made with advantage.\n\nAdditionally, when you or a creature visible to and within 30 feet of you is hit by an attack roll, you can take a reaction to invoke the rune, choosing another creature within 30 feet of you other than the attacker. The chosen creature becomes the new target of the attack, using the same roll. The range of the attack does not matter in this transfer. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Advantage on Sleight of Hand and Deception, plus reaction to shift damage from ally." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="abRange" value="30"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     #situational[hero.child[skDecept], "Advantage", field[thingname].text]
     #situational[hero.child[skSleight], "Advantage", field[thingname].text]]]></eval>
    </thing>
  <thing id="c5CFtrRncShl" name="Runic Shield" description="Whenever another creature you can see within 60 feet of you is hit by an attack roll, you can use a reaction to invoke the magic of your runes to protect them. The attacker must reroll their d20 and use the new roll.\n\nYou can use this feature a number of times equaling your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Force attacker within 60 feet to reroll d20 as a reaction.">
    <fieldval field="abRange" value="60"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

     field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CFtrGrtStr" name="Great Stature" description="Upon gaining this feature, roll 3d4 and increase your height by a number of inches equal to the amount rolled.\n\nAlso, the extra damage from your Giant&apos;s Might feature increases to 1d8." compset="ClSpecial" summary="Giant&apos;s Might damage is now 1d8, height increases 3d4 inches.">
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="c5CFtrMstRns" name="Master of Runes" description="You can invoke each of your Rune Carver runes twice per short or long rest, instead of just once." compset="ClSpecial" summary="Your runes can be used twice per short or long rest now.">
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="Final"><![CDATA[     doneif (tagis[Helper.Disable] <> 0)
     doneif (hero.tagcount[Classes.Fighter] < 15)

     foreach pick in hero from BaseCustSp where "abCategory.5CFtrRunes"
        eachpick.field[trkMax].value += 1
        nexteach]]></eval>
    </thing>
  <thing id="c5CFtrRncJug" name="Runic Juggernaut" description="The extra damage done with your Giant&apos;s Might feature increases to 1d10. Additionally, you can now choose to become Huge when using that feature. If you do so, your reach increases by 5 feet." compset="ClSpecial" summary="Giant&apos;s Might damage is now 1d10, can become Huge with +5 reach.">
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="c5CFtrFirRn" name="Fire Rune" description="While wearing or carrying an object with this rune, double your proficiency bonus for any ability checks you make using your proficiency with a tool.\n\nAdditionally, when you hit a creature with an attack using a weapon, you can invoke the rune to create flaming shackles. The target suffers and additional 2d6 fire damage, and it must make a Strength save. On a failure, it&apos;s restrained by the shackles for 1 minute. While restrained in this way, it takes 2d6 fire damage at the beginning of each of its turns, but can repeat the save at the end of each of its turns. On a successful save, the shackles are banished. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Double tool proficiency and can chain attacked enemy with fire." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <fieldval field="abText" value="2d6 fire"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="abSave" tag="aSTR"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     var iTool as string

     foreach pick in hero where "Proficienc.Tool"
        iTool = eachpick.tagids[thingid.?,""]
        iTool = replace(iTool,"thingid","ProfTooDbl",1)
        perform hero.assignstr[iTool]
        nexteach]]></eval>
    </thing>
  <thing id="c5CFtrFrsRn" name="Frost Rune" description="While wearing or carrying an object with this rune, your Wisdom (Animal Handling) and Charisma (Intimidation) checks are made with advantage.\n\nAdditionally, you can use a bonus action to invoke the rune. For 10 minutes, you have a +2 to all Strength and Constitution saves and ability checks. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Advantage on Animal Handling and Intimidation, plus bonus action for it on STR and CON." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <fieldval field="actName2" value="Active (10 minutes)"/>
    <fieldval field="abDuration" value="10"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     #situational[hero.child[skAnimHand], "Advantage", field[thingname].text]
     #situational[hero.child[skIntim], "Advantage", field[thingname].text]

     doneif (field[abilAct2].value = 0)

     hero.childfound[svSTR].field[Bonus].value += 2
     hero.childfound[svCON].field[Bonus].value += 2
     hero.childfound[skAthletic].field[Bonus].value += 2]]></eval>
    </thing>
  <thing id="c5CFtrStnRn" name="Stone Rune" description="While wearing or carrying an object with this rune, your Wisdom (Insight) checks are made with advantage and you have 120 feet of darkvision.\n\nAdditionally, when a creature visible to you ends its turn within 30 feet of you, you can take a reaction to invoke the rune. The creature must make a Wisdom save. On a failure, the creature becomes charmed by you for 1 minute. While so charmed, it has a speed of 0 and is incapacitated in a dreaming stupor. It can repeat the save at the end of each off its turns, ending the effect with a successful save. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Advantage on Insight, 120 ft. darkvision, and reaction to charm nearby creature." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <fieldval field="abRange" value="30"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="User" tag="Activation"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="aWIS"/>
    <tag group="StandardDC" tag="aCON"/>
    <bootstrap thing="raDarkVis">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     #situational[hero.child[skInsight], "Advantage", field[thingname].text]]]></eval>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    </thing>
  <thing id="c5CFtrHilRn" name="Hill Rune" description="While wearing or carrying an object with this rune, your saves versus being poisoned are made with advantage and you are resistant to poison damage.\n\nAdditionally, you can use a bonus action to invoke this rune, granting yourself resistance to bludgeoning, piercing, and slashing damage for 1 minute. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Advantage on saves and resistance versus poison, and bonus action to resist bludgeoning, piercing, and slashing." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <fieldval field="actName2" value="Active (1 minute)"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     perform hero.assign[DamageRes.dtPoison]
     #situational[hero.child[svAll], "Advantage versus poison", field[thingname].text]

     doneif (field[abilAct2].value = 0)

     perform hero.assign[DamComRes.dcBluPiSla]]]></eval>
    <exprreq message="Requires fighter level 7"><![CDATA[#levelcount[Fighter] >= 7]]></exprreq>
    </thing>
  <thing id="c5CFtrStrmR" name="Storm Rune" description="While wearing or carrying an object with this rune, your Intelligence (Arcana) checks are made with advantage and, so long as you&apos;re not incapacitated, you cannot be surprised.\n\nAdditionally, you can use a bonus action to invoke this rune, entering a prophetic state for 1 minute or until you become incapacitated. While in this state, whenever you or another creature visible to and within 60 feet of you makes an attack roll, saving throw, or ability check, you can take a reaction to grant the roll advantage or disadvantage. Once used, you cannot invoke this rune again until you complete a short or long rest." compset="CustomSpec" summary="Advantage on Arcana,  plus bonus action to grant advantage or disadvantage on a roll." uniqueness="unique">
    <fieldval field="usrCandid1" value="component.MyGear &amp; !thingid.gGround &amp;!Helper.Natural &amp; !thingid.gMoney &amp; !Custom.5CFtrRune"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Worn or Carried"/>
    <fieldval field="actName2" value="Active (1 minute)"/>
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abRange" value="60"/>
    <tag group="Helper" tag="Quaternary"/>
    <tag group="abCategory" tag="5CFtrRunes"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="5CFtrRune" name="Rune Knight Runed Object"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Activation"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="Render" priority="50000"><![CDATA[doneif (field[usrChosen1].ischosen = 0)

perform field[usrChosen1].chosen.setfocus

focus.field[livename].text = focus.field[livename].text & " (" & field[name].text & ")"
focus.field[sbName].text = focus.field[livename].text

perform focus.assign[Custom.5CFtrRune]]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)
     doneif (field[abilActive].value = 0)

     perform hero.assign[DamageRes.dtPoison]
     #situational[hero.child[skArcana], "Advantage", field[thingname].text]

     doneif (field[abilAct2].value = 0)

     perform assign[LvNamePar.IncRange]
     perform assign[LvNamePar.IncDurati]]]></eval>
    <exprreq message="Requires fighter level 7"><![CDATA[#levelcount[Fighter] >= 7]]></exprreq>
    </thing>
  <thing id="c5CMnkAstSlf" name="Way of the Astral Self" compset="CustomSpec" uniqueness="unique">
    <comment>Supercedes Trio of Subclasses</comment>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpMnk" name="Monk" abbrev="Monk"/>
    <tag group="abCategory" tag="MnkMonTrad" name="Monk Monastic Tradition" abbrev="Monk Monastic Tradition"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CMnkArmAst">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CMnkVisAst">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CMnkBdyAst">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="c5CMnkAwkSlf">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    </thing>
  <thing id="c5CMnkAwkSlf" name="Awakened Astral Self" description="You&apos;ve fully connected to your astral self. You can use a bonus action and spend 5 ki points to summon your astral self&apos;s arms, visage, and body, all fully awakened for 10 minutes. The awakening ends early on your death or your incapacitation. While awakened, you gain these benefits:\n\n{b}{i}Armor of the Spirit.{/i}{/b} Your Armor Class increases by 2.\n\n{b}{i}Astral Barrage.{/i}{/b} Whenever you attack twice with your Extra Attack feature, you can instead attack three times so long as all these attacks are made with your astral arms." compset="ClSpecial" summary="5 Ki for bonus action to gain +2 AC and 3 Arms attacks for 10 minutes.">
    <fieldval field="actName" value="Active (5 ki, 10 minutes)"/>
    <fieldval field="abText" value="5 ki points"/>
    <tag group="User" tag="Activation"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      hero.child[ArmorClass].field[Bonus].value += 2]]></eval>
    </thing>
  <thing id="c5CMnkArmAst" name="Arms of the Astral Self" description="You can use a bonus action to spend 1 ki point to summon the arms of your astral self. When this happens, every creature of your choice that is visible to and within 10 feet of you must make a Dexterity save. On a failure, such a creature takes force damage equal to two rolls of your Martial Arts die.\n\nFor 10 minutes, these astral arms either hover from your shoulders or surround your arms (your choice.) They vanish early if you die or become incapacitated. For their duration, you gain these benefits:\n\n• You can use your Wisdom modifier in place of Strength for your Strength checks and saving throws.\n• The arms can be used to make unarmed strikes.\n• Unarmed strikes made on your turn with the arms have an extra 5 feet to their range.\n• Unarmed strikes made with the arms can use your Wisdom modifier in place of Strength or Dexterity for their attack and damage rolls, and the damage type becomes force." compset="ClSpecial" summary="1 ki point bonus action to summon astral arms for unarmed attacks using Wisdom.">
    <fieldval field="abText" value="1 ki point, bonus action"/>
    <fieldval field="actName" value="Active (1 ki, 10 minutes)"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="User" tag="Activation"/>
    <tag group="FeatureTyp" tag="Special"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iAct as number
      iAct = field[abilActive].value + hero.childfound[c5CMnkAwkSlf].field[abilActive].value
      doneif (iAct = 0)

      hero.childfound[svSTR].field[svAttr].value = maximum(hero.childfound[svSTR].field[svAttr].value,hero.childfound[aWIS].field[aModBonus].value)
      hero.childfound[skAthletic].field[skAttrBon].value = maximum(hero.childfound[skAthletic].field[skAttrBon].value,hero.childfound[aWIS].field[aModBonus].value)

      foreach pick in hero from BaseNatWep where "thingid.wUnarmed"
         eachpick.field[wReach].value += 5
         perform eachpick.assign[DamageOpt.aWIS]
         perform eachpick.assign[MelAttOpt.aWIS]
         nexteach]]></eval>
    </thing>
  <thing id="c5CMnkVisAst" name="Visage of the Astral Self" description="You can use a bonus action to summon the visage of your astral self with 1 ki point for 10 minutes. This can be the same bonus action that activates your Arms of the Astral Self. It ends early if you die or become incapacitated.\n\nYou determine the appearance of the visage, and it covers your face like a helmet or mask. While it is present, it grants you these benefits:\n\n{b}{i}Astral Sight.{/i}{/b} You can see normally in both nonmagical and magical darkness out to 120 feet.\n\n{b}{i}Wisdom of the Spirit.{/i}{/b} Your Wisdom (Insight) and Charisma (Intimidation) checks have advantage.\n\n{b}{i}Word of the Spirit.{/i}{/b} You can direct your spoken words to be hearable only to a single creature of your choice, visible to and within 60 feet of you. Alternatively, you can make your voice loud enough for all creatures within 600 feet to hear." compset="ClSpecial" summary="1 ki point bonus action to summon astral visage.">
    <fieldval field="abText" value="1 ki point, bonus action"/>
    <fieldval field="actName" value="Active (1 ki, 10 minutes)"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="StandardDC" tag="aWIS"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="User" tag="Activation"/>
    <tag group="FeatureTyp" tag="Special"/>
    <bootstrap thing="raDarkVis">
      <containerreq phase="First" priority="200"><![CDATA[fieldval:abValue <> 0]]></containerreq>
      <autotag group="Value" tag="120"/>
      </bootstrap>
    <eval phase="First" index="2"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iAct as number
      iAct = field[abilActive].value + hero.childfound[c5CMnkAwkSlf].field[abilActive].value
      doneif (iAct = 0)

      field[abValue].value = 1]]></eval>
    <eval phase="PostAttr" priority="5000"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iAct as number
      iAct = field[abilActive].value + hero.childfound[c5CMnkAwkSlf].field[abilActive].value
      doneif (iAct = 0)

     #situational[hero.child[skIntim], "Advantage", field[thingname].text]
     #situational[hero.child[skInsight], "Advantage", field[thingname].text]]]></eval>
    </thing>
  <thing id="c5CMnkBdyAst" name="Body of the Astral Self" description="While both your astral arms and astral visage are present, you can cause the body of your astral self to appear, without any additional action required. The spectral body covers your physical body similar to armor, and it connects to the arms and visage. You determine what it looks like.\n\nWhile the astral body is present, it grants you these benefits:\n\n{b}{i}Deflect Energy.{/i}{/b} You can use a reaction to deflect acid, cold, fire, force, lightning, or thunder damage when you take it. Doing so causes the damage to be reduced by 1d10 + your Wisdom modifier (a minimum of 1 damage reduced).\n\n{b}{i}Empowered Arms.{/i}{/b} Once on each of your turns when you hit a target with your astral arms, you can deal extra damage to the target equaling one of your Martial Arts dice." compset="ClSpecial" summary="Summon body of astral self for damage deflection and extra damage.">
    <fieldval field="actName" value="Active"/>
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="User" tag="Activation"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iAct as number
      if (hero.childfound[c5CMnkAwkSlf].field[abilActive].value <> 0) then
         iAct += 1
         endif

      var iAct2 as number

      iAct2 = field[abilActive].value + hero.childfound[c5CMnkArmAst].field[abilActive].value + hero.childfound[c5CMnkVisAst].field[abilActive].value
      if (iAct2 = 3) then 
        iAct += 1
        endif

      doneif (iAct = 0)

      var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = "deflect 1d10" & iSign & hero.childfound[aWIS].field[aModBonus].value & ", extra " & hero.childfound[cMnkMarArt].field[abText].text & " damage 1/turn"]]></eval>
    </thing>
  <thing id="c5CFtrPsiDie" name="Psionic Energy Dice" description="The psionic energy you have within yourself is represented by your Psionic Energy dice, each of which are a d6. You have a number of these equaling double your proficiency bonus, and they fuel your psionic powers. Some of these powers spend dice. If you have no dice left to spend, you cannot use such a power. You regain all spent dice when you complete  a long rest. You can also use a bonus action to restore one die, but you cannot do so again until you complete a short or long rest.\n\nThe size of your Psionic Energy dice increases to d8 at 5th level, d10 at 11th level, and d12 at 17th level." compset="CustomSpec" uniqueness="unique">
    <tag group="LvNamePar" tag="AppText2"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[var iNum as number

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value * 2

if (hero.tagcount[Classes.Fighter] >= 17) then
   field[abText].text = "1d12"
elseif (hero.tagcount[Classes.Fighter] >= 11) then
   field[abText].text = "1d10"
elseif (hero.tagcount[Classes.Fighter] >= 5) then
   field[abText].text = "1d8"
else
   field[abText].text = "1d6"
endif

if (hero.childlives[c5CRogSoulKn] <> 0) then
   field[abText].text &= ","
   field[abText2].text = "Psi Warrior"
   endif]]></eval>
    </thing>
  <thing id="c5CFtrPsiWar" name="Psi Warrior" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE" parent="p5eBooks" name="Tasha&apos;s Cauldron of Everything"/>
    <tag group="SpecSource" tag="cHelpFtr" name="Fighter" abbrev="Fighter"/>
    <tag group="Helper" tag="Secondary" name="Secondary" abbrev="Secondary"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CFtrGrdMnd">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CFtrTelMst">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="c5CFtrBlwFrc">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="c5CFtrPsiPwr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CFtrTelAdp">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    </thing>
  <thing id="c5CFtrPsiPwr" name="Psionic Power" description="The psionic energy you have within yourself is represented by your Psionic Energy dice, each of which are a d6. You have a number of these equaling double your proficiency bonus, and they fuel your psionic powers. Some of these powers spend dice. If you have no dice left to spend, you cannot use such a power. You regain all spent dice when you complete  a long rest. You can also use a bonus action to restore one die, but you cannot do so again until you complete a short or long rest.\n\nThe size of your Psionic Energy dice increases to d8 at 5th level, d10 at 11th level, and d12 at 17th level.\n\n{b}Protective Field.{/b} When you or another creature visible to and within 30 feet of you is damaged, you can use a reaction to expend one Psionic Energy die, rolling it. Reduce the damage taken by the number rolled, plus your Intelligence modifier (a minimum reduction of 1 damage).\n\n{b}Psionic Strike.{/b} Once per each of your turns, immediately after you hit a target within 30 feet of you with an attack and deal damage to it using a weapon, you can spend one of your Psionic Energy dice. Roll it, and deal force damage equal to the number rolled plus your Intelligence modifier.\n\n{b}Telekinetic Movement.{/b} You can use an action to target one loose, Large or smaller object or one willing creature besides yourself, visible to and within 30 feet of you. You move the target up to 30 feet to an open space you can see. Alternatively, if it is a Tiny object, you can move it to or from your hand. Wither way, you can move the target horizontally, vertically, or both. Once you&apos;ve used this action, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again." compset="ClSpecial" summary="You have Psionic Energy dice that power your abilities.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CFtrPrtFld">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CFtrPsiDie">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CFtrPsiStr">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CFtrTelMov">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 3]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CFtrPrtFld" name="Protective Field" description="When you or another creature visible to and within 30 feet of you is damaged, you can use a reaction to expend one Psionic Energy die, rolling it. Reduce the damage taken by the number rolled, plus your Intelligence modifier (a minimum reduction of 1 damage)." compset="CustomSpec" summary="Reaction to spend 1 Psionic die to reduce damage taken by another creature." uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <eval phase="Final" priority="101"><![CDATA[      doneif (tagis[Helper.Disable] <> 0)

      var iSign as string
      if (hero.childfound[aINT].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = hero.childfound[c5CFtrPsiDie].field[abText].text & iSign & hero.childfound[aINT].field[aModBonus].value & " reduction"]]></eval>
    </thing>
  <thing id="c5CFtrPsiStr" name="Psionic Strike" description="Once per each of your turns, immediately after you hit a target within 30 feet of you with an attack and deal damage to it using a weapon, you can spend one of your Psionic Energy dice. Roll it, and deal force damage equal to the number rolled plus your Intelligence modifier." compset="CustomSpec" summary="Spend Psionic die to add force damage to a hitting attack." uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final" priority="101"><![CDATA[      doneif (tagis[Helper.Disable] <> 0)

      var iSign as string
      if (hero.childfound[aINT].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = hero.childfound[c5CFtrPsiDie].field[abText].text & iSign & hero.childfound[aINT].field[aModBonus].value & " force, 1/turn"]]></eval>
    </thing>
  <thing id="c5CFtrTelMov" name="Telekinetic Movement" description="You can use an action to target one loose, Large or smaller object or one willing creature besides yourself, visible to and within 30 feet of you. You move the target up to 30 feet to an open space you can see. Alternatively, if it is a Tiny object, you can move it to or from your hand. Wither way, you can move the target horizontally, vertically, or both. Once you&apos;ve used this action, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again." compset="CustomSpec" summary="Move an object or creature up to 30 feet telekinetically." uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <fieldval field="trkMax" value="1"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="abAction" tag="Action"/>
    </thing>
  <thing id="c5CFtrTelAdp" name="Telekinetic Adept" description="You have new telekinetic abilities:\n\n{b}Psi-Powered Leap.{/b} You can use a bonus action to gain a flying speed equal to twice your walking speed until the end of the current turn. Once you&apos;ve used this ability, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again.\n\n{b}Telekinetic Thrust.{/b} When you deal damage to a target with your Psionic Strike, you can force that target to make a Strength save. The DC is equal to 8 + your proficiency bonus + your Intelligence modifier. If the target fails the save, you knock it prone or move it up to 10 feet in any direction horizontally." compset="ClSpecial" summary="Your telekinetic abilities improve.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CFtrPsPwLp">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 7]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CFtrTelThr">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Fighter >= 7]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CFtrPsPwLp" name="Psi-Powered Leap" description="You can use a bonus action to gain a flying speed equal to twice your walking speed until the end of the current turn. Once you&apos;ve used this ability, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again." compset="CustomSpec" summary="Bonus action to gain flight speed for one turn." uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)

       var Speed as number

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)
       Speed *= 2

       field[abText].text = Speed & " ft. flight"]]></eval>
    </thing>
  <thing id="c5CFtrTelThr" name="Telekinetic Thrust" description="When you deal damage to a target with your Psionic Strike, you can force that target to make a Strength save. The DC is equal to 8 + your proficiency bonus + your Intelligence modifier. If the target fails the save, you knock it prone or move it up to 10 feet in any direction horizontally." compset="CustomSpec" summary="Psionic Strike can force save to move or knock prone an enemy." uniqueness="unique">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="abSave" tag="aSTR"/>
    <tag group="StandardDC" tag="aINT"/>
    </thing>
  <thing id="c5CFtrGrdMnd" name="Guarded Mind" description="You are resistant to psychic damage. Moreover, if you begin your turn charmed or frightened, you can spend a Psionic Energy die to end any and all effects on you that are causing those conditions." compset="ClSpecial" summary="Psychic resistance and can spend Psionic die to end charm or frightened conditions.">
    <tag group="FeatureTyp" tag="Special" name="Special" abbrev="Special"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <eval phase="Final"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       perform hero.assign[DamageRes.dtPsychic]]]></eval>
    </thing>
  <thing id="c5CFtrBlwFrc" name="Bulwark of Force" description="You can use a bonus action to choose a number of creatures visible to and within 30 feet of you, including yourself, equal to your Intelligence modifier (a minimum of one creature). Each creature chosen has half cover for 1 minute, or until you become incapacitated, whichever comes first.\n\nOnce you&apos;ve used this ability, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again." compset="ClSpecial" summary="Bonus action to grant nearby creatures half cover.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="10000"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iINT as number
      var iPlur as string

      iINT = maximum(1,hero.childfound[aINT].field[aModBonus].value)
      if (iINT <> 1) then
         iPlur = "s"      
         endif

      field[abText].text = iINT & " creature" & iPlur]]></eval>
    </thing>
  <thing id="c5CFtrTelMst" name="Telekinetic Master" description="You can cast {i}telekinesis{/i} without components, using Intelligence as your spellcasting ability. On each of your turns while you&apos;re concentrating on the spell, including the turn on which you cast it, you can use a bonus action to make one weapon attack.\n\nOnce you&apos;ve used this ability to cast the spell, you cannot do so again until you complete a short or long rest, or spend one Psionic Energy die to use it again." compset="ClSpecial" summary="Cast Telekinesis once per short or long rest without components.">
    <bootstrap thing="spTelekine">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="ShortRest"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    </thing>
  <thing id="c5CRogPsiDie" name="Psionic Energy Dice" description="The psionic energy you have within yourself is represented by your Psionic Energy dice, each of which are a d6. You have a number of these equaling double your proficiency bonus, and they fuel your psionic powers. Some of these powers spend dice. If you have no dice left to spend, you cannot use such a power. You regain all spent dice when you complete  a long rest. You can also use a bonus action to restore one die, but you cannot do so again until you complete a short or long rest.\n\nThe size of your Psionic Energy dice increases to d8 at 5th level, d10 at 11th level, and d12 at 17th level." compset="CustomSpec" uniqueness="unique">
    <tag group="LvNamePar" tag="AppText2"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[var iNum as number

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value * 2

if (hero.tagcount[Classes.Rogue] >= 17) then
   field[abText].text = "1d12"
elseif (hero.tagcount[Classes.Rogue] >= 11) then
   field[abText].text = "1d10"
elseif (hero.tagcount[Classes.Rogue] >= 5) then
   field[abText].text = "1d8"
else
   field[abText].text = "1d6"
endif

if (hero.childlives[c5CFtrPsiWar] <> 0) then
   field[abText].text &= ","
   field[abText2].text = "Soulknife"
   endif]]></eval>
    </thing>
  <thing id="c5CRogSoulKn" name="Soulknife" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpRog" name="Rogue" abbrev="Rogue"/>
    <tag group="abCategory" tag="RogArchety" name="Rogue Archetype" abbrev="Rogue Archetype"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CRogPsiPwr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CRogSlBlds">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="c5CRogPsyVel">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="c5CRogRndMnd">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="c5CRogPsyBld">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CRogPsiPwr" name="Psionic Power" description="The psionic energy you have within yourself is represented by your Psionic Energy dice, each of which are a d6. You have a number of these equaling double your proficiency bonus, and they fuel your psionic powers. Some of these powers spend dice. If you have no dice left to spend, you cannot use such a power. You regain all spent dice when you complete  a long rest. You can also use a bonus action to restore one die, but you cannot do so again until you complete a short or long rest.\n\nThe size of your Psionic Energy dice increases to d8 at 5th level, d10 at 11th level, and d12 at 17th level.\n\n{b}Psi-Bolstered Knack.{/b} If you fail an ability check with a proficient skill or tool, you can roll a Psionic Energy die and add the result to the check, potentially making that check a success. The die is only expended if the roll succeeds.\n\n{b}Psychic Whispers.{/b} You can use an action to choose one or more creatures you can see, up to a total equaling your proficiency bonus, then roll a Psionic Energy die. For a number of hours equaling the rolled number, all chosen creatures can speak telepathically with you, and you with them. No action is required to send or receive a message, and the ability works at a distance of up to 1 mile. Creatures that cannot speak any language cannot use this telepathy, but you don&apos;t need to share a common language with the chosen creatures. A creature can freely end the connection at any time." compset="ClSpecial" summary="You have Psionic Energy dice that power your abilities.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CRogPsBlKn">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Rogue >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CRogPsiDie">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Rogue >= 3]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CRogPsyWhs">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Rogue >= 3]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CRogPsBlKn" name="Psi-Bolstered Knack" description="If you fail an ability check with a proficient skill or tool, you can roll a Psionic Energy die and add the result to the check, potentially making that check a success. The die is only expended if the roll succeeds." compset="CustomSpec" summary="Add the roll of a Psionic die to a failed ability check." uniqueness="unique">
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CRogPsyWhs" name="Psychic Whispers" description="You can use an action to choose one or more creatures you can see, up to a total equaling your proficiency bonus, then roll a Psionic Energy die. For a number of hours equaling the rolled number, all chosen creatures can speak telepathically with you, and you with them. No action is required to send or receive a message, and the ability works at a distance of up to 1 mile. Creatures that cannot speak any language cannot use this telepathy, but you don&apos;t need to share a common language with the chosen creatures. A creature can freely end the connection at any time.\n\nThe first time you use this ability after a long rest, the Psionic Energy die is not expended. But any other times you use it expends a die." compset="CustomSpec" summary="Set up telepathy with allied creatures." uniqueness="unique">
    <fieldval field="abRange" value="1"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="abRange" tag="Mile"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="abAction" tag="Action"/>
    <eval phase="Final" priority="5000"><![CDATA[
      doneif (tagis[Helper.Disable] <> 0)

      field[abText].text = hero.childfound[ProfBonus].field[tProfBonus].value & " creatures, " & hero.childfound[c5CRogPsiDie].field[abText].text & " hours"]]></eval>
    </thing>
  <thing id="w5CPsyBld" name="Psychic Blade" compset="Weapon">
    <fieldval field="gWeight" value="1"/>
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="6"/>
    <fieldval field="wRangeNorm" value="60"/>
    <usesource source="5eTCoE"/>
    <tag group="wProperty" tag="Thrown" name="Thrown" abbrev="Thrown"/>
    <tag group="wCategory" tag="Melee" name="Melee Weapon" abbrev="Melee"/>
    <tag group="wCategory" tag="RangeThrow" name="Thrown Weapon" abbrev="Thrown"/>
    <tag group="wProfReq" tag="Simple" name="Simple" abbrev="Simple"/>
    <tag group="wProperty" tag="Finesse" name="Finesse" abbrev="Finesse"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="NoSelect"/>
    <tag group="Helper" tag="NoOutGear"/>
    <tag group="wProperty" tag="Light" name="Light" abbrev="Light"/>
    <tag group="DamageType" tag="dtPsychic"/>
    </thing>
  <thing id="w5CPsyBldO" name="Psychic Blade (bonus action, 2nd attack)" compset="Weapon">
    <fieldval field="gWeight" value="1"/>
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="4"/>
    <fieldval field="wRangeNorm" value="60"/>
    <usesource source="5eTCoE"/>
    <tag group="wProperty" tag="Thrown" name="Thrown" abbrev="Thrown"/>
    <tag group="wCategory" tag="Melee" name="Melee Weapon" abbrev="Melee"/>
    <tag group="wCategory" tag="RangeThrow" name="Thrown Weapon" abbrev="Thrown"/>
    <tag group="wProfReq" tag="Simple" name="Simple" abbrev="Simple"/>
    <tag group="wProperty" tag="Finesse" name="Finesse" abbrev="Finesse"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="NoSelect"/>
    <tag group="Helper" tag="NoOutGear"/>
    <tag group="wProperty" tag="Light" name="Light" abbrev="Light"/>
    <tag group="DamageType" tag="dtPsychic"/>
    </thing>
  <thing id="c5CRogPsyBld" name="Psychic Blades" description="When you use the Attack action, you can manifest a psychic blade in your free hand and use it to make the attack. The blade is a simple melee weapon, with the finesse and thrown properties. Its normal range is 60, with no long range. On a hit, it deals psychic damage equal to 1d6 plus the ability modifier used for the attack roll. The blade vanishes immediately after the attack, hit or miss, and leaves no mark on the target if it deals damage.\n\nAfter you attack with the blade, you can use a bonus action to attack with a second psychic blade on the same turn, assuming you have a free hand in which to create it. The attack can be a melee or ranged weapon attack, and its damage die is 1d4 instead of 1d6." compset="ClSpecial" summary="Create and attack with a psychic blade.">
    <bootstrap thing="w5CPsyBld"></bootstrap>
    <bootstrap thing="w5CPsyBldO"></bootstrap>
    </thing>
  <thing id="c5CRogSlBlds" name="Soul Blades" description="Your Psionic Blades now benefit from these features:\n\n{b}Homing Strikes.{/b} If you make a Psychic Blade attack that misses its target, you can roll a Psionic Energy die and add the result to the attack roll. If this causes the attack to now hit, the die is expended.\n\n{b}Psychic Teleportation.{/b} You can use a bonus action to manifest a Psychic Blade, spend and roll a Psionic Energy die, and throw the blade at an open space you can see, up to a number of feet equal to 10 times the die roll. You then teleport to that space, and the blade disappears." compset="ClSpecial" summary="Your psionic blades gain Homing Strikes and Psychic Teleportation.">
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="c5CRogHmgStr">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Rogue >= 9]]></containerreq>
      </bootstrap>
    <bootstrap thing="c5CRogPsyTel">
      <containerreq phase="First" priority="300"><![CDATA[count:Classes.Rogue >= 9]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="c5CRogHmgStr" name="Homing Strikes" description="If you make a Psychic Blade attack that misses its target, you can roll a Psionic Energy die and add the result to the attack roll. If this causes the attack to now hit, the die is expended." compset="CustomSpec" summary="Add a Psionic die to a missed attack roll." uniqueness="unique">
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CRogPsyTel" name="Psychic Teleportation" description="You can use a bonus action to manifest a Psychic Blade, spend and roll a Psionic Energy die, and throw the blade at an open space you can see, up to a number of feet equal to 10 times the die roll. You then teleport to that space, and the blade disappears." compset="CustomSpec" summary="Use a Psionic die, throw a psychic blade, and teleport there." uniqueness="unique">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncAction"/>
    <eval phase="Final" priority="5000"><![CDATA[
      doneif (tagis[Helper.Disable] <> 0)

      field[abText].text = "10x" & hero.childfound[c5CRogPsiDie].field[abText].text & " feet"]]></eval>
    </thing>
  <thing id="c5CRogPsyVel" name="Psychic Veil" description="You can use an action to magically become invisible, including anything worn or carried by you, for 1 hour. You can freely dismiss the effect, requiring no action. If you deal damage to a creature or force it to make a saving throw, the invisibility ends early.\n\nOnce you&apos;ve used this feature, you cannot use it again until you complete a long rest or spend a Psionic Energy die to use it again." compset="ClSpecial" summary="Invisibility for 1 hour.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abAction" tag="Action"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Hour"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    </thing>
  <thing id="c5CRogRndMnd" name="Rend Mind" description="When you use your Psychic Blades to deal Sneak Attack damage to a creature, you can force the target to make a Wisdom save. The DC equals 8 + your proficiency bonus + your Dexterity modifier. If the creature fails the save, it is stunned for 1 minute. It can repeat the saving throw at the end of each of its turns, ending the stun on a successful save.\n\nOnce you&apos;ve used this feature, you cannot use it again until you complete a long rest or spend a Psionic Energy die to use it again." compset="ClSpecial" summary="Stun a creature damaged with Sneak Attack by your psychic blades.">
    <fieldval field="trkMax" value="1"/>
    <tag group="abAction" tag="None"/>
    <tag group="User" tag="Tracker"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abSave" tag="aWIS"/>
    <tag group="StandardDC" tag="aDEX"/>
    </thing>
  <thing id="c5CRogPhant" name="Phantom" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpRog" name="Rogue" abbrev="Rogue"/>
    <tag group="abCategory" tag="RogArchety" name="Rogue Archetype" abbrev="Rogue Archetype"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CRogWlsGrv">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CRogTokDep">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="c5CRogGhsWlk">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="c5CRogDthFrn">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="c5CRogWhsDea">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CRogWhsDea" name="Whispers of the Dead" description="Whenever you finish a short or long rest, you can pick one skill or tool that you are not proficient with. You gain proficiency with that skill or tool until you use this feature to select a different one." compset="ClSpecial" summary="Choose a skill or tool to become proficient with each rest.">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="FeatureTyp" tag="Special"/>
    <bootstrap thing="cfg5CWhsDea"></bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)

    var NumOfProf as number

    NumOfProf = 1

    ~ If a combination of Tools/Skills is allowed add here
    if (NumOfProf <> 0) then
      hero.childfound[cfg5CWhsDea].field[cToolMax].value += NumOfProf
      hero.childfound[cfg5CWhsDea].field[cSkillMax].value += NumOfProf
    endif]]></eval>
    </thing>
  <thing id="cfg5CWhsDea" name="Whispers of the Dead" description="Whenever you finish a short or long rest, you can pick one skill or tool that you are not proficient with. You gain proficiency with that skill or tool until you use this feature to select a different one." compset="Configure" uniqueness="unique">
    <fieldval field="cSkCandExp" value="component.BaseSkill &amp; !Helper.Obsolete"/>
    <fieldval field="cSkCandEx2" value="component.BaseSkill &amp; !Helper.Obsolete"/>
    <fieldval field="cTlCandExp" value="component.Tool &amp; !Helper.Obsolete"/>
    <fieldval field="cTlCandEx2" value="component.Tool &amp; !Helper.Obsolete"/>
    <eval phase="Attr" priority="10000"><![CDATA[
      ~ The below logic is needed because we have two seperate lists
      ~ for tools & skills. But we need to allow for a combination
      ~ of tools/skills to be chosen.

      ~ Total up all the skills and tools that have been chosen
      field[cPhaStart].value += field[cSkillCur].value + field[cToolCur].value

      ~ Set the Used values for both Tools/Skills to be the same
      field[cToolCur].value = field[cPhaStart].value
      field[cSkillCur].value = field[cPhaStart].value]]></eval>
    </thing>
  <thing id="c5CRogWlsGrv" name="Wails from the Grave" description="Immediately after you deal Sneak Attack damage to a creature on your turn, you can select a second creature visible to you and within 30 feet of the first creature. Roll half the total number of Sneak Attack dice for your level (round up) and deal necrotic damage equal to the total roll to the second creature.\n\nYou can use this ability a number of times equal to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Deal half sneak attack damage to second creature on attack.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final" priority="11000" index="2"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)

    var iSnk as number

    iSnk = hero.childfound[cSneakAtt].field[abValue].value
    iSnk /= 2
    iSnk = round(iSnk,0,1)

    field[abText].text = iSnk & "d6 necrotic"]]></eval>
    <eval phase="PostAttr" priority="5000"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)


    field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CRogTokDep" name="Tokens of the Departed" description="When a creature visible to you dies within 30 feet of you, you can use a reaction to cause a Tiny soul trinket to appear in a free hand of yours. The DM determines to trinket&apos;s form or has you roll on the PHB&apos;s Trinkets table for it. You can have a total number of soul trinkets equal to your proficiency bonus, and you cannot create one when you&apos;ve reached this maximum.\n\nYou can use soul trinkets in these ways:\n• While you have a soul trinket on your person, your death saves and Constitution saves are made with advantage.\n• When you deal Sneak Attack damage during your turn, you can destroy a soul trinket that&apos;s on your person. You immediately then use Wails from the Grave, without expending a use of it.\n• You can use an action to destroy one of your soul trinkets, regardless of where it is. You can them ask its spirit one question. It appears to you and answers in a language that it knew during its life. It does not have to be truthful, and it is as concise as possible. It only knows what it knew in life, which is determined by your DM." compset="ClSpecial" summary="Use a reaction to create a Soul Trinket from a dying creature.">
    <fieldval field="abRange" value="30"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="AWSouls"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)


    field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="tr5CRogSlTrn" name="Soul Trinket" description="Soul Trinket" compset="Trinket">
    <fieldval field="shortname" value="Soul Trinket"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="EquipMag"/>
    <prereq message="Requires Phantom Rogue level 9">
      <validate><![CDATA[var total as number

if (#levelcount[Rogue] >= 9) then
total +=1
endif

if (hero.childlives[c5CRogPhant] <> 0) then
total +=1
endif

if (total >= 2) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="c5CRogGhsWlk" name="Ghost Walk" description="You can use a bonus action to assume a ghostly form. While in the form, you have a flying speed of 10 feet and can hover, and attack rolls have disadvantage against you. You can move through creatures and objects, treating them as difficult terrain, but you suffer 1d10 force damage if you end your turn inside one.\n\nYou can use a bonus action to end this form; otherwise you stay in it for 10 minutes. Once you&apos;ve used this feature, you must complete a long rest or destroy a soul trinket to use it again. Destroying the trinket can be part of the bonus action to activate this feature." compset="ClSpecial" summary="Bonus action to assume ghostly form for 10 minutes.">
    <fieldval field="actName" value="Active (10 minutes)"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="10"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Tracker"/>
    <tag group="User" tag="Activation"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="IncAction"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="abDuration" tag="Minute"/>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="10"/>
      </bootstrap>
    </thing>
  <thing id="c5CRogDthFrn" name="Death&apos;s Friend" description="As you grow closer to the powers of death, you gain these benefits:\n\n• Your Wails from the Grave feature deals the necrotic damage to both the first and second creature.\n• When you complete a long rest and have no soul trinkets, one appears in your hand." compset="ClSpecial" summary="Wails from the Grave damages both, and gain a free Soul Trinket on a long rest."></thing>
  <thing id="c5CWlkFthmls" name="The Fathomless" description="{b}Fathomless Expanded Spells{/b}\nWhen you learn new spells, you can choose from the spells below, in addition to the Warlock spell list. The level listed below corresponds with the level of the spell, not your warlock level.\n\n{b}Level   Spells{/b}\n{b}1st{/b}       {i}create or destroy water{/i}, {i}thunderwave{/i}\n{b}2nd{/b}      {i}gust of wind{/i}, {i}silence{/i}\n{b}3rd{/b}      {i}lightning bolt{/i}, {i}sleet storm{/i}\n{b}4th{/b}      {i}control water{/i}, {i}summon elemental (water only){/i}\n{b}5th{/b}      {i}arcane hand (looks like s a tentacle){/i}, {i}cone of cold{/i}" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpWlk" name="Warlock" abbrev="Warlock"/>
    <tag group="ClsAllowSp" tag="spArcaHand"/>
    <tag group="ClsAllowSp" tag="spConeCold"/>
    <tag group="ClsAllowSp" tag="spContWate"/>
    <tag group="ClsAllowSp" tag="spCreaor"/>
    <tag group="ClsAllowSp" tag="spGustWind"/>
    <tag group="ClsAllowSp" tag="spLighBolt"/>
    <tag group="ClsAllowSp" tag="spSilence"/>
    <tag group="ClsAllowSp" tag="spSleeStor"/>
    <tag group="ClsAllowSp" tag="sp5CSumEle"/>
    <tag group="ClsAllowSp" tag="spThunderw"/>
    <tag group="abCategory" tag="WlkOthPatr" name="Warlock Otherworldly Patron" abbrev="Warlock Otherworldly Patron"/>
    <bootstrap thing="c5CWlkTbtDps">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CWlkGftSea">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CWlkOcncSl">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CWlkGrdCoi">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CWlkGrsTnt">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CWlkFthPln">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000">doneif (islinkage[table] = 0)

      perform linkage[table].pushtags[ClsAllowSp.?]</eval>
    <eval phase="Final" index="2"><![CDATA[foreach pick in hero from BaseSpell where "SpellType.cHelpWlk"
  if (eachpick.tagis[thingid.sp5CSumEle] <> 0) then
    eachpick.field[sNameMod].text = "water only"
    endif
  if (eachpick.tagis[thingid.spArcaHand] <> 0) then
    eachpick.field[sNameMod].text = "appears as a tentacle"
    endif
  nexteach]]></eval>
    </thing>
  <thing id="c5CWlkTbtDps" name="Tentacle of the Deeps" description="You can use a bonus action to magically summon a 10-foot-long spectral tentacle at a point visible to and within 60 feet of you. It last for 1 minute or until you use this feature to summon another tentacle.\n\nUpon creating the tentacle, you can make a melee spell attack against a single creature within 10 feet of it. On a hit, the creature suffers 1d8 cold damage, and its speed is reduced by 10 feet until the beginning of your next turn. The damage increases to 2d8 when you reach warlock level 10.\n\nOn your turn, you can use a bonus action to move the tentacle up to 30 feet and make the attack again.\n\nThe tentacle can be summoned a number of times equaling your proficiency bonus, and you regain all spent uses of it when you complete a long rest." compset="ClSpecial" summary="Bonus action to summon an attacking tentacle.">
    <fieldval field="abRange" value="60"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncAction"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <eval phase="Final"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)


    field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value

    if (hero.tagcount[Classes.Warlock] >= 10) then
      field[abText].text = "2d8 cold"
    else
      field[abText].text = "1d8 cold"
    endif]]></eval>
    </thing>
  <thing id="c5CWlkGftSea" name="Gift of the Sea" description="You have 40 ft. of swimming speed, and you are able to breathe underwater." compset="ClSpecial" summary="You have 40 ft. of swimming speed, and can breathe underwater.">
    <bootstrap thing="xSwim">
      <autotag group="Value" tag="40"/>
      </bootstrap>
    </thing>
  <thing id="c5CWlkOcncSl" name="Oceanic Soul" description="You are now resistant to cold damage. Moreover, when you are completely submerged, any creature that is likewise submerged can understand your speech, and you theirs." compset="ClSpecial" summary="You are resistant to cold and can speak underwater.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (tagis[Helper.Disable] <> 0)

       perform hero.assign[DamageRes.dtCold]]]></eval>
    </thing>
  <thing id="c5CWlkGrdCoi" name="Guardian Coil" description="When you or a creature visible to you takes damage while within 10 feet of your Tentacle of the Deeps, you can use a reaction to choose once of those creatures and reduce the damage taken by 1d8. The damage reduction increases to 2d8 when you reach warlock level 10." compset="ClSpecial" summary="Reaction to use Tentacle to reduce damage taken.">
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <eval phase="Final"><![CDATA[
    doneif (tagis[Helper.ShowSpec] = 0)
    doneif (tagis[Helper.Disable] <> 0)

    if (hero.tagcount[Classes.Warlock] >= 10) then
      field[abText].text = "2d8 reduction"
    else
      field[abText].text = "1d8 reduction"
    endif]]></eval>
    </thing>
  <thing id="c5CWlkGrsTnt" name="Grasping Tentacles" description="You learn the {i}Evard&apos;s black tentacles{/i} spell as a warlock spell. It does not count against the total number of spells you know. You can also cast it once without using a spell slot, and you regain the ability to do so when you complete a long rest.\n\nWhenever you cast it, your patron&apos;s magic provides you temporary hit points equal to your Warlock level, and damage cannot break your concentration on the spell." compset="ClSpecial" summary="Cast Evard&apos;s black tentacles, gain temp HP when doing so.">
    <fieldval field="actName" value="Evard&apos;s black tentacles active"/>
    <tag group="User" tag="Activation"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <bootstrap thing="PoolWlkBls">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="10"/>
      <assignval field="livename" value="Grasping Tentacles Temporary HP"/>
      </bootstrap>
    <bootstrap thing="sp5CHDQEvB">
      <containerreq phase="First" priority="250"><![CDATA[count:Classes.Warlock >= 10]]></containerreq>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Helper" tag="SpellLike"/>
      <assignval field="trkMax" value="1"/>
      </bootstrap>
    <bootstrap thing="sp5CHDQEvB">
      <containerreq phase="First" priority="250"><![CDATA[count:Classes.Warlock >= 10]]></containerreq>
      <autotag group="Helper" tag="Known"/>
      <autotag group="SpellType" tag="cHelpWlk"/>
      <autotag group="Helper" tag="Free"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)
      doneif (field[abilActive].value = 0)

      ~ Add temp HP
      var temphp as number
      temphp = #levelcount[Warlock]
      hero.findchild[TempHpPool,"Value.10"].field[thpMinAllw].value = temphp
      hero.findchild[TempHpPool,"Value.10"].field[thpMaxAllw].value = temphp]]></eval>
    </thing>
  <thing id="c5CWlkFthPln" name="Fathomless Plunge" description="You can use an action to teleport yourself and up to five other willing creatures visible to and within 30 feet of you. Whirling tentacles surround you, causing you to disappear from your current spot and reappear up to 1 mile away in or within 30 feet of a body of water you&apos;ve seen (the size of a pond or larger). You all appear in open spaces within 30 feet of each other.\n\nYou must complete a short or long rest before using this feature again." compset="ClSpecial" summary="Teleport yourself and others to a nearby body of water.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="1"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abRange" tag="Mile"/>
    <tag group="abAction" tag="Action"/>
    <tag group="LvNamePar" tag="IncRange"/>
    </thing>
  <thing id="io5CMercMsk" name="Merciful Mask" compset="Wondrous">
    <arrayval field="usrArray" index="0" value="Raven"/>
    <arrayval field="usrArray" index="1" value="Blank and white"/>
    <arrayval field="usrArray" index="2" value="Crying face"/>
    <arrayval field="usrArray" index="3" value="Laughing face"/>
    <arrayval field="usrArray" index="4" value="Skull"/>
    <arrayval field="usrArray" index="5" value="Butterfly"/>
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="EquipMag"/>
    </thing>
  <thing id="c5CMnkWyMrcy" name="Way of Mercy" compset="CustomSpec" uniqueness="unique">
    <comment>Supercedes Trio of Subclasses</comment>
    <usesource source="5eTCoE" parent="p5eBooks" name="Tasha&apos;s Cauldron of Everything"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpMnk" name="Monk" abbrev="Monk"/>
    <tag group="abCategory" tag="MnkMonTrad" name="Monk Monastic Tradition" abbrev="Monk Monastic Tradition"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CMnkPhyTch">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CMnkFlrHnd">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="c5CMnkHndUlt">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="c5CMnkHndHea">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="io5CMercMsk"></bootstrap>
    <bootstrap thing="c5CMnkImpMrc">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CMnkHndHrm">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CMnkImpMrc" name="Implements of Mercy" description="You become proficient with the Insight and Medicine skills, and with herbalism kits.\n\nYou also gain a special mask, the appearance of which you determine (or can roll for it, see the mask). You often wear it while using this subclass&apos;s features." compset="ClSpecial" summary="Insight, medicine, and herbalism kit proficiency and special mask.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <bootstrap thing="gKitHerbal">
      <autotag group="Proficienc" tag="Tool"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)

perform hero.assign[ProfSkill.skInsight]
perform hero.assign[ProfSkill.skMedicine]]]></eval>
    </thing>
  <thing id="c5CMnkHndHea" name="Hand of Healing" description="You can use an action to spend 1 ki point to touch a creature and restore hit points. The amount restored equals a roll of your Martial Arts die + your Wisdom modifier. \n\nWhen you use your Flurry of Blows, you can replace one of the unarmed strikes with a use of this healing ability. If you do, you do not need to spend the ki point for the healing." compset="ClSpecial" summary="Spend 1 ki to heal creature for Martial Arts die + Wisdom">
    <tag group="abAction" tag="Action"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = "1 ki, " & hero.childfound[cMnkMarArt].field[abText].text & iSign & hero.childfound[aWIS].field[aModBonus].value & " HP"]]></eval>
    </thing>
  <thing id="c5CMnkHndHrm" name="Hand of Harm" description="When you hit a creature with an unarmed strike, you can spend 1 ki point to deal extra necrotic damage. The amount dealt equals a roll of your Martial Arts die + your Wisdom modifier. You can only use this feature once per turn." compset="ClSpecial" summary="Spend 1 ki to deal Martial Arts die + Wisdom mod necrotic damage">
    <fieldval field="trkMax" value="1"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Usage" tag="UsPe5CTurn"/>
    <eval phase="Final"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = "1 ki, " & hero.childfound[cMnkMarArt].field[abText].text & iSign & hero.childfound[aWIS].field[aModBonus].value & " necrotic"]]></eval>
    </thing>
  <thing id="c5CMnkPhyTch" name="Physician&apos;s Touch" description="When you use your Hand of Healing on a creature, you can also end one disease or one of these conditions affecting it: blinded, deafened, paralyzed, poisoned, or stunned.\n\nWhen you use your Hand of Harm on a creature, you can impose the poisoned condition on it until the end of your next turn." compset="ClSpecial" summary="Hand of healing removes a condition, hand of harm poisons.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CMnkFlrHnd" name="Flurry of Healing and Harm" description="When you use Flurry of Blows, you can now replace any and all of the unarmed strikes with a use of your Hand of Healing ability, without using any ki points to heal.\n\nAdditionally, when you make an unarmed strike with Flurry of Blows, you can use Hand of Harm without expending any ki points for Hand of Harm. You can still only use Hand of Harm once per turn." compset="ClSpecial" summary="Can use hands of healing and harm more with flurry of blows."></thing>
  <thing id="c5CMnkHndUlt" name="Hand of Ultimate Mercy" description="You can use an action to touch the corpse of a creature that has died within the last 24 hours. Spending 5 ki points, you return the creature to life with 4d10 + your Wisdom modifier hit points. If it dies while blinded, deafened, paralyzed, poisoned, or stunned, all of those conditions are ended for it." compset="ClSpecial" summary="Spend 5 ki to restore a recently-dead creature to life.">
    <tag group="abAction" tag="Action"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = "5 ki, 4d10" & iSign & hero.childfound[aWIS].field[aModBonus].value]]></eval>
    </thing>
  <thing id="io5CDrdStrMp" name="Star Map" description="Tiny object" compset="Wondrous">
    <arrayval field="usrArray" index="0" value="Constellation-covered scroll"/>
    <arrayval field="usrArray" index="1" value="Hole-filled tablet"/>
    <arrayval field="usrArray" index="2" value="Speckled owlbear hide"/>
    <arrayval field="usrArray" index="3" value="Ebony covered map collection"/>
    <arrayval field="usrArray" index="4" value="Star-projecting crystal"/>
    <arrayval field="usrArray" index="5" value="Glass disks"/>
    <usesource source="5eTCoE"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Helper" tag="EquipMag"/>
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Custom" tag="5CEbArcFoc"/>
    <tag group="Helper" tag="Helper"/>
    </thing>
  <thing id="c5CDrdCrcStr" name="Circle of Stars" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE" parent="p5eBooks" name="Tasha&apos;s Cauldron of Everything"/>
    <tag group="SpecSource" tag="cHelpDrd" name="Druid" abbrev="Druid"/>
    <bootstrap thing="c5CDrdCsmOmn">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CDrdTwkCns">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CDrdFlStrs">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CDrdStrFrm">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CDrdStrMap">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    </thing>
  <thing id="c5CDrdStrMap" name="Star Map" description="You have created a star chart. It is a Tiny object that can serve as your druid spellcasting focus. You determine its form or roll for it.\n\nWhile holding the map, you gain these benefits:\n• You know the {i}Guidance{/i} cantrip.\n• You have {i}guiding bolt{/i} prepared as a druid spell, without it counting against your total number of prepared spells.\n• You can cast {i}guiding bolt{/i} without using a spell slot a number of times equaling your proficiency bonus. You regain all spent uses of it when you complete a long rest.\n\nYou can perform a 1-hour ceremony to magically replace a lost map. This ceremony can occur during a short or long rest, and it destroys the previous map." compset="ClSpecial" summary="You have a star map spellcasting focus that grants some spells.">
    <tag group="Custom" tag="StrGuid"/>
    <bootstrap thing="spGuidBolt">
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <bootstrap thing="spGuidBolt">
      <autotag group="Helper" tag="SpellLike"/>
      <autotag group="Usage" tag="LongRest"/>
      <autotag group="Custom" tag="StrGuid"/>
      </bootstrap>
    <bootstrap thing="spGuidance">
      <autotag group="Helper" tag="Cantrip"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="SpellType" tag="cHelpDrd"/>
      </bootstrap>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)


foreach pick in hero from BaseSpell where "Custom.StrGuid"
   eachpick.field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value
   nexteach]]></eval>
    </thing>
  <thing id="c5CDrdStrFrm" name="Starry Form" description="You can use a bonus action to spend a use of your Wild Shape and take on a starry form, instead of become a beast.\n\nWhile in this form, you retain your regular statistics. However, your body becomes luminous, with your joints glimmering and star-like and lines connecting them as if a constellation. The form sheds bright light for 10 feet and dim light for another 10 feet. It lasts 10 minutes. You can dismiss it freely, and it ends early if you are incapacitated, die, or activate it again.\n\nOne of these constellations glimmers on your body while in this form, chosen by you and each granting the following benefits:\n\n{b}Archer.{/b} An archer appears as a constellation on your body. When you activate an archer starry form and on your subsequent turns while it is in effect, you can use a bonus action to make a ranged spell attack with an arrow of light. The range is 60 feet. On a hit, it deals radiant damage equal to 1d8 + your Wisdom modifier.\n\n{b}Chalice.{/b} A goblet appears as a constellation on your body. Whenever you cast a spell using a spell slot that restores hit points to a creature, you or another creature within 30 feet of you can also regain hit points equaling 1d8 + your Wisdom modifier.\n\n{b}Dragon.{/b} A dragon appears as a constellation on your body. Whenever you make an Intelligence check, a Wisdom check, or a Constitution save to maintain concentration on a spell, treat any roll of the d20 of less than 10 as a 10." compset="ClSpecial" summary="Use Wild Shape to enter various starry forms with special benefits.">
    <fieldval field="actName" value="Starry Form (10 minutes)"/>
    <fieldval field="abDuration" value="10"/>
    <arrayval field="usrArray" index="0" value="Archer"/>
    <arrayval field="usrArray" index="1" value="Chalice"/>
    <arrayval field="usrArray" index="2" value="Dragon"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="User" tag="Activation"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Custom" tag="StrArwLt"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="LvNamePar" tag="AppText"/>
    <bootstrap thing="wOtherRng">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0 & fieldval:usrIndex = 0]]></containerreq>
      <autotag group="DamTypeOvr" tag="dtRadiant"/>
      <autotag group="DamageOver" tag="aWIS"/>
      <autotag group="RanAttOver" tag="aWIS"/>
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="Custom" tag="StrArwLt"/>
      <autotag group="wProperty" tag="Spell"/>
      <assignval field="wRangeNorm" value="60"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="livename" value="Arrow of Light"/>
      <assignval field="sbName" value="Arrow of Light"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="450"><![CDATA[fieldval:abilActive <> 0 & fieldval:usrIndex = 2 & count:Classes.Druid >= 10]]></containerreq>
      <autotag group="Value" tag="20"/>
      <autotag group="Helper" tag="Hover"/>
      </bootstrap>
    <eval phase="Final" index="3"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)
doneif (field[abilActive].value <> 0)

perform assign[User.NoAutoName]]]></eval>
    <eval phase="Final" index="4"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)
doneif (field[abilActive].value = 0)
doneif (field[usrIndex].value <> 1)

      var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      var iLvl as string
      if (hero.tagcount[Classes.Druid] >= 10) then
         iLvl = "2d8"
      else
         iLvl = "1d8"
      endif

      field[abText].text = iLvl & iSign & hero.childfound[aWIS].field[aModBonus].value & " HP, 30 feet"]]></eval>
    <eval phase="Final" priority="20000"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)

foreach pick in hero from BaseNatWep where "Custom.StrArwLt"
   eachpick.field[wRanAtk].value = hero.childfound[cHelpDrd].field[cSplAttack].value
   if (hero.tagcount[Classes.Druid] >= 10) then
   eachpick.field[wDieCount].value += 1
   endif
   nexteach]]></eval>
    <eval phase="Final" index="5"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)
doneif (field[abilActive].value = 0)
doneif (field[usrIndex].value <> 2)

#situational[hero.child[svCON], "Treat spell concentration save d20 roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skAnimHand], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skInsight], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skMedicine], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skPercep], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skSurvival], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skArcana], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skHistory], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skInvestig], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skNature], "Treat a roll lower than 10 as a 10", field[thingname].text]
#situational[hero.child[skReligion], "Treat a roll lower than 10 as a 10", field[thingname].text]]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)
doneif (field[abilActive].value = 0)
doneif (hero.tagcount[Classes.Druid] < 14)

perform hero.assign[DamComRes.dcBluPiSla]]]></eval>
    </thing>
  <thing id="c5CDrdCsmOmn" name="Cosmic Omen" description="When you complete a long rest, consult your star map and roll a die. Until you complete you next long rest, you have a special reaction available to you, depending on whether the die roll was even or odd:\n\n{b}Weal (even).{/b} Whenever a creature visible to and within 30 feet of you is about to make an attack roll, a saving throw, or an ability check, you can take a reaction to roll a d6 and add the number rolled to the total.\n{b}Woe (odd).{/b} Whenever a creature visible to and within 30 feet of you is about to make an attack roll, a saving throw, or an ability check, you can take a reaction to roll a d6 and subtract the number rolled from the total.\n\nYou can use the reaction a number of times equaling your proficiency bonus, and you regain all spent uses of it when you complete a long rest." compset="ClSpecial" summary="Impose advantage or disadvantage on a nearby roll.">
    <fieldval field="abRange" value="30"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.Disable] <> 0)

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CDrdTwkCns" name="Twinkling Constellations" description="Your Starry Form&apos;s constellations grow more powerful. The 1d8 of the Archer and Chalice become 2d8. While the Dragon is active, you have 20 feet of flying speed and can hover.\n\nMoreover, at the beginning of each of your turns while Starry Form is active, you can switch which constellation is active." compset="ClSpecial" summary="Can switch constellations, and they get more powerful.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CDrdFlStrs" name="Full of Stars" description="While in your Starry form, your body becomes partially incorporeal. This grants you resistance to bludgeoning, piercing, and slashing damage." compset="ClSpecial" summary="Starry from grants bludgeoning, piercing, and slashing resistance."></thing>
  <thing id="c5CClrTwilig" name="Twilight" description="{b}Domain Spells{/b}\nAt the listed cleric level, you learn the spells associated with this domain. You always have these spells prepared, and they do not count against the total number of spells you can prepare each day.\n1st Faerie Fire, Sleep\n3rd Moonbeam, See Invisibility\n5th Aura of Vitality, Leomund&apos;s Tiny Hut\n7th Aura of Life, Greater Invisibility\n9th Circle of Power, Mislead" compset="CustomSpec" uniqueness="unique">
    <comment>s</comment>
    <usesource source="5eTCoE"/>
    <tag group="SpecSource" tag="cHelpClr" name="Cleric" abbrev="Cleric"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="abCategory" tag="ClrDomain" name="Cleric Domain" abbrev="Cleric Domain"/>
    <bootstrap thing="spSeeInvi">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="sp5CAurVit">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spTinyHut">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="sp5CAurLif">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spGreaInvi">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="sp5CCircPo">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spMislead">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="c5CClrTwiBPr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CClrEyeNig">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CClrTwlSnc">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CClrStpNig">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CClrSDTw">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="c5CClrTwiShr">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="spFaerFire">
      <autotag group="BonusSplAt" tag="1"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="c5CClrVigBls">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="spSleep">
      <autotag group="BonusSplAt" tag="1"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spMoonbeam">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    </thing>
  <thing id="c5CClrTwiBPr" name="Bonus Proficiencies" description="You gain proficiency with martial weapons and heavy armor." compset="ClSpecial">
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      doneif (tagis[Helper.Disable] <> 0)

      perform root.linkage[table].assign[ArmProfGrp.ArmorHeavy]
      perform root.linkage[table].assign[ArmProfGrp.WepMartial]]]></eval>
    </thing>
  <thing id="c5CClrEyeNig" name="Eyes of Night" description="You have 300 feet of darkvision, able to see dim light as if it was bright and darkness as if it were dim light, within that radius.\n\nYou can use an action to share this darkvision with willing creatures visible to and within 10 feet of you for 1 hour. The total number of creatures equals your Wisdom modifier, with a minimum of 1 creature. Once you&apos;ve shared this darkvision, you cannot do so again until you complete a long rest. Alternatively, you can spend any level spell slot to share it again." compset="ClSpecial" summary="Gain 300 ft. of darkvision and can share it with others.">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Hour"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Helper" tag="ShowStatbl"/>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="300"/>
      </bootstrap>
    <eval phase="PostAttr" priority="5000"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)
      
      var iINT as number
      var iPlur as string

      iINT = maximum(1,hero.childfound[aWIS].field[aModBonus].value)
      if (iINT <> 1) then
         iPlur = "s"      
         endif

      field[abText].text = iINT & " creature" & iPlur]]></eval>
    </thing>
  <thing id="c5CClrVigBls" name="Vigilant Blessing" description="You can use an action to grant once creature you touch (which can be yourself) advantage on its next initiative roll. This benefit ends after the roll or if you use this action again." compset="ClSpecial" summary="Grant advantage on an initiative roll.">
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CClrTwlSnc" name="Channel Divinity: Twilight Sanctuary" description="You can use an action to present your holy symbol and create a 30-foot radius sphere of twilight, centered on yourself. The sphere is filled with dim light, moves with you, and lasts for 1 minute. It ends early if you are incapacitated or die. Whenever a creature, including yourself, ends its turn in the sphere, you can grant it one of these benefits:\n\n• It receives temporary hit points equal to 1d6 plus your cleric level.\n• You end one charmed- or frightened-causing effect on it." compset="ClSpecial" summary="Use Channel Divinity to create helpful sphere of twilight.">
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="abDuration" tag="Minute" name="Minute" abbrev="min"/>
    <tag group="abRange" tag="Feet" name="Feet" abbrev="ft."/>
    <tag group="abAction" tag="Action" name="Action" abbrev="Act"/>
    <tag group="abCategory" tag="ClrChanDiv" name="Cleric Channel Divinity Ability" abbrev="Cleric Channel Divinity Ability"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)


      field[abText].text = "1d6+" & hero.tagcount[Classes.Cleric] & " temp HP"]]></eval>
    </thing>
  <thing id="c5CClrStpNig" name="Steps of Night" description="While in dim light or darkness, you can use a bonus action to magically grant yourself flying speed equal to your walking speed for 1 minute. You can use this ability a number of times equaling your proficiency bonus, and regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Bonus action to gain flight speed while in dim light or darkness.">
    <fieldval field="actName" value="Active (1 minute)"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <bootstrap thing="xFly">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <eval phase="PostAttr" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (tagis[Helper.ShowSpec] = 0)

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value

       doneif (field[abilActive].value = 0)

       var Speed as number
       var Flight as string

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)
       Speed *= 2

       Speed = maximum(hero.childfound[xFly].field[abValue].value,Speed)

       Flight = "Value." & Speed


       perform hero.childfound[xFly].delete[Value.?]
       perform hero.childfound[xFly].assignstr[Flight]]]></eval>
    </thing>
  <thing id="c5CClrSDTw" name="Divine Strike" description="Once on each of your turns when you hit a creature with a weapon attack, you can cause that attack to deal an additional 1d8 radiant damage to the target. The extra damage increases to 2d8 when you reach cleric level 14." compset="ClSpecial" summary="Deal extra radiant damage once per turn when a weapon attack hits.">
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[
      if (hero.tagcount[Classes.Cleric] >= 14) then
        field[abText].text = "2d8 radiant damage"
      else
        field[abText].text = "1d8 radiant damage"
      endif]]></eval>
    </thing>
  <thing id="c5CClrTwiShr" name="Twilight Shroud" description="While within your Twilight Sanctuary, you and your allies have half cover." compset="ClSpecial" summary="While within your Twilight Sanctuary, you and your allies have half cover.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CClrPeace" name="Peace" description="{b}Domain Spells{/b}\nAt the listed cleric level, you learn the spells associated with this domain. You always have these spells prepared, and they do not count against the total number of spells you can prepare each day.\n1st Heroism, Sanctuary\n3rd Aid, Warding Bond\n5th Beacon of Hope, Sending\n7th Aura of Purity, Otiluke&apos;s Resilient Sphere\n9th Greater Restoration, Rary&apos;s Telepathic Bond" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="abCategory" tag="ClrDomain" name="Cleric Domain" abbrev="Cleric Domain"/>
    <tag group="SpecSource" tag="cHelpClr" name="Cleric" abbrev="Cleric"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="spAid">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spWardBond">
      <autotag group="BonusSplAt" tag="3"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spBeacHope">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spSending">
      <autotag group="BonusSplAt" tag="5"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="sp5CAurPur">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spResiSphe">
      <autotag group="BonusSplAt" tag="7"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spGreaRest">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spTeleBond">
      <autotag group="BonusSplAt" tag="9"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="c5CClrImpPea">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CClrEmbBnd">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="c5CClrBlmPea">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="c5CClrPrtBnd">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CClrPotS">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="c5CClrExpBnd">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="spSanctuar">
      <autotag group="BonusSplAt" tag="1"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    <bootstrap thing="spHeroism">
      <autotag group="BonusSplAt" tag="1"/>
      <autotag group="Helper" tag="Free"/>
      <autotag group="Helper" tag="Memorized"/>
      <autotag group="SpellType" tag="cHelpClr"/>
      </bootstrap>
    </thing>
  <thing id="c5CClrImpPea" name="Implement of Peace" description="You gain proficiency your choice between the Insight, Performance, or Persuasion skills." compset="ClSpecial" summary="Gain proficiency in Insight, Performance, or Persuasion.">
    <fieldval field="usrCandid1" value="component.BaseSkill &amp; (Target.skInsight | Target.skPerform | Target.skPersuas)"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="ChooseSrc1" tag="Hero" name="All Picks on Hero" abbrev="All Picks on Hero"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If not disabled get out now!
      doneif (tagis[Helper.Disable] = 1)

      ~ If skill chosen pull its prof tag
      if (field[usrChosen1].ischosen <> 0) then
        perform field[usrChosen1].chosen.pulltags[ProfSkill.?]
      endif

      ~ Push prof and allow spell tags to class and hero
      perform hero.pushtags[ProfSkill.?]]]>
      <before name="Assign Helper.Proficient based on ProfSkill tags on Hero"/>
      </eval>
    </thing>
  <thing id="c5CClrEmbBnd" name="Emboldening Bond" description="You can use an action to choose a number of creatures within 30 feet of you (which can include yourself) equal to your proficiency bonus. You create a magical bond between them that lasts for 10 minutes or until you create such a bond again. While any bonded creature is within 30 feet of another, it can roll a d4 and add the result to an attack roll, ability check, or saving throw that it makes. Each creature can only add one d4 per turn.\n\nYou can use this feature a number of times equaling your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Bond nearby creatures to empower each other&apos;s rolls.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

if (hero.tagcount[Classes.Cleric] >= 17) then
   field[abRange].value = 60
  else
   field[abRange].value = 30
  endif

field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value

field[abText].text = hero.childfound[ProfBonus].field[tProfBonus].value & " creatures"]]></eval>
    </thing>
  <thing id="c5CClrBlmPea" name="Channel Divinity: Balm of Peace" description="You can use an action to move up to your speed without provoking attacks of opportunity. When you move within  5 feet of a creature by using this action, you can restore hit points to it equaling 2d6 + your Wisdom modifier (a minimum of 1 hit point). A creature can only receive this healing once when you take this action." compset="ClSpecial" summary="Action to move up to speed and heal nearby allies for 2d6+Wisdom mod.">
    <tag group="abAction" tag="Action"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

    var iSign as string
      if (hero.childfound[aWIS].field[aModBonus].value >= 0) then
         iSign = "+"
         endif

      field[abText].text = "2d6" & iSign & hero.childfound[aWIS].field[aModBonus].value & " HP"]]></eval>
    </thing>
  <thing id="c5CClrPrtBnd" name="Protective Bond" description="When a creature bonded through your Emboldening Bond feature is about to take damage, another bonded creature within 30 feet of the first can use a reaction to teleport to an open space within 5 feet of that first creature. The second one then takes all the damage instead." compset="ClSpecial" summary="A bonded creature can teleport to and take damage for another one.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CClrExpBnd" name="Expansive Bond" description="Your Emboldening Bond&apos;s range doubles to 60 feet. Also, a creature that uses Protective Bond to take a fellow bonded creature&apos;s damage is now resistant to that damage." compset="ClSpecial" summary="Bond range doubles to 60 feet and grants resistance when taking damage for another.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CBarPthBst" name="Path of the Beast" compset="CustomSpec" uniqueness="unique">
    <fieldval field="usrLabelAr" value="Origin of the Beast"/>
    <arrayval field="usrArray" index="0" value="Lycanthrope parent"/>
    <arrayval field="usrArray" index="1" value="Archdruid parent"/>
    <arrayval field="usrArray" index="2" value="Blessed by fey spirit"/>
    <arrayval field="usrArray" index="3" value="Ancient animal spirit"/>
    <usesource source="5eTCoE"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="SpecSource" tag="cHelpBbn" name="Barbarian" abbrev="Barbarian"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="BbnPriPath" name="Barbarian Primal Path" abbrev="Barbarian Primal Path"/>
    <tag group="abDuration" tag="ConstRage" name="Constant While Raging" abbrev="rage"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="User" tag="NoAutoName"/>
    <bootstrap thing="c5CBarClHunt">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CBarFrmBst">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CBarBstlSl">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CBarInfFry">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    </thing>
  <thing id="c5CBarFrmBst" name="Form of the Beast" description="When you begin to rage, your body can transform, manifesting a natural, simple melee weapon. You add your Strength modifier to the attack and damage rolls, as normal. Choose the type of weapon every time you rage:\n\n{b}Bite.{/b} Deals 1d8 piercing. Once per each of your turns, when you damage a creature with this bite attack, you regain hit points equal to your proficiency bonus. This does not occur if you have more than half your hit points when the attack hits.\n{b}Claws.{/b} Deals 1d6 slashing. Each of your hands is transformed, and each can be used for this attack if it is empty. Once on each of your turns, when you use the Attack action to make this attack, you can make one extra Claw attack as part of that action.\n{b}Tail.{/b} Deals 1d8 piercing, and has reach. If a creature visible to and within 10 feet of you hits you with an attack roll, you can use a reaction to swipe this tail at them. Roll a d8 and add the result to your AC, potentially causing their attack to be a miss." compset="ClSpecial" summary="Manifest a natural weapon with special benefits while raging.">
    <fieldval field="usrLabelAr" value="Natural Weapon"/>
    <arrayval field="usrArray" index="0" value="Bite"/>
    <arrayval field="usrArray" index="1" value="Claws"/>
    <arrayval field="usrArray" index="2" value="Tail"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="ActivMenu"/>
    <bootstrap thing="wClaw">
      <containerreq phase="First" priority="500"><![CDATA[hero#Hero.Raging & fieldval:usrIndex = 1]]></containerreq>
      <autotag group="DamTypeOvr" tag="dtSlashing"/>
      <autotag group="AttackTarg" tag="1Target"/>
      <assignval field="wDieSize" value="6"/>
      <assignval field="wAttackEff" value="Each of your hands is transformed, and each can be used for this attack if it is empty. Once on each of your turns, when you use the Attack action to make this attack, you can make one extra Claw attack as part of that action."/>
      <assignval field="wDieCount" value="1"/>
      </bootstrap>
    <bootstrap thing="wTail">
      <containerreq phase="First" priority="500"><![CDATA[hero#Hero.Raging & fieldval:usrIndex = 2]]></containerreq>
      <autotag group="DamTypeOvr" tag="dtPiercing"/>
      <autotag group="wProperty" tag="Reach"/>
      <autotag group="AttackTarg" tag="1Target"/>
      <assignval field="wDieSize" value="8"/>
      <assignval field="wAttackEff" value="If a creature visible to and within 10 feet of you hits you with an attack roll, you can use a reaction to swipe this tail at them. Roll a d8 and add the result to your AC, potentially causing their attack to be a miss."/>
      <assignval field="wDieCount" value="1"/>
      </bootstrap>
    <bootstrap thing="wBite">
      <containerreq phase="First" priority="500"><![CDATA[hero#Hero.Raging & fieldval:usrIndex = 0]]></containerreq>
      <autotag group="DamTypeOvr" tag="dtPiercing"/>
      <autotag group="AttackTarg" tag="1Target"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wAttackEff" value="Once per each of your turns, when you damage a creature with this bite attack, you regain hit points equal to your proficiency bonus. This does not occur if you have more than half your hit points when the attack hits."/>
      <assignval field="wDieSize" value="8"/>
      </bootstrap>
    </thing>
  <thing id="c5CBarWldSrg" name="Wild Surge" description="When you begin raging, roll on the Wild Magic table to determine the effect you produce. Any effect that requires a saving throw uses 8 + your proficiency bonus + your Constitution modifier as its DC.\n\n{b}{i}Wild Magic{/i}{/b}\n{b}d8  Magical Effect{/b}{back FFFFFF}\n{b}1{/b}    Every creature of your choice, visible to and within 30 feet of you, must make a Constitution save. On a failure, it suffers 1d12 necrotic damage. You also gain 1d12 temporary hit points.{back 010101}\n{b}2{/b}    You teleport up to 30 feet to an open space you&apos;re able to see. You can use this effect again with a bonus action once on each of your turns until your rage ends.{back FFFFFF}\n{b}3{/b}    An intangible spirit appears within 5 feet of a creature of your choice that&apos;s visible to and within 30 feet of you. At the end of your current turn, the spirit explodes. Every creature within 5 feet of it must make a Dexterity save. On a failure, the creature suffers 1d6 force damage. You can use this effect again with a bonus action once on each of your turns until your rage ends, summoning a new spirit each time.{back 010101}\n{b}4{/b}    Until the end of your range, one weapon of your choice that you&apos;re holding is enhanced. Its damage becomes force, it gains the light and thrown properties with a range of 20/60. If it leaves your hand, it reappears in that hand at the end of your current turn.{back FFFFFF}\n{b}5{/b}    Whenever a creature hits you with an attack roll while this rage is going, it suffers 1d6 force damage.{back 010101}\n{b}6{/b}    For the duration of this rage, multicolored lights surround you. Your AC increases by 1, and any allies within 10 feet of you likewise get +1 AC.{back FFFFFF}\n{b}7{/b}    For the duration of your rage, the ground within 15 feet of you is difficult terrain to your enemies.{back 010101}\n{b}8{/b}    Another creature of your choice, visible to and within 30 feet of you, is struck by a bolt of light that fires from your chest. The creature must make a Constitution save. On a failure, it suffers 1d6 radiant damage and is blinded until the beginning of your next turn. You can use this effect again with a bonus action once on each of your turns until your rage ends.{back FFFFFF}" compset="ClSpecial" summary="Gain random Wild Magic effects when you enter your rage.">
    <fieldval field="usrLabelAr" value="Wild Magic"/>
    <arrayval field="usrArray" index="0" value="Shadow tendrils"/>
    <arrayval field="usrArray" index="1" value="Teleport"/>
    <arrayval field="usrArray" index="2" value="Spirit"/>
    <arrayval field="usrArray" index="3" value="Infused weapon"/>
    <arrayval field="usrArray" index="4" value="Force damage"/>
    <arrayval field="usrArray" index="5" value="Protective lights"/>
    <arrayval field="usrArray" index="6" value="Difficult Terrain"/>
    <arrayval field="usrArray" index="7" value="Bolt of light"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="StandardDC" tag="aCON"/>
    <eval phase="PostAttr"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      if (field[usrIndex].value = 0) then
          field[abText].text = "1d12 necrotic and temp HP"
          perform assign[abSave.aCON]
      elseif (field[usrIndex].value = 1) then
          field[abText].text = "30 feet, 1/turn"
      elseif (field[usrIndex].value = 2) then
          field[abText].text = "30 feet, 1/turn, 1d6 force"
          perform assign[abSave.aDEX]
      elseif (field[usrIndex].value = 4) then
          field[abText].text = "1d6 force"
      elseif (field[usrIndex].value = 6) then
          field[abText].text = "15 feet"
      elseif (field[usrIndex].value = 7) then
          field[abText].text = "30 feet, 1/turn, 1d6 radiant"
          perform assign[abSave.aCON]
      endif]]></eval>
    <eval phase="Final" index="2"><![CDATA[   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)
   doneif (field[usrIndex].value <> 3) 

   perform assign[ChooseSrc1.Hero]
   perform assign[fShowWhat.Weapons]
   field[usrCandid1].text = "component.BaseWep & !component.BaseNatWep"

   doneif (field[usrChosen1].ischosen = 0)
   doneif (hero.tagis[Hero.Raging] = 0)

   perform field[usrChosen1].chosen.setfocus

   focus.field[wRangeNorm].value = maximum(20,focus.field[wRangeNorm].value)
   focus.field[wRangeLong].value = maximum(60,focus.field[wRangeLong].value)
   perform focus.assign[wCategory.RangeThrow]
   perform focus.assign[wProperty.Light]
   perform focus.assign[wProperty.Thrown]
   perform focus.delete[DamageType.?]
   perform focus.assign[DamageType.dtForce]]]></eval>
    <eval phase="PostAttr" index="3"><![CDATA[   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)
   doneif (field[usrIndex].value <> 5) 
   doneif (hero.tagis[Hero.Raging] = 0)

   hero.child[ArmorClass].field[Bonus].value += 1]]></eval>
    </thing>
  <thing id="c5CBarInfFry" name="Infectious Fury" description="When you hit a creature with your natural weapons and are raging, you force the target to make a Wisdom save (the DC of which equals 8 + your Constitution modifier + your proficiency bonus). On a failure, it suffers one of these effects:\n\n• The target must use its reaction to make a melee attack versus another creature, chosen by and visible to you.\n• The target suffers 2d12 psychic damage.\n\nYou can use this ability a number of times equaling to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Hit with natural weapon forces Wisdom save. Failure causes them to attack or suffer damage.">
    <tag group="abSave" tag="aWIS"/>
    <tag group="StandardDC" tag="aCON"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[
     doneif (tagis[Helper.ShowSpec] = 0)
     doneif (tagis[Helper.Disable] <> 0)

     field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CBarClHunt" name="Call the Hunt" description="When you begin raging, you can choose a number of willing creatures visible to and within 30 feet of you. The number of creatures equals your Constitution modifier (a minimum of one creature), and cannot include yourself.\n\nYou gain 5 temporary hit points for each creature that accepts this. Until your rage ends, the chosen creatures can each use this benefit once on each of their turns: when the creature hits a target with an attack roll and deals damage with that attack, it can add 1d6 damage to the total.\n\nYou can use this ability a number of times equaling to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Grant extra damage to nearby allies and receive temporary HP.">
    <fieldval field="abRange" value="30"/>
    <fieldval field="actUserMin" value="0"/>
    <fieldval field="actIncrNam" value="Creatures"/>
    <fieldval field="actUserMax" value="10"/>
    <tag group="abAction" tag="None"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <bootstrap thing="PoolWlkBls">
      <containerreq phase="First" priority="500"><![CDATA[hero#Hero.Raging & fieldval:actUser <> 0]]></containerreq>
      <autotag group="Value" tag="11"/>
      <assignval field="livename" value="Call the Hunt Temporary HP"/>
      </bootstrap>
    <eval phase="Final" priority="500"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value

      var iINT as number
      var iPlur as string

      iINT = maximum(1,hero.childfound[aCON].field[aModBonus].value)
      if (iINT <> 1) then
         iPlur = "s"      
         endif

      field[abText].text = iINT & " creature" & iPlur

      field[actIncrNam].text = "Creatures (Maximum " & iINT & ")"

      doneif (field[actUser].value = 0)

      var temphp as number
      temphp = field[actUser].value
      temphp *= 5

       if (field[actUser].value > maximum(1,hero.childfound[aCON].field[aModBonus].value)) then
           temphp = 0
         endif


      ~Use this to add the result to the pool
      hero.findchild[TempHpPool,"Value.11"].field[thpMinAllw].value = temphp
      hero.findchild[TempHpPool,"Value.11"].field[thpMaxAllw].value = temphp]]></eval>
    <evalrule phase="Final" message="Your chosen number of creatures is higher than your CON mod allows." summary="Your chosen number of creatures is higher than your CON mod allows."><![CDATA[
       validif (tagis[Helper.ShowSpec] = 0)
       validif (tagis[Helper.Disable] <> 0)

       @valid = 1

       if (field[actUser].value > maximum(1,hero.childfound[aCON].field[aModBonus].value)) then
           @valid = 0
         endif]]></evalrule>
    </thing>
  <thing id="c5CBarPthWld" name="Path of Wild Magic" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="SpecSource" tag="cHelpBbn" name="Barbarian" abbrev="Barbarian"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="BbnPriPath" name="Barbarian Primal Path" abbrev="Barbarian Primal Path"/>
    <tag group="abDuration" tag="ConstRage" name="Constant While Raging" abbrev="rage"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <bootstrap thing="c5CBarCntSrg">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CBarWldSrg">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CBarBlsMgc">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CBarUnsBck">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="c5CBarMgcAwr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CBarMgcAwr" name="Magic Awareness" description="You can use an action to sense magic. Until the end of your next turn, you know the location of any spell or magic item within 60 feet of you, so long as it isn&apos;t behind total cover. You also sense the school of magic of any spell you sense with this ability.\n\nYou can use this ability a number of times equaling to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Action to sense magic not under total cover, including spell school.">
    <fieldval field="abRange" value="60"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CBarBstlSl" name="Bestial Soul" description="Your natural weapons from your Form of the Beast now count as magical for the purpose of overcoming resistance and immunity to nonmagical attacks and damage.\n\nWhen you complete a short or long rest, you can select one of these benefits:\n• You gain a swim speed equal to your walking speed, and you are able to breathe underwater.\n• You gain a climb speed equal to your walking speed, and are able to climb difficult surfaces, including upside down, without having to make an ability check.\n• Once per turn, when you jump, you can make a Strength (Athletics) check and extend the length of your jump equal to the check&apos;s total." compset="ClSpecial" summary="Your natural attacks are magical, and you select a benefit at the end of a rest.">
    <fieldval field="usrLabelAr" value="Natural Weapon"/>
    <arrayval field="usrArray" index="0" value="Swimming and water breathing"/>
    <arrayval field="usrArray" index="1" value="Climbing without checks"/>
    <arrayval field="usrArray" index="2" value="Jumping with Athletics check"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="ActivMenu"/>
    <bootstrap thing="xClimb">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:usrIndex = 1 & count:Classes.Barbarian >= 6]]></containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="xSwim">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:usrIndex = 0 & count:Classes.Barbarian >= 6]]></containerreq>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <eval phase="Final" priority="8999"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (field[usrIndex].value <> 0)

       var Speed as number
       var Flight as string

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)

       Speed = maximum(hero.childfound[xSwim].field[abValue].value,Speed)

       Flight = "Value." & Speed


       perform hero.childfound[xSwim].delete[Value.?]
       perform hero.childfound[xSwim].assignstr[Flight]
       hero.childfound[xSwim].field[abValue].value = Speed]]></eval>
    <eval phase="Final" priority="8999" index="2"><![CDATA[       doneif (tagis[Helper.Disable] <> 0)
       doneif (tagis[Helper.ShowSpec] = 0)
       doneif (field[usrIndex].value <> 1)

       var Speed as number
       var Flight as string

       Speed = (hero.childfound[Speed].field[tSpeed].value + hero.childfound[Speed].field[Bonus].value)

       Speed = maximum(hero.childfound[xClimb].field[abValue].value,Speed)

       Flight = "Value." & Speed


       perform hero.childfound[xClimb].delete[Value.?]
       perform hero.childfound[xClimb].assignstr[Flight]
       hero.childfound[xClimb].field[abValue].value = Speed]]></eval>
    </thing>
  <thing id="c5CBarBlsMgc" name="Bolstering Magic" description="You can use an action to touch a creature (which can be you), bestowing one of these benefits:\n\n• For 10 minutes, the creature can add 1d3 to the d20 roll of any attack rolls or ability checks it makes.\n• Roll a d3. The creature regains one spent spell slot of the same or lower level rolled, chosen by that creature. Once a creature receives this benefit, that creature can&apos;t receive it again until after a long rest.\n\nYou can use this ability a number of times equaling to your proficiency bonus, and you regain all spent uses when you complete a long rest." compset="ClSpecial" summary="Grant 1d3 bonus to rolls or restore a spell slot of 1d3 level.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abAction" tag="Action"/>
    <tag group="FeatureTyp" tag="Action"/>
    <eval phase="PostAttr" priority="5000"><![CDATA[      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.Disable] <> 0)

      field[trkMax].value = hero.childfound[ProfBonus].field[tProfBonus].value]]></eval>
    </thing>
  <thing id="c5CBarUnsBck" name="Unstable Backlash" description="While raging, immediately after you suffer damage or fail a saving throw, you can use a reaction to roll on the Wild Magic table. The rolled effect immediately manifests, replacing your current Wild Magic effect." compset="ClSpecial" summary="Reaction on taking damage to reroll your Wild Magic effect.">
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    </thing>
  <thing id="c5CBarCntSrg" name="Controlled Surge" description="Whenever you roll on the Wild Magic table, you can roll the die twice and choose which of the two effects to manifest. If both dies have the same number, you can instead choose which effect to use." compset="ClSpecial" summary="Roll two dice for Wild Magic and choose your effect from the two.">
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="c5CBrdMtPtnt" name="Mote of Potential" description="Whenver you provide a creature with Bardic Inspiration, you can create a Tiny mote of potential that orbits within 5 feet of that creature. The mote is intangible, invulnerable, and lasts so long as the Bardic Inspiration die does. It appears as some symbol of art or life of your choice.\n\nWhen the creature uses its Bardic Inspiration die, the mote provides an extra benefit, based on whether the die is assisting an ability check, an attack roll, or a saving throw:\n\n{b}Ability Check.{/b} When the creature adds the Bardic Inspiration die to an ability check, the creature can re-roll the die and choose whichever roll it wants to use.\n{b}Attack Roll.{/b} When the creature adds the Bardic Inspiration die to an attack roll, the mote detonates. The target and every creature of your choice that is visible to you and within 5 feet of the target must make a Consititution save versus your spell save DC. On a failure, such creatures suffer thunder damage equal to the number rolled on the Bardic Inspiration die.\n{b}Saving Throw.{/b} When the creature adds the Bardic Inspiration die to a saving throw, the creature making the save gains temporary hit points equal to the number rolled on the Bardic Inspiration die plus your charisma modifier (a minimum of 1 temporary hit point)." compset="ClSpecial" summary="Create motes that enhance your Bardic Inspiration, depending on the roll type.">
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    </thing>
  <thing id="c5CBrdCreatio" name="College of Creation" compset="CustomSpec" uniqueness="unique">
    <usesource source="5eTCoE" parent="p5eBooks" name="Tasha&apos;s Cauldron of Everything"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="cHelpBrd" name="Bard" abbrev="Bard"/>
    <tag group="abCategory" tag="BrdCollege" name="Bardic College" abbrev="Bardic College"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <bootstrap thing="c5CBrdAniPrf">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="c5CBrdCrtCrs">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="c5CBrdMtPtnt">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="c5CBrdPrfCrt">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    </thing>
  <thing id="c5CBrdPrfCrt" name="Performance of Creation" description="You can use an action to channel magic to create a nonmagical item of your choice in an open space within 10 feet of you. It must appear on a surface or liquid that can support it. The value of the item in gp cannot be more than 20 times your bard level, and the item must be Medium or smaller. It shimmers softly and causes faint music to be heard when touched. It disappears after a number of hours equal to your proficiency bonus have passed." compset="ClSpecial" summary="Action to spontaneously create an item.">
    <tag group="abAction" tag="Action"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="Final"><![CDATA[
   doneif (tagis[Helper.ShowSpec] = 0)
   doneif (tagis[Helper.Disable] <> 0)

   var iVal as number
   iVal = hero.tagcount[Classes.Bard]
   iVal *= 20

   var iTxt as string
   var iTem as string
   var iSze as string

   if (hero.tagcount[Classes.Bard] >= 14) then
       iTxt = ""
       field[trkMax].value = maximum(2,hero.childfound[aCHA].field[aModBonus].value)
       iTem = field[trkMax].value & " items"
       iSze = "Huge"
     elseif (hero.tagcount[Classes.Bard] >= 6) then
       iSze = "Large"
       iTem = "1 item"
       iTxt = iVal & " gp value, "
       field[trkMax].value = 1
     else
       iSze = "Medium"
       iTem = "1 item"
       iTxt = iVal & " gp value, "
       field[trkMax].value = 1
     endif

   field[abText].text = iTem & ", " & iSze & ", " & iTxt & hero.childfound[ProfBonus].field[tProfBonus].value & " hours"]]></eval>
    </thing>
  <thing id="c5CBrdAniPrf" name="Animating Performance" description="You can use an action to target a Large or smaller nonmagical item visible to and within 30 feet of you, so long as it isn&apos;t being worn or carried. The item becomes animated, using the Dancing Item stat block. It is friendly to you and your allies, and obeys your commands. It is animated for 1 hour, until it is reduced to 0 hit points, or until you die.\n\nIn combat, the item shares your initiative but take its turn right after yours. It only takes the Dodge action, unless you use a bonus action to command it to do something in its stat block or another action available to it. When using your Bardic Inspiration bonus action, you can command the item as part of that bonus action. If you&apos;re incapacitated, it can take any action of its choice.\n\nOnce you&apos;ve animated an item using this feature, you cannot do so again until you complete a long rest. Alternatively, you can spend a 3rd or higher level spell slot to use it again. You can only have one item animated by this feature at a time. Animating a second causes the first to immediately become inanimate." compset="ClSpecial" summary="Animate an item into a companion.">
    <fieldval field="abRange" value="30"/>
    <fieldval field="trkMax" value="1"/>
    <fieldval field="actName" value="Animated Item"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Usage" tag="LongRest"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Activation"/>
    <bootstrap thing="c5CDncItm">
      <containerreq phase="First" priority="250"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="r5CDncItm" name="Dancing Item" compset="Race">
    <fieldval field="rHitDice" value="1"/>
    <fieldval field="rHDSides" value="1"/>
    <fieldval field="rHPStart" value="25"/>
    <fieldval field="rDEX" value="4"/>
    <fieldval field="rCON" value="6"/>
    <fieldval field="rINT" value="-6"/>
    <fieldval field="rCHA" value="-4"/>
    <fieldval field="rAC" value="4"/>
    <fieldval field="rSTR" value="8"/>
    <tag group="Alignment" tag="Unaligned" name="Unaligned" abbrev="UN"/>
    <tag group="CondImm" tag="pcnCharmed" name="Charmed" abbrev="Charmed"/>
    <tag group="CondImm" tag="pcnFright" name="Frightened" abbrev="Frightened"/>
    <tag group="RaceSize" tag="Medium0"/>
    <tag group="RaceType" tag="NPC" name="NPC Race" abbrev="NPC Race"/>
    <tag group="DamageImm" tag="dtPoison"/>
    <tag group="DamageImm" tag="dtPsychic"/>
    <tag group="CondImm" tag="pcnExhaust"/>
    <tag group="CondImm" tag="pcnPoison"/>
    <bootstrap thing="tpConst"></bootstrap>
    <bootstrap thing="ra5CImmForN">
      <assignval field="abText" value="The item"/>
      </bootstrap>
    <bootstrap thing="lOther">
      <assignval field="lCustName" value="Understands its creator&apos;s languages"/>
      <assignval field="sbName" value="Understands its creator&apos;s languages"/>
      </bootstrap>
    <bootstrap thing="raDarkVis">
      <autotag group="Value" tag="60"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Helper" tag="Hover"/>
      <autotag group="Value" tag="30"/>
      </bootstrap>
    <bootstrap thing="wOtherMel">
      <autotag group="AttackTarg" tag="1Target"/>
      <autotag group="DamTypeOvr" tag="dtForce"/>
      <assignval field="livename" value="Force-Empowered Slam"/>
      <assignval field="sbName" value="Force-Empowered Slam"/>
      <assignval field="wDieCount" value="1"/>
      <assignval field="wDieSize" value="10"/>
      <assignval field="wTarget" value="one target you can see"/>
      </bootstrap>
    <bootstrap thing="ra5CDnIrpD"></bootstrap>
    <bootstrap thing="ra5CDncSze"></bootstrap>
    <eval phase="Final" priority="50000" index="2"><![CDATA[
~ pull our STR and prof to determine what our attack bonus currently is

var CrAt as number

CrAt = (hero.childfound[aSTR].field[aModBonus].value + hero.childfound[ProfBonus].field[tProfBonus].value)

~ add our spell attack (stored in abValue4 of Creator's Power) and subtract
~ the current to attack bonus from any natural attacks. This way any 
~ other additions to the bonus can still count

foreach pick in hero from BaseWep where "wGroup.Natural"
eachpick.field[wAttack].value += hero.childfound[ra5CDncCrtPw].field[abValue4].value - CrAt
nexteach]]></eval>
    <eval phase="PostAttr" priority="11000">~Subtract out the CON bonus HP by finding the base bonus * # Hit Dice
~Add back in the original 5 per the stat block, then remove it all
~Add that entire thing to our total Bonus HP
~We remove it from the total instead of just removing the total in case
~something else is adding to that as well.

var HPAdj as number
HPAdj = hero.childfound[ra5CDncCrtPw].field[abValue5].value 
HPAdj *= 5
HPAdj -= hero.childfound[aCON].field[aModBonus].value
HPAdj += 9

herofield[tBonusHP].value += HPAdj</eval>
    </thing>
  <thing id="ra5CDncCrtPw" name="Creator&apos;s Power" description="The creature inherits its creator&apos;s proficiency bonus." compset="RaceSpec">
    <eval phase="PostAttr" priority="12000"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ and damage.
foreach pick in hero from BaseWep where "wGroup.Natural"
   eachpick.field[dmmBonus].value = field[abValue2].value - 4
   eachpick.field[dmrBonus].value = field[abValue2].value
nexteach]]></eval>
    <eval phase="PostLevel" index="2"><![CDATA[      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)


~ store the proficiency of the hero in abValue2:

field[abValue2].value = master.childfound[ProfBonus].field[tProfBonus].value

~ now we replace the prof bonus of the minion with the stored hero one

hero.childfound[ProfBonus].field[tProfBonus].value = field[abValue2].value]]></eval>
    <eval phase="Final" priority="49000" index="3"><![CDATA[
      ~ If we're disabled, do nothing & 
      doneif (tagis[Helper.Disable] = 1)

      ~Pull master's spell save DC into abValue3 for use in other features
  field[abValue3].value = master.childfound[cHelpBrd].field[cSplSaveDC].value  


      ~Pull master's spell attack into abValue4 for use in other features
  field[abValue4].value = master.childfound[cHelpBrd].field[cSplAttack].value]]></eval>
    </thing>
  <thing id="c5CDncItm" name="Dancing Item" compset="Companion" stacking="never" uniqueness="unique">
    <fieldval field="CompType" value="Dancing Item"/>
    <eval phase="First" priority="455" index="4"><![CDATA[~ Well, there's no way (afaik) to count the class levels from the hero
~ at the minion, so we need to do it somewhere in the hero context and 
~ send the info to be used at the minion. 
~
~ In this case, since all animal companions will receive the 
~ companion bond racial ability to add their extra skills, we'll
~ use it to bootstrap the extra HD as well. The tag expression used 
~ in the condition for the bootstrap will test the value of the
~ abValue5 field, which we set here.

~ This must be done at the First stage, since the bootstraps happen
~ there. Or so I'm told by the error messages.

var level as number
level = hero.tagcount[Classes.Bard]
minion.childfound[ra5CDncCrtPw].field[abValue5].value = level]]></eval>
    <minion id="WildfireSpirit" isinherit="no">
      <tag group="AllowRCust" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="CompIs" tag="Familiar" name="Familiar" abbrev="Familiar"/>
      <tag group="Hero" tag="FixedRace" name="FixedRace" abbrev="FixedRace"/>
      <tag group="Hero" tag="NoAdvance" name="NoAdvance" abbrev="NoAdvance"/>
      <tag group="Hero" tag="NoFamLvReq" name="No familiar Level requirements" abbrev="No familiar Level requirements"/>
      <tag group="HideTab" tag="background" name="background" abbrev="background"/>
      <tag group="HideTab" tag="classes" name="classes" abbrev="classes"/>
      <tag group="HideTab" tag="journal" name="journal" abbrev="journal"/>
      <tag group="HideTab" tag="personal" name="personal" abbrev="personal"/>
      <bootstrap thing="ra5CDncCrtPw"></bootstrap>
      <bootstrap thing="r5CDncItm"></bootstrap>
      </minion>
    </thing>
  <thing id="ra5CDnIrpD" name="Irrepressible Dance" description="When any creature begins its turn within 10 feet of the item, the item can increase or decrease (your choice) that creature&apos;s walking speed by 10 feet until the end of the turn. This effect does not happen if the item is incapacitated." compset="RaceSpec">
    <tag group="Helper" tag="ShowSpec"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="ra5CDncSze" name="Size" description="Choose the size of the Dancing Item." compset="RaceSpec">
    <arrayval field="usrArray" index="0" value="Tiny"/>
    <arrayval field="usrArray" index="1" value="Small"/>
    <arrayval field="usrArray" index="2" value="Medium"/>
    <arrayval field="usrArray" index="3" value="Large"/>
    <tag group="User" tag="NoAutoName" name="NoAutoName" abbrev="NoAutoName"/>
    <tag group="Helper" tag="ActivMenu" name="ActivMenu" abbrev="ActivMenu"/>
    <eval phase="First" priority="11000"><![CDATA[      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

     if (field[usrIndex].value = 0) then
        herofield[tSize].value -= 2
     elseif (field[usrIndex].value = 1) then
        herofield[tSize].value -= 1
     elseif (field[usrIndex].value = 3) then
        herofield[tSize].value += 1
     endif]]></eval>
    <eval phase="Final" priority="11000" index="2"><![CDATA[      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

     if (field[usrIndex].value = 0) then
        herofield[tReach].value += 5
     elseif (field[usrIndex].value = 3) then
        herofield[tReach].value -= 5
     endif]]></eval>
    </thing>
  <thing id="c5CBrdCrtCrs" name="Creative Crescendo" description="Your Performance of Creation feature improves, with these benefits:\n\n• You can now create a number of items equal to your Charisma modififer (minimum of two items)\n• When you create a new item over that limit, you choose which existing item disappears\n• One item can be the maximum size, the rest Small or Tiny\n• You have no gp limit on your created items" compset="ClSpecial" summary="Your Performance of Creation significantly improves."></thing>
  <thing id="g5CGenVsl" name="Genie&apos;s Vessel" description="Your patron grants you a Tiny object to serve as a vessel of its power. You can use it as a spellcasting focus for your warlock spells. You can decide its appearance or select it at random. While holding the vessel, you can use it for both Bottled Respite and Genie&apos;s Wrath.\n\nThe vessel&apos;s AC equals your spell save DC. Its hit points are equal to your warlock level plus your proficiency bonus, and it is immune to poison and psychic damage.\n\nIf the vessel is destroyed or you lose it, you can perform a 1-hour ceremony to gain a replacement from your patron. The ceremony can be done during a short or long rest, and any existing previous vessel is destroyed. If you die, the vessel vanishes in an eruption of elemental power." compset="Wondrous" stacking="never">
    <tag group="GearType" tag="gtWondrous"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Custom" tag="5CEbArcFoc"/>
    <tag group="thing" tag="holder"/>
    <eval phase="Render" priority="99999999">field[livename].text = hero.childfound[c5CWlkGenVsl].field[livename].text</eval>
    </thing>
  <thing id="c5CRgrDrdWrr" name="Druidic Warrior" description="You can choose two cantrips to learn from the druid spell list. They are considered Ranger spells for you, and you use Wisdom as your spellcasting ability for them. You can replace one of them with another from the druid spell list each time you level in this class." compset="CustomSpec" summary="Learn 2 druid cantrips." uniqueness="unique">
    <usesource source="5eTCoE"/>
    <tag group="Helper" tag="Primary" name="Primary" abbrev="Primary"/>
    <tag group="SpecSource" tag="cHelpRgr" name="Ranger" abbrev="Ranger"/>
    <tag group="SpecSource" tag="cHelpSRg" name="Ranger (spellless)" abbrev="Ranger (spellless)"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="RgrFigStyl" name="Ranger Fighting Style" abbrev="Ranger Fighting Style"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="Helper" tag="NoAdvLeag" name="Not Allowed for Adventurers League Characters" abbrev="Not Allowed for Adventurers League Characters"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.Disable] <> 0)

      perform linkage[table].assign[Helper.HasSplExp]

      linkage[table].field[cSpExAllw].value = 2
      linkage[table].field[cSpExLst].text = "component.BaseSpell & sLevel.0 & sClass.cHelpDrd"
      linkage[table].field[cSpExLstNm].text = "Druid Cantrips"

      foreach pick in hero from BaseSpell where "portal.ClsExSpLis & SplListExp.cHelpRgr"
        perform eachpick.delete[Helper.OldCasting]
        perform eachpick.assign[Helper.Cantrip]

        perform eachpick.assign[Helper.Free]
        eachpick.field[sNameMod].text = splice(eachpick.field[sNameMod].text,"Druidic Warrior",", ")
        nexteach]]></eval>
    </thing>
  </document>
