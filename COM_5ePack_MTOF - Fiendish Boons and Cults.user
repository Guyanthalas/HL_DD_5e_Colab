<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cfg5CFndBoon" name="Fiendish Cults and Boons" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Demonic Boon or Devil Cult"/>
    <fieldval field="cfgObject2" value="Boon or Cult Benefit"/>
    <tag group="Helper" tag="Allow1Abil"/>
    <tag group="Helper" tag="Allow2Abil"/>
    </thing>
  <thing id="p5CMTFFndBoo" name="Fiendish Cults and Boons" compset="InPlay">
    <usesource source="5eMTOFCP"/>
    <usesource source="5CPSDCP"/>
    <tag group="Helper" tag="AdjNoPlus"/>
    <tag group="OthAdjCat" tag="UserBot5th"/>
    <tag group="Helper" taag="NoIncr"/>
    <bootstrap thing="cfg5CFndBoon"></bootstrap>
    </thing>
  <thing id="c5CFBBaphASI" name="Boon of Baphomet Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 STR"/>
    <arrayval field="usrArray" index="1" value="+1 STR, +1 WIS"/>
    <arrayval field="usrArray" index="2" value="+1 STR, +2 WIS"/>
    <arrayval field="usrArray" index="3" value="+1 STR, +3 WIS"/>
    <arrayval field="usrArray" index="4" value="+2 STR"/>
    <arrayval field="usrArray" index="5" value="+2 STR, +1 WIS"/>
    <arrayval field="usrArray" index="6" value="+2 STR, +2 WIS"/>
    <arrayval field="usrArray" index="7" value="+3 STR"/>
    <arrayval field="usrArray" index="8" value="+3 STR, +1 WIS"/>
    <arrayval field="usrArray" index="9" value="+4 STR"/>
    <arrayval field="usrArray" index="10" value="+1 WIS"/>
    <arrayval field="usrArray" index="11" value="+2 WIS"/>
    <arrayval field="usrArray" index="12" value="+3 WIS"/>
    <arrayval field="usrArray" index="13" value="+4 WIS"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 2) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 3) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 4) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 5) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 6) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 7) then
hero.childfound[aSTR].field[aNormMod].value += 3
hero.childfound[aSTR].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 8) then
hero.childfound[aSTR].field[aNormMod].value += 3
hero.childfound[aSTR].field[aMaxValue].value += 3
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 9) then
hero.childfound[aSTR].field[aNormMod].value += 4
hero.childfound[aSTR].field[aMaxValue].value += 4
elseif (field[usrIndex].value = 10) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 11) then
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 12) then
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 13) then
hero.childfound[aWIS].field[aNormMod].value += 4
hero.childfound[aWIS].field[aMaxValue].value += 4
endif]]></eval>
    <pickreq thing="c5CFBBaph"/>
    </thing>
  <thing id="c5CFBDemoASI" name="Boon of Demogorgon Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 STR"/>
    <arrayval field="usrArray" index="1" value="+1 STR, +1 CHA"/>
    <arrayval field="usrArray" index="2" value="+1 STR, +2 CHA"/>
    <arrayval field="usrArray" index="3" value="+1 STR, +3 CHA"/>
    <arrayval field="usrArray" index="4" value="+2 STR"/>
    <arrayval field="usrArray" index="5" value="+2 STR, +1 CHA"/>
    <arrayval field="usrArray" index="6" value="+2 STR, +2 CHA"/>
    <arrayval field="usrArray" index="7" value="+3 STR"/>
    <arrayval field="usrArray" index="8" value="+3 STR, +1 CHA"/>
    <arrayval field="usrArray" index="9" value="+4 STR"/>
    <arrayval field="usrArray" index="10" value="+1 CHA"/>
    <arrayval field="usrArray" index="11" value="+2 CHA"/>
    <arrayval field="usrArray" index="12" value="+3 CHA"/>
    <arrayval field="usrArray" index="13" value="+4 CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBDemo"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 2) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 3) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 4) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 5) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 6) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 7) then
hero.childfound[aSTR].field[aNormMod].value += 3
hero.childfound[aSTR].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 8) then
hero.childfound[aSTR].field[aNormMod].value += 3
hero.childfound[aSTR].field[aMaxValue].value += 3
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 9) then
hero.childfound[aSTR].field[aNormMod].value += 4
hero.childfound[aSTR].field[aMaxValue].value += 4
elseif (field[usrIndex].value = 10) then
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 11) then
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 12) then
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 13) then
hero.childfound[aCHA].field[aNormMod].value += 4
hero.childfound[aCHA].field[aMaxValue].value += 4
endif]]></eval>
    <pickreq thing="c5CFBDemo"/>
    </thing>
  <thing id="c5CFBFrazASI" name="Boon of Fraz-Urb&apos;luu Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 WIS"/>
    <arrayval field="usrArray" index="1" value="+1 WIS, +1 CHA"/>
    <arrayval field="usrArray" index="2" value="+1 WIS, +2 CHA"/>
    <arrayval field="usrArray" index="3" value="+1 WIS, +3 CHA"/>
    <arrayval field="usrArray" index="4" value="+2 WIS"/>
    <arrayval field="usrArray" index="5" value="+2 WIS, +1 CHA"/>
    <arrayval field="usrArray" index="6" value="+2 WIS, +2 CHA"/>
    <arrayval field="usrArray" index="7" value="+3 WIS"/>
    <arrayval field="usrArray" index="8" value="+3 WIS, +1 CHA"/>
    <arrayval field="usrArray" index="9" value="+4 WIS"/>
    <arrayval field="usrArray" index="10" value="+1 CHA"/>
    <arrayval field="usrArray" index="11" value="+2 CHA"/>
    <arrayval field="usrArray" index="12" value="+3 CHA"/>
    <arrayval field="usrArray" index="13" value="+4 CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBFraz"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 2) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 3) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 4) then
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 5) then
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 6) then
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 7) then
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 8) then
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 9) then
hero.childfound[aWIS].field[aNormMod].value += 4
hero.childfound[aWIS].field[aMaxValue].value += 4
elseif (field[usrIndex].value = 10) then
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 11) then
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 12) then
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 13) then
hero.childfound[aCHA].field[aNormMod].value += 4
hero.childfound[aCHA].field[aMaxValue].value += 4
endif]]></eval>
    <pickreq thing="c5CFBFraz"/>
    </thing>
  <thing id="c5CFBGrazASI" name="Boon of Graz&apos;zt Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 CON"/>
    <arrayval field="usrArray" index="1" value="+1 CON, +1 CHA"/>
    <arrayval field="usrArray" index="2" value="+1 CON, +2 CHA"/>
    <arrayval field="usrArray" index="3" value="+1 CON, +3 CHA"/>
    <arrayval field="usrArray" index="4" value="+2 CON"/>
    <arrayval field="usrArray" index="5" value="+2 CON, +1 CHA"/>
    <arrayval field="usrArray" index="6" value="+2 CON, +2 CHA"/>
    <arrayval field="usrArray" index="7" value="+3 CON"/>
    <arrayval field="usrArray" index="8" value="+3 CON, +1 CHA"/>
    <arrayval field="usrArray" index="9" value="+4 CON"/>
    <arrayval field="usrArray" index="10" value="+1 CHA"/>
    <arrayval field="usrArray" index="11" value="+2 CHA"/>
    <arrayval field="usrArray" index="12" value="+3 CHA"/>
    <arrayval field="usrArray" index="13" value="+4 CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBGraz"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 2) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 3) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 4) then
hero.childfound[aCON].field[aNormMod].value += 2
hero.childfound[aCON].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 5) then
hero.childfound[aCON].field[aNormMod].value += 2
hero.childfound[aCON].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 6) then
hero.childfound[aCON].field[aNormMod].value += 2
hero.childfound[aCON].field[aMaxValue].value += 2
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 7) then
hero.childfound[aCON].field[aNormMod].value += 3
hero.childfound[aCON].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 8) then
hero.childfound[aCON].field[aNormMod].value += 3
hero.childfound[aCON].field[aMaxValue].value += 3
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 9) then
hero.childfound[aCON].field[aNormMod].value += 4
hero.childfound[aCON].field[aMaxValue].value += 4
elseif (field[usrIndex].value = 10) then
hero.childfound[aCHA].field[aNormMod].value += 1
hero.childfound[aCHA].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 11) then
hero.childfound[aCHA].field[aNormMod].value += 2
hero.childfound[aCHA].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 12) then
hero.childfound[aCHA].field[aNormMod].value += 3
hero.childfound[aCHA].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 13) then
hero.childfound[aCHA].field[aNormMod].value += 4
hero.childfound[aCHA].field[aMaxValue].value += 4
endif]]></eval>
    <pickreq thing="c5CFBGraz"/>
    </thing>
  <thing id="c5CFBJuibASI" name="Boon of Juiblex Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 CON, -1 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="1" value="+2 CON, -2 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="2" value="+3 CON, -3 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="3" value="+4 CON, -4 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="4" value="+5 CON, -5 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="5" value="+6 CON, -6 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="6" value="+7 CON, -7 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="7" value="+8 CON, -8 INT, WIS, CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBJuib"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
hero.childfound[aINT].field[aNormMod].value -= 1
hero.childfound[aWIS].field[aNormMod].value -= 1
hero.childfound[aCHA].field[aNormMod].value -= 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aCON].field[aNormMod].value += 2
hero.childfound[aCON].field[aMaxValue].value += 2
hero.childfound[aINT].field[aNormMod].value -= 2
hero.childfound[aWIS].field[aNormMod].value -= 2
hero.childfound[aCHA].field[aNormMod].value -= 2
elseif (field[usrIndex].value = 2) then
hero.childfound[aCON].field[aNormMod].value += 3
hero.childfound[aCON].field[aMaxValue].value += 3
hero.childfound[aINT].field[aNormMod].value -= 3
hero.childfound[aWIS].field[aNormMod].value -= 3
hero.childfound[aCHA].field[aNormMod].value -= 3
elseif (field[usrIndex].value = 3) then
hero.childfound[aCON].field[aNormMod].value += 4
hero.childfound[aCON].field[aMaxValue].value += 4
hero.childfound[aINT].field[aNormMod].value -= 4
hero.childfound[aWIS].field[aNormMod].value -= 4
hero.childfound[aCHA].field[aNormMod].value -= 4
elseif (field[usrIndex].value = 4) then
hero.childfound[aCON].field[aNormMod].value += 5
hero.childfound[aCON].field[aMaxValue].value += 5
hero.childfound[aINT].field[aNormMod].value -= 5
hero.childfound[aWIS].field[aNormMod].value -= 5
hero.childfound[aCHA].field[aNormMod].value -= 5
elseif (field[usrIndex].value = 5) then
hero.childfound[aCON].field[aNormMod].value += 6
hero.childfound[aCON].field[aMaxValue].value += 6
hero.childfound[aINT].field[aNormMod].value -= 6
hero.childfound[aWIS].field[aNormMod].value -= 6
hero.childfound[aCHA].field[aNormMod].value -= 6
elseif (field[usrIndex].value = 6) then
hero.childfound[aCON].field[aNormMod].value += 7
hero.childfound[aCON].field[aMaxValue].value += 7
hero.childfound[aINT].field[aNormMod].value -= 7
hero.childfound[aWIS].field[aNormMod].value -= 7
hero.childfound[aCHA].field[aNormMod].value -= 7
elseif (field[usrIndex].value = 7) then
hero.childfound[aCON].field[aNormMod].value += 8
hero.childfound[aCON].field[aMaxValue].value += 8
hero.childfound[aINT].field[aNormMod].value -= 8
hero.childfound[aWIS].field[aNormMod].value -= 8
hero.childfound[aCHA].field[aNormMod].value -= 8






endif]]></eval>
    <pickreq thing="c5CFBJuib"/>
    </thing>
  <thing id="c5CFBOrcuASI" name="Boon of Orcus Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 INT"/>
    <arrayval field="usrArray" index="1" value="+1 INT, +1 WIS"/>
    <arrayval field="usrArray" index="2" value="+1 INT, +2 WIS"/>
    <arrayval field="usrArray" index="3" value="+1 INT, +3 WIS"/>
    <arrayval field="usrArray" index="4" value="+2 INT"/>
    <arrayval field="usrArray" index="5" value="+2 INT, +1 WIS"/>
    <arrayval field="usrArray" index="6" value="+2 INT, +2 WIS"/>
    <arrayval field="usrArray" index="7" value="+3 INT"/>
    <arrayval field="usrArray" index="8" value="+3 INT, +1 WIS"/>
    <arrayval field="usrArray" index="9" value="+4 INT"/>
    <arrayval field="usrArray" index="10" value="+1 WIS"/>
    <arrayval field="usrArray" index="11" value="+2 WIS"/>
    <arrayval field="usrArray" index="12" value="+3 WIS"/>
    <arrayval field="usrArray" index="13" value="+4 WIS"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aINT].field[aNormMod].value += 1
hero.childfound[aINT].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aINT].field[aNormMod].value += 1
hero.childfound[aINT].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 2) then
hero.childfound[aINT].field[aNormMod].value += 1
hero.childfound[aINT].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 3) then
hero.childfound[aINT].field[aNormMod].value += 1
hero.childfound[aINT].field[aMaxValue].value += 1
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 4) then
hero.childfound[aINT].field[aNormMod].value += 2
hero.childfound[aINT].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 5) then
hero.childfound[aINT].field[aNormMod].value += 2
hero.childfound[aINT].field[aMaxValue].value += 2
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 6) then
hero.childfound[aINT].field[aNormMod].value += 2
hero.childfound[aINT].field[aMaxValue].value += 2
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 7) then
hero.childfound[aINT].field[aNormMod].value += 3
hero.childfound[aINT].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 8) then
hero.childfound[aINT].field[aNormMod].value += 3
hero.childfound[aINT].field[aMaxValue].value += 3
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 9) then
hero.childfound[aINT].field[aNormMod].value += 4
hero.childfound[aINT].field[aMaxValue].value += 4
elseif (field[usrIndex].value = 10) then
hero.childfound[aWIS].field[aNormMod].value += 1
hero.childfound[aWIS].field[aMaxValue].value += 1
elseif (field[usrIndex].value = 11) then
hero.childfound[aWIS].field[aNormMod].value += 2
hero.childfound[aWIS].field[aMaxValue].value += 2
elseif (field[usrIndex].value = 12) then
hero.childfound[aWIS].field[aNormMod].value += 3
hero.childfound[aWIS].field[aMaxValue].value += 3
elseif (field[usrIndex].value = 13) then
hero.childfound[aWIS].field[aNormMod].value += 4
hero.childfound[aWIS].field[aMaxValue].value += 4
endif]]></eval>
    <pickreq thing="c5CFBOrcu"/>
    </thing>
  <thing id="c5CFBYeenASI" name="Boon of Yeenoghu Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 STR, DEX, -1 INT, CHA"/>
    <arrayval field="usrArray" index="1" value="+2 STR, DEX, -2 INT, CHA"/>
    <arrayval field="usrArray" index="2" value="+3 STR, DEX, -3 INT, CHA"/>
    <arrayval field="usrArray" index="3" value="+4 STR, DEX, -4 INT, CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBYeen"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aSTR].field[aNormMod].value += 1
hero.childfound[aSTR].field[aMaxValue].value += 1
hero.childfound[aDEX].field[aNormMod].value += 1
hero.childfound[aDEX].field[aMaxValue].value += 1
hero.childfound[aINT].field[aNormMod].value -= 1
hero.childfound[aCHA].field[aNormMod].value -= 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aSTR].field[aNormMod].value += 2
hero.childfound[aSTR].field[aMaxValue].value += 2
hero.childfound[aDEX].field[aNormMod].value += 2
hero.childfound[aDEX].field[aMaxValue].value += 2
hero.childfound[aINT].field[aNormMod].value -= 2
hero.childfound[aCHA].field[aNormMod].value -= 2
elseif (field[usrIndex].value = 2) then
hero.childfound[aSTR].field[aNormMod].value += 3
hero.childfound[aSTR].field[aMaxValue].value += 3
hero.childfound[aDEX].field[aNormMod].value += 3
hero.childfound[aDEX].field[aMaxValue].value += 3
hero.childfound[aINT].field[aNormMod].value -= 3
hero.childfound[aCHA].field[aNormMod].value -= 3
elseif (field[usrIndex].value = 3) then
hero.childfound[aSTR].field[aNormMod].value += 4
hero.childfound[aSTR].field[aMaxValue].value += 4
hero.childfound[aDEX].field[aNormMod].value += 4
hero.childfound[aDEX].field[aMaxValue].value += 4
hero.childfound[aINT].field[aNormMod].value -= 4
hero.childfound[aCHA].field[aNormMod].value -= 4










endif]]></eval>
    <pickreq thing="c5CFBYeen"/>
    </thing>
  <thing id="c5CFBZuggASI" name="Boon of Zuggtmoy Ability Score Adjustment" compset="CustomSpec" uniqueness="unique">
    <arrayval field="usrArray" index="0" value="+1 CON, -1 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="1" value="+2 CON, -2 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="2" value="+3 CON, -3 INT, WIS, CHA"/>
    <arrayval field="usrArray" index="3" value="+4 CON, -4 INT, WIS, CHA"/>
    <tag group="User" tag="NoAutoName"/>
    <tag group="Custom" tag="FBZugg"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PreLevel"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] = 1)
if (field[usrIndex].value = 0) then
hero.childfound[aCON].field[aNormMod].value += 1
hero.childfound[aCON].field[aMaxValue].value += 1
hero.childfound[aINT].field[aNormMod].value -= 1
hero.childfound[aWIS].field[aNormMod].value -= 1
hero.childfound[aCHA].field[aNormMod].value -= 1
elseif (field[usrIndex].value = 1) then
hero.childfound[aCON].field[aNormMod].value += 2
hero.childfound[aCON].field[aMaxValue].value += 2
hero.childfound[aINT].field[aNormMod].value -= 2
hero.childfound[aWIS].field[aNormMod].value -= 2
hero.childfound[aCHA].field[aNormMod].value -= 2
elseif (field[usrIndex].value = 2) then
hero.childfound[aCON].field[aNormMod].value += 3
hero.childfound[aCON].field[aMaxValue].value += 3
hero.childfound[aINT].field[aNormMod].value -= 3
hero.childfound[aWIS].field[aNormMod].value -= 3
hero.childfound[aCHA].field[aNormMod].value -= 3
elseif (field[usrIndex].value = 3) then
hero.childfound[aCON].field[aNormMod].value += 4
hero.childfound[aCON].field[aMaxValue].value += 4
hero.childfound[aINT].field[aNormMod].value -= 4
hero.childfound[aWIS].field[aNormMod].value -= 4
hero.childfound[aCHA].field[aNormMod].value -= 4










endif]]></eval>
    <pickreq thing="c5CFBZugg"/>
    </thing>
  <thing id="c5CFBBaalSpl" name="Cult of Baalzebul Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}minor illusion{/i}, {i}disguise self{/i}, {i}phantasmal force{/i}, and {i}major image{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spMinoIllu"/>
    <tag group="ClsAllowSp" tag="spDisgSelf"/>
    <tag group="ClsAllowSp" tag="sp5CPhantF"/>
    <tag group="ClsAllowSp" tag="spMajoImag"/>
    <tag group="Custom" tag="FBBaal"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBBaal"/>
    </thing>
  <thing id="c5CFBDispSpl" name="Cult of Dispater Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}guidance{/i}, {i}identify{/i}, {i}see invisibility{/i}, and {i}clairvoyance{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spGuidance"/>
    <tag group="ClsAllowSp" tag="spIdentify"/>
    <tag group="ClsAllowSp" tag="spSeeInvi"/>
    <tag group="ClsAllowSp" tag="spClairvoy"/>
    <tag group="Custom" tag="FBDisp"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBDisp"/>
    </thing>
  <thing id="c5CFBFierSpl" name="Cult of Fierna Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}friends{/i}, {i}charm person{/i}, {i}suggestion{/i}, and {i}hypnotic pattern{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CFriend"/>
    <tag group="ClsAllowSp" tag="spCharPers"/>
    <tag group="ClsAllowSp" tag="spSuggesti"/>
    <tag group="ClsAllowSp" tag="spHypnPatt"/>
    <tag group="Custom" tag="FBFier"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBFier"/>
    </thing>
  <thing id="c5CFBGerySpl" name="Cult of Geryon Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}shillelagh{/i}, {i}wrathful smite{/i}, {i}enhance ability{/i}, and {i}aura of vitality{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spShillela"/>
    <tag group="ClsAllowSp" tag="sp5CWrathS"/>
    <tag group="ClsAllowSp" tag="spEnhaAbil"/>
    <tag group="ClsAllowSp" tag="sp5CAurVit"/>
    <tag group="Custom" tag="FBGery"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBGery"/>
    </thing>
  <thing id="c5CFBGlasSpl" name="Cult of Glasya Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}friends{/i}, {i}charm person{/i}, {i}invisibility{/i}, and {i}haste{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CFriend"/>
    <tag group="ClsAllowSp" tag="spCharPers"/>
    <tag group="ClsAllowSp" tag="spInvisibi"/>
    <tag group="ClsAllowSp" tag="spHaste"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Custom" tag="FBGlas"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBGlas"/>
    </thing>
  <thing id="c5CFBLeviSpl" name="Cult of Levistus Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}blade ward{/i}, {i}expeditious retreat{/i}, {i}spider climb{/i}, and {i}gaseous form{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CBladeW"/>
    <tag group="ClsAllowSp" tag="spExpeRetr"/>
    <tag group="ClsAllowSp" tag="spSpidClim"/>
    <tag group="ClsAllowSp" tag="spGaseForm"/>
    <tag group="Custom" tag="FBLevi"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBLevi"/>
    </thing>
  <thing id="c5CFBMammSpl" name="Cult of Mammon Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}mending{/i}, {i}floating disk{/i}, {i}arcane lock{/i}, and {i}glyph of warding{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spMending"/>
    <tag group="ClsAllowSp" tag="spFloaDisk"/>
    <tag group="ClsAllowSp" tag="spArcaLock"/>
    <tag group="ClsAllowSp" tag="spGlypWard"/>
    <tag group="Custom" tag="FBMamm"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBMamm"/>
    </thing>
  <thing id="c5CFBMephSpl" name="Cult of Mephistopheles Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}fire bolt{/i}, {i}burning hands{/i}, {i}flaming sphere{/i}, and {i}fireball{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CFireBo"/>
    <tag group="ClsAllowSp" tag="spBurnHand"/>
    <tag group="ClsAllowSp" tag="spFlamSphe"/>
    <tag group="ClsAllowSp" tag="spFireball"/>
    <tag group="Custom" tag="FBMeph"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBMeph"/>
    </thing>
  <thing id="c5CFBZariSpl" name="Cult of Zariel Signature Spells" description="Spellcasters that are members of this cult can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}true strike{/i}, {i}heroism{/i}, {i}spiritual weapon{/i}, and {i}crusader&apos;s mantle{/i}." compset="CustomSpec" summary="Membership in the cult provides alternate spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spTrueStri"/>
    <tag group="ClsAllowSp" tag="spHeroism"/>
    <tag group="ClsAllowSp" tag="spSpirWeap"/>
    <tag group="ClsAllowSp" tag="sp5CCrusMa"/>
    <tag group="Custom" tag="FBZari"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBZari"/>
    </thing>
  <thing id="c5CFBBaphSpl" name="Boon of Baphomet Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}hunter&apos;s mark{/i}, {i}beast sense{/i}, and {i}slow{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CHunteM"/>
    <tag group="ClsAllowSp" tag="sp5CBeastS"/>
    <tag group="ClsAllowSp" tag="spSlow"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBBaph"/>
    </thing>
  <thing id="c5CFBDemoSpl" name="Boon of Demogorgon Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}charm person{/i}, {i}enlarge/reduce{/i}, and {i}vampiric touch{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spCharPers"/>
    <tag group="ClsAllowSp" tag="spEnlargeR"/>
    <tag group="ClsAllowSp" tag="spVampTouc"/>
    <tag group="Custom" tag="FBDemo"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBDemo"/>
    </thing>
  <thing id="c5CFBFrazSpl" name="Boon of Fraz-Urb&apos;luu Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}minor illusion{/i}, {i}disguise self{/i}, {i}invisibility{/i}, and {i}hypnotic pattern{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spMinoIllu"/>
    <tag group="ClsAllowSp" tag="spDisgSelf"/>
    <tag group="ClsAllowSp" tag="spInvisibi"/>
    <tag group="ClsAllowSp" tag="spHypnPatt"/>
    <tag group="Custom" tag="FBFraz"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBFraz"/>
    </thing>
  <thing id="c5CFBGrazSpl" name="Boon of Graz&apos;zt Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}false life{/i}, {i}hold person{/i}, and {i}fear{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spFalsLife"/>
    <tag group="ClsAllowSp" tag="spHoldPers"/>
    <tag group="ClsAllowSp" tag="spFear"/>
    <tag group="Custom" tag="FBGraz"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBGraz"/>
    </thing>
  <thing id="c5CFBJuibSpl" name="Boon of Juiblex Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}grease{/i}, {i}web{/i}, and {i}gaseous form{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spGrease"/>
    <tag group="ClsAllowSp" tag="spWeb"/>
    <tag group="ClsAllowSp" tag="spGaseForm"/>
    <tag group="Custom" tag="FBJuib"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBJuib"/>
    </thing>
  <thing id="c5CFBOrcuSpl" name="Boon of Orcus Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}false life{/i}, {i}ray of enfeeblement{/i}, and {i}animate dead{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spFalsLife"/>
    <tag group="ClsAllowSp" tag="spRayEnfe"/>
    <tag group="ClsAllowSp" tag="spAnimDead"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBOrcu"/>
    </thing>
  <thing id="c5CFBYeenSpl" name="Boon of Yeenoghu Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}hideous laughter{/i}, {i}crown of madness{/i}, and {i}fear{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="spHideLaug"/>
    <tag group="ClsAllowSp" tag="sp5CCrownM"/>
    <tag group="ClsAllowSp" tag="spFear"/>
    <tag group="Custom" tag="FBYeen"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBYeen"/>
    </thing>
  <thing id="c5CFBZuggSpl" name="Boon of Zuggtmoy Signature Spells" description="Spellcasters that receive this boon can replace spells they know with spells from the following list, so long as the replacing spell is the same level as the one it replaces: {i}ray of sickness{/i}, {i}suggestion{/i}, and {i}plant growth{/i}." compset="CustomSpec" summary="This boon grants alternative spells." uniqueness="unique">
    <tag group="ClsAllowSp" tag="sp5CRaySi"/>
    <tag group="ClsAllowSp" tag="spSuggesti"/>
    <tag group="ClsAllowSp" tag="spPlanGrow"/>
    <tag group="Custom" tag="FBZugg"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
foreach pick in hero from Class where "Classes.?"
perform eachpick.pushtags[ClsAllowSp.?]
    nexteach]]></eval>
    <pickreq thing="c5CFBZugg"/>
    </thing>
  <thing id="c5CFBAsmo" name="Cult of Asmodeus" description="The most worthy of Asmodeus&apos; followers gain the Demands of Nessus trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBAsmo"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBAsmo"]]></eval>
    </thing>
  <thing id="c5CFBAtro" name="Cult of Atropus the World Born Dead" description="Members of the Cult of Atropus can gain the Gaze of Corruption trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBAtro"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBAtro"]]></eval>
    </thing>
  <thing id="c5CFBBaal" name="Cult of Baalzebul" description="Baalzebul can grant a favored cultist the Path of Baalzebul trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBBaal"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBBaal"]]></eval>
    </thing>
  <thing id="c5CFBBore" name="Cult of Borem of the Lake of Boiling Mud" description="Members of the Cult of Borem can gain the Borem&apos;s Embrace trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBBore"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBBore"]]></eval>
    </thing>
  <thing id="c5CFBDisp" name="Cult of Dispater" description="Dispater can grant his cultists the Infernal Insight trait. His cult leaders may also be granted the Vexing Escape trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBDisp"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBDisp"]]></eval>
    </thing>
  <thing id="c5CFBFier" name="Cult of Fierna" description="Fierna can grant her cultists the Infernal Loyalty trait. Her cult leaders may also be granted the Loyalty Beyond Death trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBFier"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBFier"]]></eval>
    </thing>
  <thing id="c5CFBGery" name="Cult of Geryon" description="Geryon can grant his cultists the Crushing Blow trait. His cult leaders may also be granted the Indomitable Strength trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBGery"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBGery"]]></eval>
    </thing>
  <thing id="c5CFBGlas" name="Cult of Glasya" description="Glasya grants her cultists the Step into Shadows trait. Her cult leaders may also be granted the Infernal Ring Leader trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBGlas"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBGlas"]]></eval>
    </thing>
  <thing id="c5CFBHaas" name="Cult of Haask the Voice of Hargut" description="Members of the Cult of Haask can gain the Haask&apos;s Presence trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBHaas"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBHaas"]]></eval>
    </thing>
  <thing id="c5CFBLevi" name="Cult of Levistus" description="Those who have struck a deal with Levistus trade their soul in return for the Path of Levistus trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBLevi"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBLevi"]]></eval>
    </thing>
  <thing id="c5CFBMamm" name="Cult of Mammon" description="Mammon can grant his cultists the Grasping Hands trait. His cult leaders may also be granted the Promise of Wealth trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBMamm"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBMamm"]]></eval>
    </thing>
  <thing id="c5CFBMeph" name="Cult of Mephistopheles" description="Mephistopheles can grant his cultists the Spell Shield trait. His cult leaders may also be granted the Spell Leech trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBMeph"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBMeph"]]></eval>
    </thing>
  <thing id="c5CFBThar" name="Cult of Tharizdun the Chained God" description="Members of the cult of Tharzidun can gain the Tharzidun&apos;s Spark trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBThar"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBThar"]]></eval>
    </thing>
  <thing id="c5CFBTyra" name="Cult of Tyranthraxus the Flamed One" description="Members of the Cult of Tyranthraxus can gain the Radiant Flames trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBTyra"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBTyra"]]></eval>
    </thing>
  <thing id="c5CFBZari" name="Cult of Zariel" description="Zariel can grant her cultists the Ferocious Surge trait. Her cult leaders may also be granted the Infernal Tactics trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBZari"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBZari"]]></eval>
    </thing>
  <thing id="c5CFBBalo" name="Demonic Boon of the Balor" description="Demons with enough intelligence and power can grant boons of their own to make a creature into their pawn. A balor can grant the Fiery Soul trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBBalo"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBBalo"]]></eval>
    </thing>
  <thing id="c5CFBBaph" name="Demonic Boon of Baphomet" description="All of Baphomet&apos;s followers gain the Labyrinthine Recall trait. He grants his rank-and-file cultists the Unerring Tracker trait. His cult leaders may also be granted the Incite the Hunters trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBBaph"]]></eval>
    </thing>
  <thing id="c5CFBDemo" name="Demonic Boon of Demogorgon" description="Demogorgon&apos;s most blessed devotees gain the Two Minds of Madness trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBDemo"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBDemo"]]></eval>
    </thing>
  <thing id="c5CFBFraz" name="Demonic Boon of Fraz-Urb&apos;luu" description="Fraz-Urb&apos;luu may teach his initiates the Liar&apos;s Eye trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBFraz"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBFraz"]]></eval>
    </thing>
  <thing id="c5CFBGori" name="Demonic Boon of the Goristro" description="Demons with enough intelligence and power can grant boons of their own to make a creature into their pawn. A goristro can grant the Labyrinthine Recall trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBGori"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBGori"]]></eval>
    </thing>
  <thing id="c5CFBGraz" name="Demonic Boon of Graz&apos;zt" description="Graz&apos;zt grants his cultists the Joy from Pain trait. His cult leaders also are granted the Master of Pleasures trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBGraz"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBGraz"]]></eval>
    </thing>
  <thing id="c5CFBJuib" name="Demonic Boon of Juiblex" description="Juiblex grants his lesser cultists the Liquid Movement trait in return for their minds. His most dedicated followers also are granted the Slimy Organs trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBJuib"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBJuib"]]></eval>
    </thing>
  <thing id="c5CFBMari" name="Demonic Boon of the Marilith" description="Demons with enough intelligence and power can grant boons of their own to make a creature into their pawn. A marilith can grant the Serpentine Reaction trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBMari"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBMari"]]></eval>
    </thing>
  <thing id="c5CFBNalf" name="Demonic Boon of the Nalfeshnee" description="Demons with enough intelligence and power can grant boons of their own to make a creature into their pawn. A nalfeshnee can grant the Guarded Mind trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBNalf"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBNalf"]]></eval>
    </thing>
  <thing id="c5CFBOrcu" name="Demonic Boon of Orcus" description="Orcus&apos; regular cultists receive the Undying Soul trait, while the leaders of his cult receive the Aura of Death trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBOrcu"]]></eval>
    </thing>
  <thing id="c5CFBYeen" name="Demonic Boon of Yeenoghu" description="Yeenoghu&apos;s most devoted followers are granted the Gnashing Jaws action option and the Rampage trait. His cult leaders are granted the Aura of Bloodthirst trait." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBYeen"/>
    <tag group="Helper" tag="Primary"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBYeen"]]></eval>
    </thing>
  <thing id="c5CFBZugg" name="Demonic Boon of Zuggtmoy" description="Every victim of Zuggtmoy gains the Spore Kissed trait." compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="Primary"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AllowRCust" tag="cfg5CFndBoon"/>
    <tag group="Custom" tag="FBZugg"/>
    <eval phase="First"><![CDATA[~ If we're disabled, do nothing 
doneif (tagis[Helper.Disable] <> 0)

var thresh as string
var sep as string
thresh = hero.childfound[cfg5CFndBoon].field[cfgAllow2].text

if (empty(thresh)=0) then
sep = " | "
endif

hero.childfound[cfg5CFndBoon].field[cfgAllow2].text &= sep & "Custom.FBZugg"]]></eval>
    </thing>
  <thing id="c5CFBAsmoDoN" name="Demands of Nessus" description="At the beginning of each of this creature&apos;s turns, it can choose one ally visible to and within 30 feet of it. The ally loses 10 hit points, and this creature regains the same amount of hit points. If this creature is incapacitated, the closest ally within 30 feet is automatically chosen. " compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBAsmo"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Move"/>
    <pickreq thing="c5CFBAsmo"/>
    </thing>
  <thing id="c5CFBAtroGoC" name="Gaze of Corruption" description="The cultist targets one creature visible to and within 30 feet of it. The target must make a DC 15 Constitution save. On a failure, it suffers 16 (3d10}) necrotic damage and is poisoned for 1 minute. The poisoned target can repeat the save at the end of each of its turns, ending the effect for itself with a successful save." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <fieldval field="wDieCount" value="3"/>
    <fieldval field="wDieSize" value="10"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Custom" tag="FBAtro"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="aCON"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="DamageType" tag="dtNecrotic"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Recharge" tag="6"/>
    <pickreq thing="c5CFBAtro"/>
    </thing>
  <thing id="c5CFBBaalPoB" name="Path of Baalzebul" description="This creature can use a bonus action to choose an ally visible to and within 30 feet of it. Until the beginning of this creature&apos;s next turn, it has advantage on all ability checks and attack rolls, and the ally has disadvantage on the same types of roll as well as saving throws." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Custom" tag="FBBaal"/>
    <tag group="abRange" tag="Feet"/>
    <pickreq thing="c5CFBBaal"/>
    </thing>
  <thing id="c5CFBBoreBoE" name="Borem&apos;s Embrace" description="The cultist touches a creature within 5 feet of it. The target creature must make a DC 15 Dexterity save. On a failure, it is coated in hot, sticky mud, its speed is halved, it cannot use reactions, and it suffers 10 (3d6) fire damage at the beginning of each of its turns. The effect ends after 1 minute, if the cultist dies, if the cultist is incapacitated, or if the target is fully immersed in water." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="5"/>
    <fieldval field="abDuration" value="1"/>
    <fieldval field="wDieCount" value="3"/>
    <fieldval field="wDieSize" value="6"/>
    <tag group="abSave" tag="aDEX"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="Custom" tag="FBBore"/>
    <tag group="Usage" tag="Day"/>
    <tag group="DamageType" tag="dtFire"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <pickreq thing="c5CFBBore"/>
    </thing>
  <thing id="c5CFBDispVeE" name="Vexing Escape" description="When it takes damage, this creature can use a reaction to reduce the damage to 0 and teleport to an open space it can see, up to 60 feet away." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBDisp"/>
    <tag group="Usage" tag="Day"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <pickreq thing="c5CFBDisp"/>
    </thing>
  <thing id="c5CFBFierInL" name="Infernal Loyalty" description="While within 30 feet of a creature that has the Loyalty Beyond Death trait, this creature has advantage on saving throws. It must be able to see the creature with that trait." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBFier"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <pickreq thing="c5CFBFier"/>
    </thing>
  <thing id="c5CFBGeryCrB" name="Crushing Blow" description="This creature can use a bonus action to grant itself a bonus to its next successful melee weapon attack within the next minute. The bonus is equal to the greater of 1 or its Strength modifier." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBGery"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

var str as number

str = maximum(1,hero.childfound[aSTR].field[aBonus].value)

field[abText].text = "+" & str]]></eval>
    <pickreq thing="c5CFBGery"/>
    </thing>
  <thing id="c5CFBGlasSiS" name="Step into Shadows" description="This creature can use an action to magically turn itself and anything it&apos;s wearing and carrying invisible. The invisibility lasts until the end of its next turn." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBGlas"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <pickreq thing="c5CFBGlas"/>
    </thing>
  <thing id="c5CFBHaasHaP" name="Haask&apos;s Presence" description="This creature transforms into a Tiny, leech-like creature and teleports itself onto the shoulder of a humanoid visible to and within 30 feet of it. The target must make a DC 15 Charisma save. On a failure, the target is charmed and controlled by the cultist on the target&apos;s next turn. At the end of that turn, the cultist teleports to a visible open space within 30 feet and returns to its regular form. While in the leech form, the cultist cannot be targeted directly by and attack or effect, but is still subject to areas of effect as usual." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="Custom" tag="FBHaas"/>
    <tag group="Usage" tag="Day"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="aCHA"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="User" tag="Tracker"/>
    <pickreq thing="c5CFBHaas"/>
    </thing>
  <thing id="c5CFBLeviPoL" name="Path of Levistus" description="This creature magically teleports up to 1 mile away, to a location of Levistus&apos;s choosing, and all its hit points are restored. The creature can do this as an action or when it would otherwise die. Once it has used this ability, it cannot use it again." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="1"/>
    <fieldval field="trkMax" value="1"/>
    <tag group="Custom" tag="FBLevi"/>
    <tag group="abRange" tag="Mile"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <pickreq thing="c5CFBLevi"/>
    </thing>
  <thing id="c5CFBMammGrH" name="Grasping Hands" description="This creature can use a bonus action to make a Dexterity (Sleight of Hand) check versus a target&apos;s Wisdom (Insight) check. The target must be visible to and within 15 feet of this creature. If the check succeeds, an item of this creature&apos;s choice, belonging to the target, is magically teleported to this creature&apos;s open hand. The item must be visible, must be able to be held, can&apos;t weight more than 10 pounds, and cannot be currently held by the target creature." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="15"/>
    <tag group="Custom" tag="FBMamm"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abRange" tag="Feet"/>
    <pickreq thing="c5CFBMamm"/>
    </thing>
  <thing id="c5CFBMephSpS" name="Spell Shield" description="This creature makes its saves against spells with advantage. If it succeeds on such a saving throw, it receives temporary hit points that equal the level of the spell." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBMeph"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

#situational[hero.child[svAll],"Advantage against spells.",field[thingname].text]]]></eval>
    <pickreq thing="c5CFBMeph"/>
    </thing>
  <thing id="c5CFBTharThS" name="Tharizdun&apos;s Spark" description="This cultist can touch one of its simple, martial, or natural weapons. The next creature hit by that weapon must make a DC15 Wisdom save. On a failure, it suffers from Short-Term Madness (see the table in Chapter 8 of the DMG) for 10 minutes. The mad creature can repeat the save at the end of each minute, ending the madness for itself on a successful save." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBThar"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Recharge" tag="6"/>
    <tag group="abSave" tag="aWIS"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <pickreq thing="c5CFBThar"/>
    </thing>
  <thing id="c5CFBTyraRaF" name="Radiant Flames" description="The cultist becomes engulfed in multicolored flames for 1 minute. It can end the flames freely (no action needed), and they automatically end if it dies or is incapacitated. While inflamed, the cultist has telepathy out to 30 feet, and it can use a bonus action to teleport up to 30 feet to a visible and open space. Any creatures starting their turn within 5 feet of the cultist must make a DC 15 Dexterity save. On a failure, such a creature suffers 16 (3d10) radiant damage. On a success, it takes half that." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abDuration" value="1"/>
    <fieldval field="wDieCount" value="3"/>
    <fieldval field="wDieSize" value="10"/>
    <tag group="Usage" tag="Day"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBTyra"/>
    <tag group="Helper" tag="NoAttrDam"/>
    <tag group="DamageType" tag="dtRadiant"/>
    <tag group="abSave" tag="aDEX"/>
    <pickreq thing="c5CFBTyra"/>
    </thing>
  <thing id="c5CFBZariFeS" name="Ferocious Surge" description="This creature can turn a non-critical hit on one of its successful attacks into a critical hit." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBZari"/>
    <tag group="Usage" tag="ShortRest"/>
    <pickreq thing="c5CFBZari"/>
    </thing>
  <thing id="c5CFBBaloFiS" name="Fiery Soul" description="This creature is resistant to fire damage. It explodes upon death, dealing fire damage equaling its number of Hit Dice to each creature within 10 feet of it." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="10"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abAction" tag="None"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Custom" tag="FBBalo"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostLevel" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
var HD as number
HD = herofield[tHitDice].value
field[abText].text = HD & " Fire Damage"]]></eval>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
perform hero.assign[DamageRes.dtFire]]]></eval>
    <pickreq thing="c5CFBBalo"/>
    </thing>
  <thing id="c5CFBBaphUnT" name="Unerring Tracker" description="This creature can magically create a psychic link to a creature it can see, using a bonus action. For the next hour, it can use a bonus action to learn the current distance and direction to the target, so long as they are both on the same plane of existence. The link ends if this creature is incapacitated, or if it creates this link to another target." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBBaph"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <pickreq thing="c5CFBBaph"/>
    </thing>
  <thing id="c5CFBDemoTMM" name="Two Minds of Madness" description="The creatures makes all its Intelligence, Wisdom, and Charisma saving throws with advantage." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBDemo"/>
    <tag group="Helper" tag="Secondary"/>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

#situational[hero.child[svINT],"Advantage on all saves.",field[thingname].text]
#situational[hero.child[svWIS],"Advantage on all saves.",field[thingname].text]
#situational[hero.child[svCHA],"Advantage on all saves.",field[thingname].text]]]></eval>
    <pickreq thing="c5CFBDemo"/>
    </thing>
  <thing id="c5CFBFrazLiE" name="Liar&apos;s Eye" description="This creature makes its Wisdom (Insight or Perception) checks with advantage. It can also use a bonus action to automatically detect the location of any illusions and hidden creatures within 15 feet." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="15"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBFraz"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <eval phase="Final"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
#situational[hero.child[skPercep], "Advantage on all checks.", field[thingname].text]
#situational[hero.child[skInsight], "Advantage on all checks.", field[thingname].text]]]></eval>
    <pickreq thing="c5CFBFraz"/>
    </thing>
  <thing id="c5CFBGoriLaR" name="Labyrinthine Recall" description="This creature is able to perfectly remember any path it has traveled." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBGori"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <prereq message="Requires Demonic Boon of Baphomet or the Goristro">
      <validate><![CDATA[var total as number

if (hero.childlives[c5CFBBaph] <> 0) then
total +=1
endif

if (hero.childlives[c5CFBGori] <> 0) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="c5CFBGrazJfP" name="Joy from Pain" description="When this creature takes a critical it, it can use a reaction to make a melee weapon attack." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBGraz"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <pickreq thing="c5CFBGraz"/>
    </thing>
  <thing id="c5CFBJuibLiM" name="Liquid Movement" description="This creature can use an action to move up to 20 feet through an inch-diameter space. This movement must end in a space where its full form can fit, otherwise it suffers 5 force damage and returns to where it started the movement." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBJuib"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <pickreq thing="c5CFBJuib"/>
    </thing>
  <thing id="c5CFBMariSeR" name="Serpentine Reaction" description="This creature has an extra reaction every round, usable only to make an attack of opportunity." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBMari"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <pickreq thing="c5CFBMari"/>
    </thing>
  <thing id="c5CFBNalfGuM" name="Guarded Mind" description="This creature has immunity to the frightened condition." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBNalf"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
perform hero.assign[DamageRes.dtRadiant]]]></eval>
    <pickreq thing="c5CFBNalf"/>
    </thing>
  <thing id="c5CFBOrcuUnS" name="Undying Soul" description="When reduced to 0 hit points, this creature immediately makes a DC 10 Constitution save. On a success, it instead is reduced to 1 hit point." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <pickreq thing="c5CFBOrcu"/>
    </thing>
  <thing id="c5CFBYeenGnJ" name="Gnashing Jaws" description="{i}Melee Weapon Attack:{/i} bonus to hit equals this creature&apos;s proficiency bonus plus its Strength modifier, reach 5 ft., one target. {i}Hit:{/i} 1d4 + this creature&apos;s Strength modifier piercing damage." compset="CustomSpec" uniqueness="unique">
    <fieldval field="wDieCount" value="1"/>
    <fieldval field="wDieSize" value="4"/>
    <fieldval field="abRange" value="5"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wCategory" tag="Unarmed"/>
    <tag group="Custom" tag="FBYeen"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="DamageType" tag="dtPiercing"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Action"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="User" tag="NoAutoName"/>
    <pickreq thing="c5CFBYeen"/>
    </thing>
  <thing id="c5CFBZuggSpK" name="Spore Kissed" description="This creature has immunity to the charmed and frightened conditions. If it is reduced to 0 hit points, every creature within 10 feet of it suffers poison damage equaling this creature&apos;s number of Hit Dice." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="10"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="Custom" tag="FBZugg"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

perform hero.assign[CondImm.pcnFright]
perform hero.assign[CondImm.pcnCharmed]]]></eval>
    <eval phase="PostLevel" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

var HD as number
HD = herofield[tHitDice].value
field[abText].text = HD & " Poison Damage"]]></eval>
    <pickreq thing="c5CFBZugg"/>
    </thing>
  <thing id="c5CFBDispInI" name="Infernal Insight" description="This creature can use a bonus action to grant itself advantage on all ability checks and attack rolls it makes until the end of its current turn." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBDisp"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="User" tag="Tracker"/>
    <pickreq thing="c5CFBDisp"/>
    </thing>
  <thing id="c5CFBFierLBD" name="Loyalty Beyond Death" description="When it sees an ally reduced to 0 hit points, this creature can use a reaction to cause the ally to instead drop to 1 hit point. The ally then also gains temporary hit points equaling this creature&apos;s Charisma score plus half its number of Hit Dice." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBFier"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="User" tag="Tracker"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <eval phase="PostAttr"><![CDATA[
doneif (tagis[Helper.Disable] <> 0)
var HD as number
HD = herofield[tHitDice].value
HD /= 2
HD = round(HD,0,-1)
HD += hero.childfound[aCHA].field[aFinalVal].value


field[abText].text = HD & " HP"]]></eval>
    <pickreq thing="c5CFBFier"/>
    </thing>
  <thing id="c5CFBGeryInS" name="Indomitable Strength" description="When taking damage, this creature can use a reaction to subtract 1d10 from the amount of damage taken." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBGery"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Recharge" tag="5"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="User" tag="Tracker"/>
    <pickreq thing="c5CFBGery"/>
    </thing>
  <thing id="c5CFBGlasIRL" name="Infernal Ring Leader" description="This creature can use a reaction to redirect damage when hit by an attack. It chooses an ally visible to and within 5 feet of it to be hit instead." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="5"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="Custom" tag="FBGlas"/>
    <tag group="abRange" tag="Feet"/>
    <pickreq thing="c5CFBGlas"/>
    </thing>
  <thing id="c5CFBMammPoW" name="Promise of Wealth" description="This creature can use a bonus action to pick a target it can see plus up to five allies. The allies become convinced that the target is carrying riches. Until the end of this creature&apos;s next turn, those allies have advantage on attack rolls against the target." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Custom" tag="FBMamm"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <pickreq thing="c5CFBMamm"/>
    </thing>
  <thing id="c5CFBMephSpL" name="Spell Leech" description="This creature can use a bonus action to choose an ally visible to and within 30 feet of it. The ally loses its lowest-level spell slot, and this creature gains the slot." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBMeph"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <pickreq thing="c5CFBMeph"/>
    </thing>
  <thing id="c5CFBZariInT" name="Infernal Tactics" description="Immediately after rolling initiative, this creature can rearrange the initiatives of itself and up to three allies it can see. It cannot do this if it is incapacitated." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBZari"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <pickreq thing="c5CFBZari"/>
    </thing>
  <thing id="c5CFBBaphItH" name="Incite the Hunters" description="This creature can use an action to grant all of its allies with the Unerring Tracker trait within 30 feet of it a single weapon attack. Such an ally must use a reaction to make the attack, and it must be against the target of its own Unerring Tracker trait." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="1"/>
    <fieldval field="abRange" value="30"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="Usage" tag="ShortRest"/>
    <tag group="FeatureTyp" tag="Action"/>
    <tag group="abAction" tag="Action"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <pickreq thing="c5CFBBaph"/>
    </thing>
  <thing id="c5CFBGrazMoP" name="Master of Pleasures" description="When taking damage, this creature can use a reaction to magically grant itself and up to 3 allies within 30 feet 5 temporary hit points." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <fieldval field="abText" value="5 HP"/>
    <tag group="FeatureTyp" tag="Reaction"/>
    <tag group="abAction" tag="Reaction"/>
    <tag group="Custom" tag="FBGraz"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="LvNamePar" tag="AppText"/>
    <pickreq thing="c5CFBGraz"/>
    </thing>
  <thing id="c5CFBJuibSlO" name="Slimy Organs" description="This creature has resistance to bludgeoning, piercing, and slashing damage from nonmagical attacks. Whenever it suffers a critical hit or is reduced to 0 hit points, every creature within 5 feet of it suffers acid damage equaling this creature&apos;s number of Hit Dice." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="5"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <tag group="Custom" tag="FBJuib"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostLevel" index="2"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

var HD as number
HD = herofield[tHitDice].value
field[abText].text = HD & " Acid Damage"]]></eval>
    <eval phase="PreLevel"><![CDATA[doneif (tagis[Helper.Disable] <> 0)

perform hero.assign[DamComRes.dcAtkNonMa]]]></eval>
    <pickreq thing="c5CFBJuib"/>
    </thing>
  <thing id="c5CFBOrcuAoD" name="Aura of Death" description="So long as it is not incapacitated, this creature emanates an aura of death 30 feet in every direction. While in this aura, it and any allied undead have immunity to the frightened condition and resistance to radiant damage. Its enemies have disadvantage on death saving throws while within the aura. The aura can be blocked by total cover." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PreAttr"><![CDATA[doneif (tagis[Helper.Disable] <> 0)
perform hero.assign[CondImm.pcnFright]
perform hero.assign[DamageRes.dtRadiant]]]></eval>
    <pickreq thing="c5CFBOrcu"/>
    </thing>
  <thing id="c5CFBYeenRam" name="Rampage" description="When this creature reduces a creature to 0 hit points via a melee attack during its own turn, it can use a bonus action to move up to half its speed then make one Gnashing Jaws attack." compset="CustomSpec" uniqueness="unique">
    <tag group="Custom" tag="FBYeen"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Bonus"/>
    <pickreq thing="c5CFBYeen"/>
    </thing>
  <thing id="c5CFBYeenAoB" name="Aura of Bloodthirst" description="Creatures that have the Rampage trait that are within 10 feet of this creature can use a bonus action to make their Gnashing Jaws attack. This trait does not work if this creature is incapacitated." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="10"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Custom" tag="FBYeen"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abAction" tag="Move"/>
    <pickreq thing="c5CFBYeen"/>
    </thing>
  <thing id="c5CFBZariFoN" name="Fury of the Nine" description="As a bonus action, the cambion picks another creature within 120 feet that can see or hear it. The chosen creature is granted advantage on its attack rolls and saving throws. This benefit lasts for 1 minute, or until the cambion uses this trait again.\n\nCambions of Zariel and Geryon often are spawned to serve as leaders of war among those devils&apos; followers. Their Fiendish Charm trait is replaced with this trait." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="120"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="abAction" tag="Bonus"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="Custom" tag="FBZari"/>
    <tag group="Custom" tag="FBGery"/>
    <tag group="Helper" tag="Secondary"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[ra5CMMFieC].assign[Helper.SpcReplace]
perform hero.childfound[ra5CMMFieC].tagreplace[Helper.ShowSpec,Helper.Disable]
perform hero.childfound[ra5CMMFieC].delete[FeatureTyp.Action]]]></eval>
    <pickreq thing="r5CMMCamb"/>
    <prereq message="Requires Cult of Geryon or Cult of Zariel">
      <validate><![CDATA[var total as number

if (hero.childlives[c5CFBZari] <> 0) then
total +=1
endif

if (hero.childlives[c5CFBGery] <> 0) then
total +=1
endif

if (total > 0) then
@valid = 1
endif]]></validate>
      </prereq>
    </thing>
  <thing id="c5CFBOrcuSoG" name="Spawn of the Grave" description="At the end of each of the cambion&apos;s turns, every undead of its choice visible to and within 30 feet of it gains 10 temporary hit points. This does not occur if the cambion is incapacitated.\n\nCambions infused with the power of Orcus spawn with this trait, replacing its Fiendish Charm ability." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Custom" tag="FBOrcu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abAction" tag="None"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[ra5CMMFieC].assign[Helper.SpcReplace]
perform hero.childfound[ra5CMMFieC].tagreplace[Helper.ShowSpec,Helper.Disable]
perform hero.childfound[ra5CMMFieC].delete[FeatureTyp.Action]]]></eval>
    <pickreq thing="r5CMMCamb"/>
    <pickreq thing="c5CFBOrcu"/>
    </thing>
  <thing id="c5CFBBaphHOC" name="Horned One&apos;s Call" description="When using its Multiattack on one single creature, the cambion can pick one of its allies visible to and within 30 feet of itself. That ally can use a reaction to make one melee attack on a target of its choice.\n\nCambions infused with the power of Baphomet spawn with this trait, replacing its Fiendish Charm ability." compset="CustomSpec" uniqueness="unique">
    <fieldval field="abRange" value="30"/>
    <tag group="FeatureTyp" tag="Special"/>
    <tag group="Custom" tag="FBBaph"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="abAction" tag="None"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="First" priority="500" index="2"><![CDATA[
     doneif (tagis[Helper.Disable] <> 0)

perform hero.childfound[ra5CMMFieC].assign[Helper.SpcReplace]
perform hero.childfound[ra5CMMFieC].tagreplace[Helper.ShowSpec,Helper.Disable]
perform hero.childfound[ra5CMMFieC].delete[FeatureTyp.Action]]]></eval>
    <pickreq thing="r5CMMCamb"/>
    <pickreq thing="c5CFBBaph"/>
    </thing>
  <thing id="c5CBldCrln" name="Blessed of Corellon" description="Some elves are so blessed by their originating deity that they relfect the primal, ever-changing state of elvenkind.\n\nWhenever such an elf completes a long rest, they can change their sex." compset="CustomSpec" uniqueness="unique">
    <usesource source="5eMTOFCP"/>
    <tag group="AllowRCust" tag="cfg5CSupGif"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="Usage" tag="5C30Days" name="/30 Days"/>
    </thing>
  </document>
